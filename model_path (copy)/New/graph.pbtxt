node {
  name: "batch_size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "batch_size"
      }
    }
  }
}
node {
  name: "batch_size/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "batch_size"
  op: "ScalarSummary"
  input: "batch_size/tags"
  input: "batch_size/values"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_size_per_gpu/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "batch_size_per_gpu"
      }
    }
  }
}
node {
  name: "batch_size_per_gpu/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "batch_size_per_gpu"
  op: "ScalarSummary"
  input: "batch_size_per_gpu/tags"
  input: "batch_size_per_gpu/values"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "/home/niddal/Desktop/PhD_projects/pixel_link-master/datasets/TF/icdar2017_train.tfrecord"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/Greater"
  op: "Greater"
  input: "icdar2017_data_provider/parallel_read/filenames/Size"
  input: "icdar2017_data_provider/parallel_read/filenames/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/Assert/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/Assert/Assert/data_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/Assert/Assert"
  op: "Assert"
  input: "icdar2017_data_provider/parallel_read/filenames/Greater"
  input: "icdar2017_data_provider/parallel_read/filenames/Assert/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/Identity"
  op: "Identity"
  input: "icdar2017_data_provider/parallel_read/filenames/Const"
  input: "^icdar2017_data_provider/parallel_read/filenames/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/RandomShuffle"
  op: "RandomShuffle"
  input: "icdar2017_data_provider/parallel_read/filenames/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames"
  op: "FIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "icdar2017_data_provider/parallel_read/filenames"
  input: "icdar2017_data_provider/parallel_read/filenames/RandomShuffle"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "icdar2017_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "icdar2017_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "icdar2017_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/ToFloat"
  op: "Cast"
  input: "icdar2017_data_provider/parallel_read/filenames/filenames_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/mul"
  op: "Mul"
  input: "icdar2017_data_provider/parallel_read/filenames/ToFloat"
  input: "icdar2017_data_provider/parallel_read/filenames/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/fraction_of_32_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "icdar2017_data_provider/parallel_read/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "icdar2017_data_provider/parallel_read/filenames/fraction_of_32_full/tags"
  input: "icdar2017_data_provider/parallel_read/filenames/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/common_queue"
  op: "RandomShuffleQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 10000
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 7000
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/common_queue_Size"
  op: "QueueSizeV2"
  input: "icdar2017_data_provider/parallel_read/common_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/ToFloat"
  op: "Cast"
  input: "icdar2017_data_provider/parallel_read/common_queue_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/mul"
  op: "Mul"
  input: "icdar2017_data_provider/parallel_read/ToFloat"
  input: "icdar2017_data_provider/parallel_read/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/fraction_of_10000_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "icdar2017_data_provider/parallel_read/fraction_of_10000_full"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/fraction_of_10000_full"
  op: "ScalarSummary"
  input: "icdar2017_data_provider/parallel_read/fraction_of_10000_full/tags"
  input: "icdar2017_data_provider/parallel_read/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/TFRecordReaderV2"
  op: "TFRecordReaderV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/ReaderReadV2"
  op: "ReaderReadV2"
  input: "icdar2017_data_provider/parallel_read/TFRecordReaderV2"
  input: "icdar2017_data_provider/parallel_read/filenames"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "icdar2017_data_provider/parallel_read/common_queue"
  input: "icdar2017_data_provider/parallel_read/ReaderReadV2"
  input: "icdar2017_data_provider/parallel_read/ReaderReadV2:1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/common_queue_Close"
  op: "QueueCloseV2"
  input: "icdar2017_data_provider/parallel_read/common_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "icdar2017_data_provider/parallel_read/common_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_data_provider/parallel_read/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "icdar2017_data_provider/parallel_read/common_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/key_image/encoded"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/Reshape"
  op: "Reshape"
  input: "icdar2017_data_provider/ParseSingleExample/key_image/encoded"
  input: "icdar2017_data_provider/ParseSingleExample/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/key_image/filename"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/Reshape_1"
  op: "Reshape"
  input: "icdar2017_data_provider/ParseSingleExample/key_image/filename"
  input: "icdar2017_data_provider/ParseSingleExample/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/key_image/format"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "jpeg"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/Reshape_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/Reshape_2"
  op: "Reshape"
  input: "icdar2017_data_provider/ParseSingleExample/key_image/format"
  input: "icdar2017_data_provider/ParseSingleExample/Reshape_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample"
  op: "ParseSingleExample"
  input: "icdar2017_data_provider/parallel_read/common_queue_Dequeue:1"
  input: "icdar2017_data_provider/ParseSingleExample/Reshape"
  input: "icdar2017_data_provider/ParseSingleExample/Reshape_1"
  input: "icdar2017_data_provider/ParseSingleExample/Reshape_2"
  input: "icdar2017_data_provider/ParseSingleExample/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dense_keys"
    value {
      list {
        s: "image/encoded"
        s: "image/filename"
        s: "image/format"
        s: "image/shape"
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "num_sparse"
    value {
      i: 13
    }
  }
  attr {
    key: "sparse_keys"
    value {
      list {
        s: "image/object/bbox/label"
        s: "image/object/bbox/x1"
        s: "image/object/bbox/x2"
        s: "image/object/bbox/x3"
        s: "image/object/bbox/x4"
        s: "image/object/bbox/xmax"
        s: "image/object/bbox/xmin"
        s: "image/object/bbox/y1"
        s: "image/object/bbox/y2"
        s: "image/object/bbox/y3"
        s: "image/object/bbox/y4"
        s: "image/object/bbox/ymax"
        s: "image/object/bbox/ymin"
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Reshape"
  op: "Reshape"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:39"
  input: "icdar2017_data_provider/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Reshape_1"
  op: "Reshape"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:40"
  input: "icdar2017_data_provider/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Reshape_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Reshape_2"
  op: "Reshape"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:41"
  input: "icdar2017_data_provider/Reshape_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Reshape_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Reshape_3"
  op: "Reshape"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:42"
  input: "icdar2017_data_provider/Reshape_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense"
  op: "SparseToDense"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:4"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:30"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:17"
  input: "icdar2017_data_provider/SparseToDense/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_data_provider/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "raw"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Equal"
  op: "Equal"
  input: "icdar2017_data_provider/Reshape_2"
  input: "icdar2017_data_provider/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Equal_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RAW"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/Equal_1"
  op: "Equal"
  input: "icdar2017_data_provider/Reshape_2"
  input: "icdar2017_data_provider/Equal_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/LogicalOr"
  op: "LogicalOr"
  input: "icdar2017_data_provider/Equal"
  input: "icdar2017_data_provider/Equal_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/preds_c"
  op: "Pack"
  input: "icdar2017_data_provider/LogicalOr"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Cast"
  op: "Cast"
  input: "icdar2017_data_provider/case/preds_c"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/num_true_conds"
  op: "Sum"
  input: "icdar2017_data_provider/case/Cast"
  input: "icdar2017_data_provider/case/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "icdar2017_data_provider/case/n_true_conds"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/LessEqual"
  op: "LessEqual"
  input: "icdar2017_data_provider/case/num_true_conds"
  input: "icdar2017_data_provider/case/n_true_conds"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (icdar2017_data_provider/LogicalOr:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/LessEqual"
  input: "icdar2017_data_provider/case/LessEqual"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "icdar2017_data_provider/case/LessEqual"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/switch_t"
  device: "/device:CPU:0"
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/switch_t"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/case/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (icdar2017_data_provider/LogicalOr:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/Assert/Switch"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/Assert/data_0"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/Assert/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 1
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/LessEqual"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/case/LessEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "icdar2017_data_provider/case/preds_c"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/case/preds_c"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/switch_f"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/case/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/control_dependency_1"
  input: "icdar2017_data_provider/case/Assert/AssertGuard/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/LogicalOr"
  input: "icdar2017_data_provider/LogicalOr"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/switch_t"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/switch_f"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/pred_id"
  op: "Identity"
  input: "icdar2017_data_provider/LogicalOr"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/DecodeRaw"
  op: "DecodeRaw"
  input: "icdar2017_data_provider/case/cond/DecodeRaw/Switch:1"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/DecodeRaw/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/Reshape"
  input: "icdar2017_data_provider/case/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/is_jpeg/Substr/pos"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/is_jpeg/Substr/len"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/is_jpeg/Substr"
  op: "Substr"
  input: "icdar2017_data_provider/case/cond/is_jpeg/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/is_jpeg/Substr/pos"
  input: "icdar2017_data_provider/case/cond/is_jpeg/Substr/len"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "unit"
    value {
      s: "BYTE"
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/is_jpeg/Substr/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/Reshape"
  input: "icdar2017_data_provider/case/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/is_jpeg/Equal/y"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\377\330\377"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/is_jpeg/Equal"
  op: "Equal"
  input: "icdar2017_data_provider/case/cond/is_jpeg/Substr"
  input: "icdar2017_data_provider/case/cond/is_jpeg/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/is_jpeg/Equal"
  input: "icdar2017_data_provider/case/cond/is_jpeg/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/switch_t"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/switch_f"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/pred_id"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/is_jpeg/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/DecodeJpeg"
  op: "DecodeJpeg"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/DecodeJpeg/Switch:1"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/DecodeJpeg/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/is_jpeg/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr/pos"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr/len"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr"
  op: "Substr"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr/pos"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr/len"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "unit"
    value {
      s: "BYTE"
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/is_jpeg/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr/pos"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr/len"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr"
  op: "Substr"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr/pos"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr/len"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "unit"
    value {
      s: "BYTE"
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal/y"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\377\330\377"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  op: "Equal"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Substr"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_f"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/is_jpeg/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/x"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/y"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels"
  op: "NotEqual"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/x"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Const"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 1, 3) when decoding JPEG images"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert/data_0"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 1, 3) when decoding JPEG images"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert"
  op: "Assert"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/check_jpeg_channels"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg"
  op: "DecodeJpeg"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg/Switch:1"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Identity"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/DecodeJpeg"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/pos"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/len"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr"
  op: "Substr"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/pos"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/len"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "unit"
    value {
      s: "BYTE"
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal/y"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\211PN"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal"
  op: "Equal"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/switch_t"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/switch_f"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng"
  op: "DecodePng"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng/Switch:1"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Identity"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/DecodePng"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/y"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "GIF"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  op: "Equal"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/Switch_1"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/Switch_1"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/case/cond/cond_jpeg/decode_image/Substr"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/pred_id"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/is_gif"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/x"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/y"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels"
  op: "NotEqual"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/x"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/x"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/y"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1"
  op: "NotEqual"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/x"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/LogicalAnd"
  op: "LogicalAnd"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_gif_channels_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Const"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding GIF images"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert/data_0"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding GIF images"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert"
  op: "Assert"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/LogicalAnd"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif"
  op: "DecodeGif"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch_1:1"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/is_png/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch_1"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Identity"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/pos"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/len"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr"
  op: "Substr"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/pos"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/len"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "unit"
    value {
      s: "BYTE"
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeGif/Switch"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp/y"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "BM"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp"
  op: "Equal"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Const"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Unable to decode bytes as JPEG, PNG, GIF, or BMP"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert/data_0"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Unable to decode bytes as JPEG, PNG, GIF, or BMP"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert"
  op: "Assert"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/is_bmp"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/x"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/y"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels"
  op: "NotEqual"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/x"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Const"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding BMP images"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert/data_0"
  op: "Const"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Channels must be in (None, 0, 3) when decoding BMP images"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert"
  op: "Assert"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/check_channels"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeBmp"
  op: "DecodeBmp"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Substr/Switch"
  input: "^icdar2017_data_provider/case/Assert/AssertGuard/Merge"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_1/Assert"
  input: "^icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Assert_2/Assert"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "channels"
    value {
      i: 0
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Identity_1"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/DecodeBmp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Merge"
  op: "Merge"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Identity_1"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Merge"
  op: "Merge"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/cond_gif/Merge"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Merge"
  op: "Merge"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/cond_png/Merge"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Identity"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/cond_jpeg/Merge"
  op: "Merge"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/decode_image/cond_jpeg/Merge"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/DecodeJpeg"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/case/cond/Merge"
  op: "Merge"
  input: "icdar2017_data_provider/case/cond/cond_jpeg/Merge"
  input: "icdar2017_data_provider/case/cond/DecodeRaw"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_1/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_1"
  op: "SparseToDense"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:10"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:36"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:23"
  input: "icdar2017_data_provider/SparseToDense_1/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_data_provider/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ExpandDims"
  op: "ExpandDims"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:25"
  input: "icdar2017_data_provider/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ExpandDims_1"
  op: "ExpandDims"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:19"
  input: "icdar2017_data_provider/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ExpandDims_2"
  op: "ExpandDims"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:24"
  input: "icdar2017_data_provider/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/ExpandDims_3"
  op: "ExpandDims"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:18"
  input: "icdar2017_data_provider/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/concat"
  op: "ConcatV2"
  input: "icdar2017_data_provider/ExpandDims"
  input: "icdar2017_data_provider/ExpandDims_1"
  input: "icdar2017_data_provider/ExpandDims_2"
  input: "icdar2017_data_provider/ExpandDims_3"
  input: "icdar2017_data_provider/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/transpose/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/transpose"
  op: "Transpose"
  input: "icdar2017_data_provider/concat"
  input: "icdar2017_data_provider/transpose/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_2/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_2"
  op: "SparseToDense"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:26"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:13"
  input: "icdar2017_data_provider/SparseToDense_2/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_3/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_3"
  op: "SparseToDense"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:2"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:28"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:15"
  input: "icdar2017_data_provider/SparseToDense_3/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_4/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_4"
  op: "SparseToDense"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:3"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:29"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:16"
  input: "icdar2017_data_provider/SparseToDense_4/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_5/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_5"
  op: "SparseToDense"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:1"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:27"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:14"
  input: "icdar2017_data_provider/SparseToDense_5/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_6/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_6"
  op: "SparseToDense"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:7"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:33"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:20"
  input: "icdar2017_data_provider/SparseToDense_6/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_7/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_7"
  op: "SparseToDense"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:9"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:35"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:22"
  input: "icdar2017_data_provider/SparseToDense_7/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_8/default_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "icdar2017_data_provider/SparseToDense_8"
  op: "SparseToDense"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:8"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:34"
  input: "icdar2017_data_provider/ParseSingleExample/ParseSingleExample:21"
  input: "icdar2017_data_provider/SparseToDense_8/default_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "stack"
  op: "Pack"
  input: "icdar2017_data_provider/SparseToDense_5"
  input: "icdar2017_data_provider/SparseToDense_3"
  input: "icdar2017_data_provider/SparseToDense_4"
  input: "icdar2017_data_provider/SparseToDense"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "stack"
  input: "transpose/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "stack_1"
  op: "Pack"
  input: "icdar2017_data_provider/SparseToDense_6"
  input: "icdar2017_data_provider/SparseToDense_8"
  input: "icdar2017_data_provider/SparseToDense_7"
  input: "icdar2017_data_provider/SparseToDense_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "transpose_1/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_1"
  op: "Transpose"
  input: "stack_1"
  input: "transpose_1/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "input_image"
  op: "Identity"
  input: "icdar2017_data_provider/case/cond/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/random_uniform/max"
  input: "ssd_preprocessing_train/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/random_uniform/mul"
  input: "ssd_preprocessing_train/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Less/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Less"
  op: "Less"
  input: "ssd_preprocessing_train/random_uniform"
  input: "ssd_preprocessing_train/Less/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/Less"
  input: "ssd_preprocessing_train/Less"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/switch_t"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/switch_f"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/pred_id"
  op: "Identity"
  input: "ssd_preprocessing_train/Less"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/shape"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/min"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/max"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10000.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/max"
  input: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/mul"
  input: "ssd_preprocessing_train/cond/random_rotate90/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/Cast"
  op: "Cast"
  input: "ssd_preprocessing_train/cond/random_rotate90/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/Shape"
  op: "Shape"
  input: "ssd_preprocessing_train/cond/random_rotate90/Shape/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/Shape/Switch"
  op: "Switch"
  input: "input_image"
  input: "ssd_preprocessing_train/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice/stack"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice/stack_1"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice/stack_2"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/cond/random_rotate90/Shape"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice/stack"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice/stack_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_1/stack"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_1/stack_1"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_1/stack_2"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/cond/random_rotate90/Shape"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_1/stack"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_1/stack_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Shape"
  op: "Shape"
  input: "ssd_preprocessing_train/cond/random_rotate90/Shape/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/Const"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/Less"
  op: "Less"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/Const"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/Const"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/All"
  op: "All"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/Less"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/Assert/Const"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/All"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/Assert/Assert/data_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/control_dependency"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/Shape/Switch:1"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/assert_positive/assert_less/Assert/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/FloorMod/y"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/FloorMod"
  op: "FloorMod"
  input: "ssd_preprocessing_train/cond/random_rotate90/Cast"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/FloorMod/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal/y"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal"
  op: "Equal"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/FloorMod"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_1/y"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_1"
  op: "Equal"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/FloorMod"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_2/y"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_2"
  op: "Equal"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/FloorMod"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/preds_c"
  op: "Pack"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Cast"
  op: "Cast"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/preds_c"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Const"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/num_true_conds"
  op: "Sum"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Cast"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/n_true_conds"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/LessEqual"
  op: "LessEqual"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/num_true_conds"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/n_true_conds"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/Const"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (ssd_preprocessing_train/cond/random_rotate90/rot90/Equal:0, ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_1:0, ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_2:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/LessEqual"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/LessEqual"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/LessEqual"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/switch_t"
  device: "/device:CPU:0"
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/switch_t"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/NoOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (ssd_preprocessing_train/cond/random_rotate90/rot90/Equal:0, ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_1:0, ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_2:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Assert/Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Assert/data_0"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Assert/Switch_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/LessEqual"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/cond/random_rotate90/rot90/LessEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/preds_c"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/cond/random_rotate90/rot90/preds_c"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/switch_f"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Assert"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/control_dependency_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/switch_t"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/switch_f"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/pred_id"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/ReverseV2/axis"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/ReverseV2"
  op: "ReverseV2"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/ReverseV2/Switch:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/ReverseV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/ReverseV2/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/control_dependency"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/transpose/perm"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/transpose"
  op: "Transpose"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/ReverseV2"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/transpose/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/Switch/Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/Switch/Switch"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/Switch/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/switch_t"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/switch_f"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/pred_id"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/Switch/Switch"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/ReverseV2/axis"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/ReverseV2"
  op: "ReverseV2"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/ReverseV2/Switch_1:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/ReverseV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/ReverseV2/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/control_dependency"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/ReverseV2/Switch_1"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/ReverseV2/Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch/Switch_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch/Switch_1"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_2"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch/Switch_1"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch/Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/cond/random_rotate90/rot90/Equal_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/switch_t"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/switch_f"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/pred_id"
  op: "Identity"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch/Switch_1"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/transpose/perm"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/transpose"
  op: "Transpose"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/transpose/Switch_1:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/transpose/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/transpose/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/ReverseV2/Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/transpose/Switch_1"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/transpose/Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/ReverseV2/axis"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/Assert/AssertGuard/Merge"
  input: "^ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/ReverseV2"
  op: "ReverseV2"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/transpose"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/ReverseV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch_1"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/transpose/Switch"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Merge"
  op: "Merge"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Switch_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/ReverseV2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/Merge"
  op: "Merge"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/cond/Merge"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/ReverseV2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/Merge"
  op: "Merge"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/cond/Merge"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/transpose"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/stack"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/stack_1"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/stack_2"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/Switch:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/stack"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/stack_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/Switch"
  op: "Switch"
  input: "icdar2017_data_provider/transpose"
  input: "ssd_preprocessing_train/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_3/stack"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_3/stack_1"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_3/stack_2"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_3"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/Switch:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_3/stack"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_3/stack_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_4/stack"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_4/stack_1"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_4/stack_2"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_4"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/Switch:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_4/stack"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_4/stack_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_5/stack"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_5/stack_1"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_5/stack_2"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_5"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2/Switch:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_5/stack"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_5/stack_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/PyFunc"
  op: "PyFunc"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_3"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_2"
  input: "ssd_preprocessing_train/cond/random_rotate90/Cast"
  device: "/device:CPU:0"
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "token"
    value {
      s: "pyfunc_0"
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_1"
  op: "PyFunc"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_5"
  input: "ssd_preprocessing_train/cond/random_rotate90/strided_slice_4"
  input: "ssd_preprocessing_train/cond/random_rotate90/Cast"
  device: "/device:CPU:0"
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "token"
    value {
      s: "pyfunc_1"
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/Maximum"
  op: "Maximum"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/Minimum_1"
  op: "Minimum"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/Maximum_1"
  op: "Maximum"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/stack"
  op: "Pack"
  input: "ssd_preprocessing_train/cond/random_rotate90/Minimum_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/Minimum"
  input: "ssd_preprocessing_train/cond/random_rotate90/Maximum_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/transpose/Rank"
  op: "Rank"
  input: "ssd_preprocessing_train/cond/random_rotate90/stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/transpose/sub/y"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/transpose/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/cond/random_rotate90/transpose/Rank"
  input: "ssd_preprocessing_train/cond/random_rotate90/transpose/sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/transpose/Range/start"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/transpose/Range/delta"
  op: "Const"
  input: "^ssd_preprocessing_train/cond/switch_t"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/transpose/Range"
  op: "Range"
  input: "ssd_preprocessing_train/cond/random_rotate90/transpose/Range/start"
  input: "ssd_preprocessing_train/cond/random_rotate90/transpose/Rank"
  input: "ssd_preprocessing_train/cond/random_rotate90/transpose/Range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/transpose/sub_1"
  op: "Sub"
  input: "ssd_preprocessing_train/cond/random_rotate90/transpose/sub"
  input: "ssd_preprocessing_train/cond/random_rotate90/transpose/Range"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/transpose"
  op: "Transpose"
  input: "ssd_preprocessing_train/cond/random_rotate90/stack"
  input: "ssd_preprocessing_train/cond/random_rotate90/transpose/sub_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_2"
  op: "PyFunc"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_2/Switch:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_2/Switch_1:1"
  input: "ssd_preprocessing_train/cond/random_rotate90/Cast"
  device: "/device:CPU:0"
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "token"
    value {
      s: "pyfunc_2"
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_2/Switch"
  op: "Switch"
  input: "transpose"
  input: "ssd_preprocessing_train/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_2/Switch_1"
  op: "Switch"
  input: "transpose_1"
  input: "ssd_preprocessing_train/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/Switch_1"
  op: "Switch"
  input: "input_image"
  input: "ssd_preprocessing_train/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_image"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/Switch_2"
  op: "Switch"
  input: "icdar2017_data_provider/transpose"
  input: "ssd_preprocessing_train/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/Switch_3"
  op: "Switch"
  input: "transpose"
  input: "ssd_preprocessing_train/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/Switch_4"
  op: "Switch"
  input: "transpose_1"
  input: "ssd_preprocessing_train/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/Merge"
  op: "Merge"
  input: "ssd_preprocessing_train/cond/Switch_1"
  input: "ssd_preprocessing_train/cond/random_rotate90/rot90/cond/Merge"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/Merge_1"
  op: "Merge"
  input: "ssd_preprocessing_train/cond/Switch_2"
  input: "ssd_preprocessing_train/cond/random_rotate90/transpose"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/Merge_2"
  op: "Merge"
  input: "ssd_preprocessing_train/cond/Switch_3"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_2"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/cond/Merge_3"
  op: "Merge"
  input: "ssd_preprocessing_train/cond/Switch_4"
  input: "ssd_preprocessing_train/cond/random_rotate90/PyFunc_2:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/convert_image/Cast"
  op: "Cast"
  input: "ssd_preprocessing_train/cond/Merge"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/convert_image/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00392156885937
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/convert_image"
  op: "Mul"
  input: "ssd_preprocessing_train/convert_image/Cast"
  input: "ssd_preprocessing_train/convert_image/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/Shape"
  op: "Shape"
  input: "ssd_preprocessing_train/cond/Merge_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/Greater"
  op: "Greater"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Greater"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Greater"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_t"
  op: "Identity"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  op: "Identity"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/pred_id"
  op: "Identity"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Greater"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch_1"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/Merge_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/cond/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch_2"
  op: "Switch"
  input: "icdar2017_data_provider/SparseToDense_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@icdar2017_data_provider/SparseToDense_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch_3"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/Merge_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/cond/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch_4"
  op: "Switch"
  input: "ssd_preprocessing_train/cond/Merge_3"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/pred_id"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ssd_preprocessing_train/cond/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/shape"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/min"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/max"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/max"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/shape"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/min"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/max"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/max"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/RandomUniform"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1"
  op: "Add"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Const"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/add"
  op: "Add"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/add_1"
  op: "Add"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat/axis"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat"
  op: "ConcatV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/add_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/add"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Const_1"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat_1/axis"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat_1"
  op: "ConcatV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/add"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/add"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat_1/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat_2/axis"
  op: "Const"
  input: "^ssd_preprocessing_train/distorted_bounding_box_crop/cond/switch_f"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat_2"
  op: "ConcatV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/random_uniform_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/add_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/add_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat_2/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge"
  op: "Merge"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge_1"
  op: "Merge"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Const_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge_2"
  op: "Merge"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge_3"
  op: "Merge"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/concat_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Switch_4:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/Shape_1"
  op: "Shape"
  input: "ssd_preprocessing_train/convert_image"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/ExpandDims"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2/min_object_covered"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2"
  op: "SampleDistortedBoundingBoxV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Shape_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/ExpandDims"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2/min_object_covered"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "area_range"
    value {
      list {
        f: 0.10000000149
        f: 1.0
      }
    }
  }
  attr {
    key: "aspect_ratio_range"
    value {
      list {
        f: 0.5
        f: 2.0
      }
    }
  }
  attr {
    key: "max_attempts"
    value {
      i: 200
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "use_image_if_no_bounding_boxes"
    value {
      b: true
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2:2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/Slice"
  op: "Slice"
  input: "ssd_preprocessing_train/convert_image"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/sample_distorted_bounding_box/SampleDistortedBoundingBoxV2:1"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_1"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/stack"
  op: "Pack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_4"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_5"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_6"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_2"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_3"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/strided_slice_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_4"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge_3"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/strided_slice_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/stack_1"
  op: "Pack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/div"
  op: "RealDiv"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/stack_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/div_1"
  op: "RealDiv"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_3"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/div_2"
  op: "RealDiv"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub_4"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\200?\000\000\200?"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/Rank"
  op: "Rank"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/div"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/sub/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/Rank"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/Range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/Range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/Range"
  op: "Range"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/Range/start"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/Rank"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/Range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/sub_1"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/Range"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose"
  op: "Transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/div"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose/sub_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose_1/perm"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose_1"
  op: "Transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Const"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose_1/perm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_1/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_1/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum"
  op: "Maximum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_2"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_2/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_2/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_3/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_3"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_3/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_3/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_3/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum_1"
  op: "Maximum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_4/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_4/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_4/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_4"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_4/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_4/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_4/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_5/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_5/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_5/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_5"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_5/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_5/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_5/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_4"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_6/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_6/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_6/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_6"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_6/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_6/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_6/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_7/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_7/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_7/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_7"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_7/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_7/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_7/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Minimum_1"
  op: "Minimum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_6"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Minimum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum_2"
  op: "Maximum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/sub_1"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Minimum_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum_3"
  op: "Maximum"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/sub_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Maximum_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_8/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_8/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_8/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_8"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_8/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_8/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_8/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_9/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_9/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_9/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_9"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_9/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_9/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_9/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/sub_2"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_8"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_10/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_10/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_10/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_10"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_10/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_10/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_10/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_11/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_11/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_11/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_11"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/transpose"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_11/stack"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_11/stack_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_11/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/sub_3"
  op: "Sub"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_10"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/strided_slice_11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/mul_1"
  op: "Mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/sub_2"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/sub_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Greater"
  op: "Greater"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/mul_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/truediv"
  op: "RealDiv"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/zeros_like"
  op: "ZerosLike"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/intersection"
  op: "Select"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/Greater"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/truediv"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/zeros_like"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Less/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Less"
  op: "Less"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/bboxes_intersection/intersection"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Less/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Equal"
  op: "Equal"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge_1"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/LogicalAnd"
  op: "LogicalAnd"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Less"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Equal"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/ones_like/Shape"
  op: "Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/ones_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/ones_like"
  op: "Fill"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/ones_like/Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/ones_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/ones_like"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Select"
  op: "Select"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/LogicalAnd"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/cond/Merge_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/Shape"
  op: "Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Slice"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/unstack"
  op: "Unpack"
  input: "ssd_preprocessing_train/resize_image/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/ExpandDims"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/Slice"
  input: "ssd_preprocessing_train/resize_image/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/resize/size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/resize/ResizeBilinear"
  op: "ResizeBilinear"
  input: "ssd_preprocessing_train/resize_image/ExpandDims"
  input: "ssd_preprocessing_train/resize_image/resize/size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/resize_image/Reshape"
  op: "Reshape"
  input: "ssd_preprocessing_train/resize_image/resize/ResizeBilinear"
  input: "ssd_preprocessing_train/resize_image/stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/resize_image/Reshape"
  input: "ssd_preprocessing_train/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_1/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_1"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/div"
  input: "ssd_preprocessing_train/ExpandDims_1/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/DrawBoundingBoxes"
  op: "DrawBoundingBoxes"
  input: "ssd_preprocessing_train/ExpandDims"
  input: "ssd_preprocessing_train/ExpandDims_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/image_shape_distorted/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_preprocessing_train/image_shape_distorted"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/image_shape_distorted"
  op: "ImageSummary"
  input: "ssd_preprocessing_train/image_shape_distorted/tag"
  input: "ssd_preprocessing_train/DrawBoundingBoxes"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 512.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/div_1"
  input: "ssd_preprocessing_train/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/mul_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 512.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/mul_1"
  op: "Mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/div_2"
  input: "ssd_preprocessing_train/mul_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/PyFunc"
  op: "PyFunc"
  input: "ssd_preprocessing_train/mul"
  input: "ssd_preprocessing_train/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "token"
    value {
      s: "pyfunc_3"
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/PyFunc"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice/stack"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice/stack_1"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice_1"
  op: "StridedSlice"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/PyFunc"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice_1/stack"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice_1/stack_1"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/strided_slice_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Less/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Less"
  op: "Less"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Minimum"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Less/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Greater/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Greater"
  op: "Greater"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Minimum"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Greater/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/LogicalOr"
  op: "LogicalOr"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Less"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Greater"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Equal"
  op: "Equal"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Select"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/LogicalAnd"
  op: "LogicalAnd"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/LogicalOr"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Equal"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/ones_like/Shape"
  op: "Shape"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/ones_like/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/ones_like"
  op: "Fill"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/ones_like/Shape"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/ones_like/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/ones_like"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Select"
  op: "Select"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/LogicalAnd"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/mul"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_filter_overlap/Select"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/div/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 512.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/div"
  op: "RealDiv"
  input: "ssd_preprocessing_train/mul"
  input: "ssd_preprocessing_train/div/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/div_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 512.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/div_1"
  op: "RealDiv"
  input: "ssd_preprocessing_train/mul_1"
  input: "ssd_preprocessing_train/div_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform_1/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform_1/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/random_uniform_1"
  op: "RandomUniformInt"
  input: "ssd_preprocessing_train/random_uniform_1/shape"
  input: "ssd_preprocessing_train/random_uniform_1/min"
  input: "ssd_preprocessing_train/random_uniform_1/max"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal"
  op: "Equal"
  input: "ssd_preprocessing_train/random_uniform_1"
  input: "ssd_preprocessing_train/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Switch"
  op: "Switch"
  input: "ssd_preprocessing_train/resize_image/Reshape"
  input: "ssd_preprocessing_train/Equal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1254902035
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1254902035
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color/random_uniform/max"
  input: "ssd_preprocessing_train/distort_color/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color/random_uniform/mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_brightness/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/Switch:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_brightness"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color/adjust_brightness/Identity"
  input: "ssd_preprocessing_train/distort_color/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_brightness/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_brightness"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/max"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_1"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_saturation/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_brightness/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_saturation/AdjustSaturation"
  op: "AdjustSaturation"
  input: "ssd_preprocessing_train/distort_color/adjust_saturation/Identity"
  input: "ssd_preprocessing_train/distort_color/random_uniform_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_saturation/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_saturation/AdjustSaturation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20000000298
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/max"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_2"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_hue/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_saturation/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_hue/AdjustHue"
  op: "AdjustHue"
  input: "ssd_preprocessing_train/distort_color/adjust_hue/Identity"
  input: "ssd_preprocessing_train/distort_color/random_uniform_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_hue/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_hue/AdjustHue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/max"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/RandomUniform"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/random_uniform_3"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/mul"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_contrast/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_hue/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_contrast"
  op: "AdjustContrastv2"
  input: "ssd_preprocessing_train/distort_color/adjust_contrast/Identity"
  input: "ssd_preprocessing_train/distort_color/random_uniform_3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/adjust_contrast/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color/adjust_contrast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/clip_by_value/Minimum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/clip_by_value/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/distort_color/adjust_contrast/Identity_1"
  input: "ssd_preprocessing_train/distort_color/clip_by_value/Minimum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/clip_by_value/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color/clip_by_value"
  op: "Maximum"
  input: "ssd_preprocessing_train/distort_color/clip_by_value/Minimum"
  input: "ssd_preprocessing_train/distort_color/clip_by_value/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_1"
  op: "Equal"
  input: "ssd_preprocessing_train/random_uniform_1"
  input: "ssd_preprocessing_train/Equal_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Switch_1"
  op: "Switch"
  input: "ssd_preprocessing_train/resize_image/Reshape"
  input: "ssd_preprocessing_train/Equal_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/max"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_saturation/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/Switch_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_saturation/AdjustSaturation"
  op: "AdjustSaturation"
  input: "ssd_preprocessing_train/distort_color_1/adjust_saturation/Identity"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_saturation/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_saturation/AdjustSaturation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1254902035
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1254902035
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/max"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_1"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_brightness/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_saturation/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_brightness"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_1/adjust_brightness/Identity"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_brightness/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_brightness"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/max"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_2"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_contrast/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_brightness/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_contrast"
  op: "AdjustContrastv2"
  input: "ssd_preprocessing_train/distort_color_1/adjust_contrast/Identity"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_contrast/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_contrast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20000000298
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/max"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/random_uniform_3"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/mul"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_hue/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_contrast/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_hue/AdjustHue"
  op: "AdjustHue"
  input: "ssd_preprocessing_train/distort_color_1/adjust_hue/Identity"
  input: "ssd_preprocessing_train/distort_color_1/random_uniform_3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/adjust_hue/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_1/adjust_hue/AdjustHue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/clip_by_value/Minimum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/distort_color_1/adjust_hue/Identity_1"
  input: "ssd_preprocessing_train/distort_color_1/clip_by_value/Minimum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/clip_by_value/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_1/clip_by_value"
  op: "Maximum"
  input: "ssd_preprocessing_train/distort_color_1/clip_by_value/Minimum"
  input: "ssd_preprocessing_train/distort_color_1/clip_by_value/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_2"
  op: "Equal"
  input: "ssd_preprocessing_train/random_uniform_1"
  input: "ssd_preprocessing_train/Equal_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Switch_2"
  op: "Switch"
  input: "ssd_preprocessing_train/resize_image/Reshape"
  input: "ssd_preprocessing_train/Equal_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/max"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_contrast/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/Switch_2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_contrast"
  op: "AdjustContrastv2"
  input: "ssd_preprocessing_train/distort_color_2/adjust_contrast/Identity"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_contrast/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_contrast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20000000298
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/max"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_1"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_hue/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_contrast/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_hue/AdjustHue"
  op: "AdjustHue"
  input: "ssd_preprocessing_train/distort_color_2/adjust_hue/Identity"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_hue/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_hue/AdjustHue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1254902035
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1254902035
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/max"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_2"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_brightness/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_hue/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_brightness"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_2/adjust_brightness/Identity"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_brightness/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_brightness"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/max"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/random_uniform_3"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/mul"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_saturation/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_brightness/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_saturation/AdjustSaturation"
  op: "AdjustSaturation"
  input: "ssd_preprocessing_train/distort_color_2/adjust_saturation/Identity"
  input: "ssd_preprocessing_train/distort_color_2/random_uniform_3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/adjust_saturation/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_2/adjust_saturation/AdjustSaturation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/clip_by_value/Minimum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/distort_color_2/adjust_saturation/Identity_1"
  input: "ssd_preprocessing_train/distort_color_2/clip_by_value/Minimum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/clip_by_value/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_2/clip_by_value"
  op: "Maximum"
  input: "ssd_preprocessing_train/distort_color_2/clip_by_value/Minimum"
  input: "ssd_preprocessing_train/distort_color_2/clip_by_value/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_3/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Equal_3"
  op: "Equal"
  input: "ssd_preprocessing_train/random_uniform_1"
  input: "ssd_preprocessing_train/Equal_3/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Switch_3"
  op: "Switch"
  input: "ssd_preprocessing_train/resize_image/Reshape"
  input: "ssd_preprocessing_train/Equal_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20000000298
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/max"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_hue/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/Switch_3:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_hue/AdjustHue"
  op: "AdjustHue"
  input: "ssd_preprocessing_train/distort_color_3/adjust_hue/Identity"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_hue/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_hue/AdjustHue"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/max"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_1"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_saturation/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_hue/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_saturation/AdjustSaturation"
  op: "AdjustSaturation"
  input: "ssd_preprocessing_train/distort_color_3/adjust_saturation/Identity"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_saturation/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_saturation/AdjustSaturation"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/max"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_2"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_contrast/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_saturation/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_contrast"
  op: "AdjustContrastv2"
  input: "ssd_preprocessing_train/distort_color_3/adjust_contrast/Identity"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_contrast/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_contrast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1254902035
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1254902035
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/RandomUniform"
  op: "RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/max"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3/mul"
  op: "Mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/RandomUniform"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/random_uniform_3"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/mul"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_brightness/Identity"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_contrast/Identity_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_brightness"
  op: "Add"
  input: "ssd_preprocessing_train/distort_color_3/adjust_brightness/Identity"
  input: "ssd_preprocessing_train/distort_color_3/random_uniform_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/adjust_brightness/Identity_1"
  op: "Identity"
  input: "ssd_preprocessing_train/distort_color_3/adjust_brightness"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/clip_by_value/Minimum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/clip_by_value/Minimum"
  op: "Minimum"
  input: "ssd_preprocessing_train/distort_color_3/adjust_brightness/Identity_1"
  input: "ssd_preprocessing_train/distort_color_3/clip_by_value/Minimum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/clip_by_value/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/distort_color_3/clip_by_value"
  op: "Maximum"
  input: "ssd_preprocessing_train/distort_color_3/clip_by_value/Minimum"
  input: "ssd_preprocessing_train/distort_color_3/clip_by_value/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Merge"
  op: "Merge"
  input: "ssd_preprocessing_train/distort_color/clip_by_value"
  input: "ssd_preprocessing_train/distort_color_1/clip_by_value"
  input: "ssd_preprocessing_train/distort_color_2/clip_by_value"
  input: "ssd_preprocessing_train/distort_color_3/clip_by_value"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_2/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_2"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/Merge"
  input: "ssd_preprocessing_train/ExpandDims_2/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_3/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/ExpandDims_3"
  op: "ExpandDims"
  input: "ssd_preprocessing_train/distorted_bounding_box_crop/bboxes_resize/div"
  input: "ssd_preprocessing_train/ExpandDims_3/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/DrawBoundingBoxes_1"
  op: "DrawBoundingBoxes"
  input: "ssd_preprocessing_train/ExpandDims_2"
  input: "ssd_preprocessing_train/ExpandDims_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/image_color_distorted/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "ssd_preprocessing_train/image_color_distorted"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/image_color_distorted"
  op: "ImageSummary"
  input: "ssd_preprocessing_train/image_color_distorted/tag"
  input: "ssd_preprocessing_train/DrawBoundingBoxes_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "ssd_preprocessing_train/mul_2/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/mul_2"
  op: "Mul"
  input: "ssd_preprocessing_train/Merge"
  input: "ssd_preprocessing_train/mul_2/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\366B\000\000\352B\000\000\320B"
      }
    }
  }
}
node {
  name: "ssd_preprocessing_train/sub"
  op: "Sub"
  input: "ssd_preprocessing_train/mul_2"
  input: "ssd_preprocessing_train/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "processed_image"
  op: "Identity"
  input: "ssd_preprocessing_train/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "PyFunc"
  op: "PyFunc"
  input: "ssd_preprocessing_train/div"
  input: "ssd_preprocessing_train/div_1"
  input: "ssd_preprocessing_train/bboxes_filter_by_shorter_side/Select"
  device: "/device:CPU:0"
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "token"
    value {
      s: "pyfunc_4"
    }
  }
}
node {
  name: "icdar2017_batch/batch/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "icdar2017_batch/batch/fifo_queue"
  op: "FIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 500
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "icdar2017_batch/batch/fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "icdar2017_batch/batch/fifo_queue"
  input: "processed_image"
  input: "PyFunc"
  input: "PyFunc:1"
  input: "PyFunc:2"
  input: "PyFunc:3"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "icdar2017_batch/batch/fifo_queue_Close"
  op: "QueueCloseV2"
  input: "icdar2017_batch/batch/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "icdar2017_batch/batch/fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "icdar2017_batch/batch/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_batch/batch/fifo_queue_Size"
  op: "QueueSizeV2"
  input: "icdar2017_batch/batch/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_batch/batch/ToFloat"
  op: "Cast"
  input: "icdar2017_batch/batch/fifo_queue_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_batch/batch/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00200000009499
      }
    }
  }
}
node {
  name: "icdar2017_batch/batch/mul"
  op: "Mul"
  input: "icdar2017_batch/batch/ToFloat"
  input: "icdar2017_batch/batch/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_batch/batch/fraction_of_500_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "icdar2017_batch/batch/fraction_of_500_full"
      }
    }
  }
}
node {
  name: "icdar2017_batch/batch/fraction_of_500_full"
  op: "ScalarSummary"
  input: "icdar2017_batch/batch/fraction_of_500_full/tags"
  input: "icdar2017_batch/batch/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_batch/batch/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "icdar2017_batch/batch"
  op: "QueueDequeueManyV2"
  input: "icdar2017_batch/batch/fifo_queue"
  input: "icdar2017_batch/batch/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue"
  op: "FIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 50
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue"
  input: "icdar2017_batch/batch"
  input: "icdar2017_batch/batch:1"
  input: "icdar2017_batch/batch:2"
  input: "icdar2017_batch/batch:3"
  input: "icdar2017_batch/batch:4"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue_Close"
  op: "QueueCloseV2"
  input: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue_Size"
  op: "QueueSizeV2"
  input: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_prefetch_queue/prefetch_queue/ToFloat"
  op: "Cast"
  input: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_prefetch_queue/prefetch_queue/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "icdar2017_prefetch_queue/prefetch_queue/mul"
  op: "Mul"
  input: "icdar2017_prefetch_queue/prefetch_queue/ToFloat"
  input: "icdar2017_prefetch_queue/prefetch_queue/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "icdar2017_prefetch_queue/prefetch_queue/fraction_of_50_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "icdar2017_prefetch_queue/prefetch_queue/fraction_of_50_full"
      }
    }
  }
}
node {
  name: "icdar2017_prefetch_queue/prefetch_queue/fraction_of_50_full"
  op: "ScalarSummary"
  input: "icdar2017_prefetch_queue/prefetch_queue/fraction_of_50_full/tags"
  input: "icdar2017_prefetch_queue/prefetch_queue/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "learning_rate_1/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate_1"
      }
    }
  }
}
node {
  name: "learning_rate_1"
  op: "ScalarSummary"
  input: "learning_rate_1/tags"
  input: "learning_rate"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/fifo_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "icdar2017_prefetch_queue/prefetch_queue/fifo_queue"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0997509360313
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0997509360313
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/conv1_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1/conv1_1/weights/Initializer/random_uniform/max"
  input: "conv1/conv1_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1/conv1_1/weights/Initializer/random_uniform/RandomUniform"
  input: "conv1/conv1_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv1/conv1_1/weights/Initializer/random_uniform/mul"
  input: "conv1/conv1_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Assign"
  op: "Assign"
  input: "conv1/conv1_1/weights"
  input: "conv1/conv1_1/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_1/weights/read"
  op: "Identity"
  input: "conv1/conv1_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv1/conv1_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_1/biases/Assign"
  op: "Assign"
  input: "conv1/conv1_1/biases"
  input: "conv1/conv1_1/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_1/biases/read"
  op: "Identity"
  input: "conv1/conv1_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv1/conv1_1/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv1/conv1_1/Conv2D"
  op: "Conv2D"
  input: "clone_0/fifo_queue_Dequeue"
  input: "conv1/conv1_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv1/conv1_1/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv1/conv1_1/Conv2D"
  input: "conv1/conv1_1/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv1/conv1_1/Relu"
  op: "Relu"
  input: "clone_0/conv1/conv1_1/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0721687823534
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0721687823534
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/conv1_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1/conv1_2/weights/Initializer/random_uniform/max"
  input: "conv1/conv1_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1/conv1_2/weights/Initializer/random_uniform/RandomUniform"
  input: "conv1/conv1_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv1/conv1_2/weights/Initializer/random_uniform/mul"
  input: "conv1/conv1_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Assign"
  op: "Assign"
  input: "conv1/conv1_2/weights"
  input: "conv1/conv1_2/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_2/weights/read"
  op: "Identity"
  input: "conv1/conv1_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv1/conv1_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_2/biases/Assign"
  op: "Assign"
  input: "conv1/conv1_2/biases"
  input: "conv1/conv1_2/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_2/biases/read"
  op: "Identity"
  input: "conv1/conv1_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv1/conv1_2/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv1/conv1_2/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv1/conv1_1/Relu"
  input: "conv1/conv1_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv1/conv1_2/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv1/conv1_2/Conv2D"
  input: "conv1/conv1_2/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv1/conv1_2/Relu"
  op: "Relu"
  input: "clone_0/conv1/conv1_2/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pool1/MaxPool"
  op: "MaxPool"
  input: "clone_0/conv1/conv1_2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653322
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653322
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2/conv2_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2/conv2_1/weights/Initializer/random_uniform/max"
  input: "conv2/conv2_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2/conv2_1/weights/Initializer/random_uniform/RandomUniform"
  input: "conv2/conv2_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv2/conv2_1/weights/Initializer/random_uniform/mul"
  input: "conv2/conv2_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Assign"
  op: "Assign"
  input: "conv2/conv2_1/weights"
  input: "conv2/conv2_1/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_1/weights/read"
  op: "Identity"
  input: "conv2/conv2_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv2/conv2_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_1/biases/Assign"
  op: "Assign"
  input: "conv2/conv2_1/biases"
  input: "conv2/conv2_1/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_1/biases/read"
  op: "Identity"
  input: "conv2/conv2_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv2/conv2_1/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv2/conv2_1/Conv2D"
  op: "Conv2D"
  input: "clone_0/pool1/MaxPool"
  input: "conv2/conv2_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv2/conv2_1/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv2/conv2_1/Conv2D"
  input: "conv2/conv2_1/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv2/conv2_1/Relu"
  op: "Relu"
  input: "clone_0/conv2/conv2_1/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2/conv2_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2/conv2_2/weights/Initializer/random_uniform/max"
  input: "conv2/conv2_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2/conv2_2/weights/Initializer/random_uniform/RandomUniform"
  input: "conv2/conv2_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv2/conv2_2/weights/Initializer/random_uniform/mul"
  input: "conv2/conv2_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Assign"
  op: "Assign"
  input: "conv2/conv2_2/weights"
  input: "conv2/conv2_2/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_2/weights/read"
  op: "Identity"
  input: "conv2/conv2_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv2/conv2_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_2/biases/Assign"
  op: "Assign"
  input: "conv2/conv2_2/biases"
  input: "conv2/conv2_2/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_2/biases/read"
  op: "Identity"
  input: "conv2/conv2_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv2/conv2_2/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv2/conv2_2/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv2/conv2_1/Relu"
  input: "conv2/conv2_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv2/conv2_2/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv2/conv2_2/Conv2D"
  input: "conv2/conv2_2/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv2/conv2_2/Relu"
  op: "Relu"
  input: "clone_0/conv2/conv2_2/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pool2/MaxPool"
  op: "MaxPool"
  input: "clone_0/conv2/conv2_2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv3/conv3_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv3/conv3_1/weights/Initializer/random_uniform/max"
  input: "conv3/conv3_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv3/conv3_1/weights/Initializer/random_uniform/RandomUniform"
  input: "conv3/conv3_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv3/conv3_1/weights/Initializer/random_uniform/mul"
  input: "conv3/conv3_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Assign"
  op: "Assign"
  input: "conv3/conv3_1/weights"
  input: "conv3/conv3_1/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_1/weights/read"
  op: "Identity"
  input: "conv3/conv3_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3/conv3_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_1/biases/Assign"
  op: "Assign"
  input: "conv3/conv3_1/biases"
  input: "conv3/conv3_1/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_1/biases/read"
  op: "Identity"
  input: "conv3/conv3_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_1/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_1/Conv2D"
  op: "Conv2D"
  input: "clone_0/pool2/MaxPool"
  input: "conv3/conv3_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv3/conv3_1/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv3/conv3_1/Conv2D"
  input: "conv3/conv3_1/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv3/conv3_1/Relu"
  op: "Relu"
  input: "clone_0/conv3/conv3_1/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0360843911767
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0360843911767
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv3/conv3_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv3/conv3_2/weights/Initializer/random_uniform/max"
  input: "conv3/conv3_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv3/conv3_2/weights/Initializer/random_uniform/RandomUniform"
  input: "conv3/conv3_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv3/conv3_2/weights/Initializer/random_uniform/mul"
  input: "conv3/conv3_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Assign"
  op: "Assign"
  input: "conv3/conv3_2/weights"
  input: "conv3/conv3_2/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_2/weights/read"
  op: "Identity"
  input: "conv3/conv3_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3/conv3_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_2/biases/Assign"
  op: "Assign"
  input: "conv3/conv3_2/biases"
  input: "conv3/conv3_2/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_2/biases/read"
  op: "Identity"
  input: "conv3/conv3_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_2/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_2/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv3/conv3_1/Relu"
  input: "conv3/conv3_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv3/conv3_2/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv3/conv3_2/Conv2D"
  input: "conv3/conv3_2/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv3/conv3_2/Relu"
  op: "Relu"
  input: "clone_0/conv3/conv3_2/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0360843911767
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0360843911767
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv3/conv3_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv3/conv3_3/weights/Initializer/random_uniform/max"
  input: "conv3/conv3_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv3/conv3_3/weights/Initializer/random_uniform/RandomUniform"
  input: "conv3/conv3_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv3/conv3_3/weights/Initializer/random_uniform/mul"
  input: "conv3/conv3_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Assign"
  op: "Assign"
  input: "conv3/conv3_3/weights"
  input: "conv3/conv3_3/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_3/weights/read"
  op: "Identity"
  input: "conv3/conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv3/conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_3/biases/Assign"
  op: "Assign"
  input: "conv3/conv3_3/biases"
  input: "conv3/conv3_3/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_3/biases/read"
  op: "Identity"
  input: "conv3/conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_3/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv3/conv3_3/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv3/conv3_2/Relu"
  input: "conv3/conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv3/conv3_3/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv3/conv3_3/Conv2D"
  input: "conv3/conv3_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv3/conv3_3/Relu"
  op: "Relu"
  input: "clone_0/conv3/conv3_3/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pool3/MaxPool"
  op: "MaxPool"
  input: "clone_0/conv3/conv3_3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0294627826661
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0294627826661
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv4/conv4_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv4/conv4_1/weights/Initializer/random_uniform/max"
  input: "conv4/conv4_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv4/conv4_1/weights/Initializer/random_uniform/RandomUniform"
  input: "conv4/conv4_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv4/conv4_1/weights/Initializer/random_uniform/mul"
  input: "conv4/conv4_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Assign"
  op: "Assign"
  input: "conv4/conv4_1/weights"
  input: "conv4/conv4_1/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_1/weights/read"
  op: "Identity"
  input: "conv4/conv4_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4/conv4_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_1/biases/Assign"
  op: "Assign"
  input: "conv4/conv4_1/biases"
  input: "conv4/conv4_1/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_1/biases/read"
  op: "Identity"
  input: "conv4/conv4_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_1/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_1/Conv2D"
  op: "Conv2D"
  input: "clone_0/pool3/MaxPool"
  input: "conv4/conv4_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv4/conv4_1/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv4/conv4_1/Conv2D"
  input: "conv4/conv4_1/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv4/conv4_1/Relu"
  op: "Relu"
  input: "clone_0/conv4/conv4_1/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0255155190825
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0255155190825
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv4/conv4_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv4/conv4_2/weights/Initializer/random_uniform/max"
  input: "conv4/conv4_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv4/conv4_2/weights/Initializer/random_uniform/RandomUniform"
  input: "conv4/conv4_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv4/conv4_2/weights/Initializer/random_uniform/mul"
  input: "conv4/conv4_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Assign"
  op: "Assign"
  input: "conv4/conv4_2/weights"
  input: "conv4/conv4_2/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_2/weights/read"
  op: "Identity"
  input: "conv4/conv4_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4/conv4_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_2/biases/Assign"
  op: "Assign"
  input: "conv4/conv4_2/biases"
  input: "conv4/conv4_2/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_2/biases/read"
  op: "Identity"
  input: "conv4/conv4_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_2/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_2/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv4/conv4_1/Relu"
  input: "conv4/conv4_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv4/conv4_2/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv4/conv4_2/Conv2D"
  input: "conv4/conv4_2/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv4/conv4_2/Relu"
  op: "Relu"
  input: "clone_0/conv4/conv4_2/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0255155190825
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0255155190825
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv4/conv4_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv4/conv4_3/weights/Initializer/random_uniform/max"
  input: "conv4/conv4_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv4/conv4_3/weights/Initializer/random_uniform/RandomUniform"
  input: "conv4/conv4_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv4/conv4_3/weights/Initializer/random_uniform/mul"
  input: "conv4/conv4_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Assign"
  op: "Assign"
  input: "conv4/conv4_3/weights"
  input: "conv4/conv4_3/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_3/weights/read"
  op: "Identity"
  input: "conv4/conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv4/conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_3/biases/Assign"
  op: "Assign"
  input: "conv4/conv4_3/biases"
  input: "conv4/conv4_3/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_3/biases/read"
  op: "Identity"
  input: "conv4/conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_3/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv4/conv4_3/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv4/conv4_2/Relu"
  input: "conv4/conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv4/conv4_3/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv4/conv4_3/Conv2D"
  input: "conv4/conv4_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv4/conv4_3/Relu"
  op: "Relu"
  input: "clone_0/conv4/conv4_3/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pool4/MaxPool"
  op: "MaxPool"
  input: "clone_0/conv4/conv4_3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0255155190825
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0255155190825
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv5/conv5_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv5/conv5_1/weights/Initializer/random_uniform/max"
  input: "conv5/conv5_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv5/conv5_1/weights/Initializer/random_uniform/RandomUniform"
  input: "conv5/conv5_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv5/conv5_1/weights/Initializer/random_uniform/mul"
  input: "conv5/conv5_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Assign"
  op: "Assign"
  input: "conv5/conv5_1/weights"
  input: "conv5/conv5_1/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_1/weights/read"
  op: "Identity"
  input: "conv5/conv5_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv5/conv5_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_1/biases/Assign"
  op: "Assign"
  input: "conv5/conv5_1/biases"
  input: "conv5/conv5_1/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_1/biases/read"
  op: "Identity"
  input: "conv5/conv5_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_1/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_1/Conv2D"
  op: "Conv2D"
  input: "clone_0/pool4/MaxPool"
  input: "conv5/conv5_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv5/conv5_1/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv5/conv5_1/Conv2D"
  input: "conv5/conv5_1/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv5/conv5_1/Relu"
  op: "Relu"
  input: "clone_0/conv5/conv5_1/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0255155190825
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0255155190825
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv5/conv5_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv5/conv5_2/weights/Initializer/random_uniform/max"
  input: "conv5/conv5_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv5/conv5_2/weights/Initializer/random_uniform/RandomUniform"
  input: "conv5/conv5_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv5/conv5_2/weights/Initializer/random_uniform/mul"
  input: "conv5/conv5_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Assign"
  op: "Assign"
  input: "conv5/conv5_2/weights"
  input: "conv5/conv5_2/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_2/weights/read"
  op: "Identity"
  input: "conv5/conv5_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv5/conv5_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_2/biases/Assign"
  op: "Assign"
  input: "conv5/conv5_2/biases"
  input: "conv5/conv5_2/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_2/biases/read"
  op: "Identity"
  input: "conv5/conv5_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_2/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_2/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv5/conv5_1/Relu"
  input: "conv5/conv5_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv5/conv5_2/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv5/conv5_2/Conv2D"
  input: "conv5/conv5_2/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv5/conv5_2/Relu"
  op: "Relu"
  input: "clone_0/conv5/conv5_2/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0255155190825
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0255155190825
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv5/conv5_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv5/conv5_3/weights/Initializer/random_uniform/max"
  input: "conv5/conv5_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv5/conv5_3/weights/Initializer/random_uniform/RandomUniform"
  input: "conv5/conv5_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv5/conv5_3/weights/Initializer/random_uniform/mul"
  input: "conv5/conv5_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Assign"
  op: "Assign"
  input: "conv5/conv5_3/weights"
  input: "conv5/conv5_3/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_3/weights/read"
  op: "Identity"
  input: "conv5/conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv5/conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_3/biases/Assign"
  op: "Assign"
  input: "conv5/conv5_3/biases"
  input: "conv5/conv5_3/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_3/biases/read"
  op: "Identity"
  input: "conv5/conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_3/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/conv5/conv5_3/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv5/conv5_2/Relu"
  input: "conv5/conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/conv5/conv5_3/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/conv5/conv5_3/Conv2D"
  input: "conv5/conv5_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/conv5/conv5_3/Relu"
  op: "Relu"
  input: "clone_0/conv5/conv5_3/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pool5/MaxPool"
  op: "MaxPool"
  input: "clone_0/conv5/conv5_3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "fc6/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "fc6/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0208333339542
      }
    }
  }
}
node {
  name: "fc6/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0208333339542
      }
    }
  }
}
node {
  name: "fc6/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fc6/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc6/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fc6/weights/Initializer/random_uniform/max"
  input: "fc6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fc6/weights/Initializer/random_uniform/RandomUniform"
  input: "fc6/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/weights/Initializer/random_uniform"
  op: "Add"
  input: "fc6/weights/Initializer/random_uniform/mul"
  input: "fc6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc6/weights/Assign"
  op: "Assign"
  input: "fc6/weights"
  input: "fc6/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc6/weights/read"
  op: "Identity"
  input: "fc6/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/fc6/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/fc6/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "fc6/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/fc6/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/fc6/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/fc6/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "fc6/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc6/biases/Initializer/zeros"
  op: "Fill"
  input: "fc6/biases/Initializer/zeros/shape_as_tensor"
  input: "fc6/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc6/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc6/biases/Assign"
  op: "Assign"
  input: "fc6/biases"
  input: "fc6/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc6/biases/read"
  op: "Identity"
  input: "fc6/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/fc6/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc6/filter_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc6/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc6/required_space_to_batch_paddings/input_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc6/required_space_to_batch_paddings/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\n\000\000\000\006\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc6/required_space_to_batch_paddings/crops"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc6/SpaceToBatchND/block_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc6/SpaceToBatchND/paddings"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\n\000\000\000\006\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc6/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "clone_0/pool5/MaxPool"
  input: "clone_0/fc6/SpaceToBatchND/block_shape"
  input: "clone_0/fc6/SpaceToBatchND/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 360
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/fc6/Conv2D"
  op: "Conv2D"
  input: "clone_0/fc6/SpaceToBatchND"
  input: "fc6/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 360
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/fc6/BatchToSpaceND/block_shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc6/BatchToSpaceND/crops"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc6/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "clone_0/fc6/Conv2D"
  input: "clone_0/fc6/BatchToSpaceND/block_shape"
  input: "clone_0/fc6/BatchToSpaceND/crops"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/fc6/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/fc6/BatchToSpaceND"
  input: "fc6/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/fc6/Relu"
  op: "Relu"
  input: "clone_0/fc6/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "fc7/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0541265867651
      }
    }
  }
}
node {
  name: "fc7/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0541265867651
      }
    }
  }
}
node {
  name: "fc7/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fc7/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc7/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fc7/weights/Initializer/random_uniform/max"
  input: "fc7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fc7/weights/Initializer/random_uniform/RandomUniform"
  input: "fc7/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/weights/Initializer/random_uniform"
  op: "Add"
  input: "fc7/weights/Initializer/random_uniform/mul"
  input: "fc7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc7/weights/Assign"
  op: "Assign"
  input: "fc7/weights"
  input: "fc7/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc7/weights/read"
  op: "Identity"
  input: "fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/fc7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/fc7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/fc7/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "fc7/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc7/biases/Initializer/zeros"
  op: "Fill"
  input: "fc7/biases/Initializer/zeros/shape_as_tensor"
  input: "fc7/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc7/biases/Assign"
  op: "Assign"
  input: "fc7/biases"
  input: "fc7/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc7/biases/read"
  op: "Identity"
  input: "fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/fc7/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/fc7/Conv2D"
  op: "Conv2D"
  input: "clone_0/fc6/Relu"
  input: "fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/fc7/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/fc7/Conv2D"
  input: "fc7/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/fc7/Relu"
  op: "Relu"
  input: "clone_0/fc7/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0764719098806
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0764719098806
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/max"
  input: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/mul"
  input: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/weights"
  input: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/read"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_cls/score_from_fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/biases"
  input: "pixel_cls/score_from_fc7/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/read"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_fc7/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_fc7/Conv2D"
  op: "Conv2D"
  input: "clone_0/fc7/Relu"
  input: "pixel_cls/score_from_fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_fc7/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/pixel_cls/score_from_fc7/Conv2D"
  input: "pixel_cls/score_from_fc7/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.108042359352
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.108042359352
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/max"
  input: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/mul"
  input: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/weights"
  input: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_cls/score_from_conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/biases"
  input: "pixel_cls/score_from_conv5_3/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv5_3/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv5_3/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv5/conv5_3/Relu"
  input: "pixel_cls/score_from_conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv5_3/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/pixel_cls/score_from_conv5_3/Conv2D"
  input: "pixel_cls/score_from_conv5_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/pixel_cls/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000 \000\000\000 \000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls/Shape"
  input: "clone_0/pixel_cls/strided_slice/stack"
  input: "clone_0/pixel_cls/strided_slice/stack_1"
  input: "clone_0/pixel_cls/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls/add"
  op: "Add"
  input: "clone_0/pixel_cls/score_from_conv5_3/BiasAdd"
  input: "clone_0/pixel_cls/score_from_fc7/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.108042359352
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.108042359352
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/max"
  input: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/mul"
  input: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/weights"
  input: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_cls/score_from_conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/biases"
  input: "pixel_cls/score_from_conv4_3/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv4_3/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv4_3/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv4/conv4_3/Relu"
  input: "pixel_cls/score_from_conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv4_3/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/pixel_cls/score_from_conv4_3/Conv2D"
  input: "pixel_cls/score_from_conv4_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/pixel_cls/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000@\000\000\000@\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls/Shape_1"
  input: "clone_0/pixel_cls/strided_slice_1/stack"
  input: "clone_0/pixel_cls/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls/resize_1/ResizeBilinear"
  op: "ResizeBilinear"
  input: "clone_0/pixel_cls/add"
  input: "clone_0/pixel_cls/strided_slice_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls/add_1"
  op: "Add"
  input: "clone_0/pixel_cls/score_from_conv4_3/BiasAdd"
  input: "clone_0/pixel_cls/resize_1/ResizeBilinear"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.152498573065
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.152498573065
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/max"
  input: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/mul"
  input: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/weights"
  input: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_cls/score_from_conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/biases"
  input: "pixel_cls/score_from_conv3_3/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv3_3/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv3_3/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv3/conv3_3/Relu"
  input: "pixel_cls/score_from_conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls/score_from_conv3_3/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/pixel_cls/score_from_conv3_3/Conv2D"
  input: "pixel_cls/score_from_conv3_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/pixel_cls/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000\200\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls/Shape_2"
  input: "clone_0/pixel_cls/strided_slice_2/stack"
  input: "clone_0/pixel_cls/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls/resize_2/ResizeBilinear"
  op: "ResizeBilinear"
  input: "clone_0/pixel_cls/add_1"
  input: "clone_0/pixel_cls/strided_slice_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls/add_2"
  op: "Add"
  input: "clone_0/pixel_cls/score_from_conv3_3/BiasAdd"
  input: "clone_0/pixel_cls/resize_2/ResizeBilinear"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0759554505348
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0759554505348
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/max"
  input: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/mul"
  input: "pixel_link/score_from_fc7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Assign"
  op: "Assign"
  input: "pixel_link/score_from_fc7/weights"
  input: "pixel_link/score_from_fc7/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/read"
  op: "Identity"
  input: "pixel_link/score_from_fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_link/score_from_fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/Assign"
  op: "Assign"
  input: "pixel_link/score_from_fc7/biases"
  input: "pixel_link/score_from_fc7/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/read"
  op: "Identity"
  input: "pixel_link/score_from_fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_fc7/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_fc7/Conv2D"
  op: "Conv2D"
  input: "clone_0/fc7/Relu"
  input: "pixel_link/score_from_fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_fc7/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/pixel_link/score_from_fc7/Conv2D"
  input: "pixel_link/score_from_fc7/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.106600359082
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.106600359082
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/max"
  input: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/mul"
  input: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/weights"
  input: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/read"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_link/score_from_conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/biases"
  input: "pixel_link/score_from_conv5_3/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/read"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv5_3/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv5_3/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv5/conv5_3/Relu"
  input: "pixel_link/score_from_conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv5_3/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/pixel_link/score_from_conv5_3/Conv2D"
  input: "pixel_link/score_from_conv5_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/pixel_link/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000 \000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_link/Shape"
  input: "clone_0/pixel_link/strided_slice/stack"
  input: "clone_0/pixel_link/strided_slice/stack_1"
  input: "clone_0/pixel_link/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_link/add"
  op: "Add"
  input: "clone_0/pixel_link/score_from_conv5_3/BiasAdd"
  input: "clone_0/pixel_link/score_from_fc7/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.106600359082
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.106600359082
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/max"
  input: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/mul"
  input: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/weights"
  input: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/read"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_link/score_from_conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/biases"
  input: "pixel_link/score_from_conv4_3/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/read"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv4_3/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv4_3/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv4/conv4_3/Relu"
  input: "pixel_link/score_from_conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv4_3/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/pixel_link/score_from_conv4_3/Conv2D"
  input: "pixel_link/score_from_conv4_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/pixel_link/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000@\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_link/Shape_1"
  input: "clone_0/pixel_link/strided_slice_1/stack"
  input: "clone_0/pixel_link/strided_slice_1/stack_1"
  input: "clone_0/pixel_link/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_link/resize_1/ResizeBilinear"
  op: "ResizeBilinear"
  input: "clone_0/pixel_link/add"
  input: "clone_0/pixel_link/strided_slice_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_link/add_1"
  op: "Add"
  input: "clone_0/pixel_link/score_from_conv4_3/BiasAdd"
  input: "clone_0/pixel_link/resize_1/ResizeBilinear"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.148522138596
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.148522138596
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/max"
  input: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/RandomUniform"
  input: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/mul"
  input: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/weights"
  input: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/read"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pixel_link/score_from_conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer/scale"
  input: "clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/biases"
  input: "pixel_link/score_from_conv3_3/biases/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/read"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv3_3/dilation_rate"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv3_3/Conv2D"
  op: "Conv2D"
  input: "clone_0/conv3/conv3_3/Relu"
  input: "pixel_link/score_from_conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_link/score_from_conv3_3/BiasAdd"
  op: "BiasAdd"
  input: "clone_0/pixel_link/score_from_conv3_3/Conv2D"
  input: "pixel_link/score_from_conv3_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/pixel_link/Shape_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000\200\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_link/Shape_2"
  input: "clone_0/pixel_link/strided_slice_2/stack"
  input: "clone_0/pixel_link/strided_slice_2/stack_1"
  input: "clone_0/pixel_link/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_link/resize_2/ResizeBilinear"
  op: "ResizeBilinear"
  input: "clone_0/pixel_link/add_1"
  input: "clone_0/pixel_link/strided_slice_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_link/add_2"
  op: "Add"
  input: "clone_0/pixel_link/score_from_conv3_3/BiasAdd"
  input: "clone_0/pixel_link/resize_2/ResizeBilinear"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/Softmax"
  op: "Softmax"
  input: "clone_0/pixel_cls/add_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls/add_2"
  input: "clone_0/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/Reshape_1/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\377\377\377\377\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/Reshape_1"
  op: "Reshape"
  input: "clone_0/Softmax"
  input: "clone_0/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000\200\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/strided_slice"
  op: "StridedSlice"
  input: "clone_0/Shape"
  input: "clone_0/strided_slice/stack"
  input: "clone_0/strided_slice/stack_1"
  input: "clone_0/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/Shape"
  input: "clone_0/strided_slice_1/stack"
  input: "clone_0/strided_slice_1/stack_1"
  input: "clone_0/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/Shape"
  input: "clone_0/strided_slice_2/stack"
  input: "clone_0/strided_slice_2/stack_1"
  input: "clone_0/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/Reshape_2/shape/3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "clone_0/Reshape_2/shape/4"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "clone_0/Reshape_2/shape"
  op: "Pack"
  input: "clone_0/strided_slice"
  input: "clone_0/strided_slice_1"
  input: "clone_0/strided_slice_2"
  input: "clone_0/Reshape_2/shape/3"
  input: "clone_0/Reshape_2/shape/4"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/Reshape_2"
  op: "Reshape"
  input: "clone_0/pixel_link/add_2"
  input: "clone_0/Reshape_2/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/Softmax_1"
  op: "Softmax"
  input: "clone_0/Reshape_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_3/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_3"
  op: "StridedSlice"
  input: "clone_0/Softmax"
  input: "clone_0/strided_slice_3/stack"
  input: "clone_0/strided_slice_3/stack_1"
  input: "clone_0/strided_slice_3/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 8
    }
  }
}
node {
  name: "clone_0/strided_slice_4/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_4/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_4/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/strided_slice_4"
  op: "StridedSlice"
  input: "clone_0/Softmax_1"
  input: "clone_0/strided_slice_4/stack"
  input: "clone_0/strided_slice_4/stack_1"
  input: "clone_0/strided_slice_4/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 15
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 16
    }
  }
}
node {
  name: "clone_0/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_warning"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "count_warning/Assign"
  op: "Assign"
  input: "count_warning"
  input: "clone_0/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_warning"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "count_warning/read"
  op: "Identity"
  input: "count_warning"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_warning"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/Reshape_3/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "clone_0/Reshape_3"
  op: "Reshape"
  input: "clone_0/fifo_queue_Dequeue:1"
  input: "clone_0/Reshape_3/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/Reshape_4/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "clone_0/Reshape_4"
  op: "Reshape"
  input: "clone_0/fifo_queue_Dequeue:2"
  input: "clone_0/Reshape_4/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/Equal/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/Equal"
  op: "Equal"
  input: "clone_0/Reshape_3"
  input: "clone_0/Equal/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/Equal_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/Equal_1"
  op: "Equal"
  input: "clone_0/Reshape_3"
  input: "clone_0/Equal_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/Cast"
  op: "Cast"
  input: "clone_0/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/Sum"
  op: "Sum"
  input: "clone_0/Cast"
  input: "clone_0/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast"
  op: "Cast"
  input: "clone_0/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\000@\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  op: "Sub"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Rank"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/add/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/add"
  op: "Add"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/add"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  op: "Reshape"
  input: "clone_0/Reshape"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 163840
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/Cast"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 163840
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 163840
          }
        }
        shape {
          dim {
            size: 163840
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice"
  op: "StridedSlice"
  input: "clone_0/Reshape_1"
  input: "clone_0/pixel_cls_loss/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/strided_slice"
  input: "clone_0/pixel_cls_loss/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/Equal_1"
  input: "clone_0/pixel_cls_loss/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_3/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_3"
  op: "StridedSlice"
  input: "clone_0/Equal"
  input: "clone_0/pixel_cls_loss/strided_slice_3/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_3/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_3/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_1"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_3"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_1"
  input: "clone_0/pixel_cls_loss/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Sum"
  input: "clone_0/pixel_cls_loss/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater"
  input: "clone_0/pixel_cls_loss/Greater"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond/mul/y"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/cond/mul/Switch:1"
  input: "clone_0/pixel_cls_loss/cond/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond/mul/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Sum"
  input: "clone_0/pixel_cls_loss/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond/Const"
  input: "clone_0/pixel_cls_loss/cond/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_2"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_2"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_1"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_2"
  input: "clone_0/pixel_cls_loss/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Minimum"
  op: "Minimum"
  input: "clone_0/pixel_cls_loss/cond/Merge"
  input: "clone_0/pixel_cls_loss/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_1"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Minimum"
  input: "clone_0/pixel_cls_loss/Greater_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_1"
  input: "clone_0/pixel_cls_loss/Greater_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_1/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_1/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Shape"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Prod"
  op: "Prod"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Prod/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Shape_1"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Shape_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Shape_2"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Prod"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/concat/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/concat/values_1"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_1/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_1/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Where"
  op: "Where"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Where"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/GatherV2/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Squeeze"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/GatherV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/TopKV2"
  op: "TopKV2"
  input: "clone_0/pixel_cls_loss/cond_1/Neg"
  input: "clone_0/pixel_cls_loss/cond_1/TopKV2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/TopKV2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Minimum"
  input: "clone_0/pixel_cls_loss/cond_1/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_1/TopKV2"
  input: "clone_0/pixel_cls_loss/cond_1/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_1/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_1/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/Neg_1"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_1/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/LessEqual"
  op: "LessEqual"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_1/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/LogicalAnd"
  op: "LogicalAnd"
  input: "clone_0/pixel_cls_loss/cond_1/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_1/LessEqual"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/zeros_like/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_1/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/zeros_like"
  op: "Fill"
  input: "clone_0/pixel_cls_loss/cond_1/zeros_like/shape_as_tensor"
  input: "clone_0/pixel_cls_loss/cond_1/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_1/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_1/zeros_like"
  input: "clone_0/pixel_cls_loss/cond_1/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_3"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/cond_1/Merge"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_4/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_4/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_4/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_4"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/strided_slice"
  input: "clone_0/pixel_cls_loss/strided_slice_4/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_4/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_4/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_5/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_5/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_5/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_5"
  op: "StridedSlice"
  input: "clone_0/Equal_1"
  input: "clone_0/pixel_cls_loss/strided_slice_5/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_5/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_5/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_6/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_6/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_6/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_6"
  op: "StridedSlice"
  input: "clone_0/Equal"
  input: "clone_0/pixel_cls_loss/strided_slice_6/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_6/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_6/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_4"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_6"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_2"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_4"
  input: "clone_0/pixel_cls_loss/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_2/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_2"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Sum_2"
  input: "clone_0/pixel_cls_loss/Greater_2/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_2"
  input: "clone_0/pixel_cls_loss/Greater_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_2/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_2/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_2/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_2/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_2/mul/y"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_2/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_2/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/cond_2/mul/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_2/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_2/mul/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Sum_2"
  input: "clone_0/pixel_cls_loss/cond_2/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Sum_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_2/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_2/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_2/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_2/Const"
  input: "clone_0/pixel_cls_loss/cond_2/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_5"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_5"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_3"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_5"
  input: "clone_0/pixel_cls_loss/Const_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Minimum_1"
  op: "Minimum"
  input: "clone_0/pixel_cls_loss/cond_2/Merge"
  input: "clone_0/pixel_cls_loss/Sum_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_3/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_3"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Minimum_1"
  input: "clone_0/pixel_cls_loss/Greater_3/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_3"
  input: "clone_0/pixel_cls_loss/Greater_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_3/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_3/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Shape"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Prod/reduction_indices"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Prod"
  op: "Prod"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Prod/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_1/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Shape_1"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Shape_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_2/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Shape_2"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/concat/values_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Prod"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/concat/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/concat"
  op: "ConcatV2"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/concat/values_1"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_4"
  input: "clone_0/pixel_cls_loss/cond_3/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_5"
  input: "clone_0/pixel_cls_loss/cond_3/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Where"
  op: "Where"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Where"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/GatherV2/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Squeeze"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/GatherV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/TopKV2"
  op: "TopKV2"
  input: "clone_0/pixel_cls_loss/cond_3/Neg"
  input: "clone_0/pixel_cls_loss/cond_3/TopKV2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/TopKV2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Minimum_1"
  input: "clone_0/pixel_cls_loss/cond_3/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Minimum_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_3/TopKV2"
  input: "clone_0/pixel_cls_loss/cond_3/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_3/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_3/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/Neg_1"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_3/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/LessEqual"
  op: "LessEqual"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_3/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/LogicalAnd"
  op: "LogicalAnd"
  input: "clone_0/pixel_cls_loss/cond_3/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_3/LessEqual"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/zeros_like/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_3/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/zeros_like"
  op: "Fill"
  input: "clone_0/pixel_cls_loss/cond_3/zeros_like/shape_as_tensor"
  input: "clone_0/pixel_cls_loss/cond_3/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_3/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_3/zeros_like"
  input: "clone_0/pixel_cls_loss/cond_3/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_6"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/cond_3/Merge"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_7/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_7/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_7/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_7"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/strided_slice"
  input: "clone_0/pixel_cls_loss/strided_slice_7/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_7/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_7/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_8/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_8/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_8/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_8"
  op: "StridedSlice"
  input: "clone_0/Equal_1"
  input: "clone_0/pixel_cls_loss/strided_slice_8/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_8/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_8/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_9/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_9/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_9/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_9"
  op: "StridedSlice"
  input: "clone_0/Equal"
  input: "clone_0/pixel_cls_loss/strided_slice_9/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_9/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_9/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_7"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_9"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_4"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_4"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_7"
  input: "clone_0/pixel_cls_loss/Const_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_4/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_4"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Sum_4"
  input: "clone_0/pixel_cls_loss/Greater_4/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_4/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_4"
  input: "clone_0/pixel_cls_loss/Greater_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_4/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_4/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_4/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_4/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_4/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_4/mul/y"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_4/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_4/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/cond_4/mul/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_4/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_4/mul/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Sum_4"
  input: "clone_0/pixel_cls_loss/cond_4/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Sum_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_4/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_4/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_4/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_4/Const"
  input: "clone_0/pixel_cls_loss/cond_4/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_8"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_8"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_5"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_5"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_8"
  input: "clone_0/pixel_cls_loss/Const_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Minimum_2"
  op: "Minimum"
  input: "clone_0/pixel_cls_loss/cond_4/Merge"
  input: "clone_0/pixel_cls_loss/Sum_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_5/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_5"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Minimum_2"
  input: "clone_0/pixel_cls_loss/Greater_5/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_5"
  input: "clone_0/pixel_cls_loss/Greater_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_5/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_5/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Shape"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Prod/reduction_indices"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Prod"
  op: "Prod"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Prod/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_1/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Shape_1"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Shape_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_2/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Shape_2"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/concat/values_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Prod"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/concat/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/concat"
  op: "ConcatV2"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/concat/values_1"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_7"
  input: "clone_0/pixel_cls_loss/cond_5/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_8"
  input: "clone_0/pixel_cls_loss/cond_5/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Where"
  op: "Where"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Where"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/GatherV2/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Squeeze"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/GatherV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/TopKV2"
  op: "TopKV2"
  input: "clone_0/pixel_cls_loss/cond_5/Neg"
  input: "clone_0/pixel_cls_loss/cond_5/TopKV2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/TopKV2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Minimum_2"
  input: "clone_0/pixel_cls_loss/cond_5/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Minimum_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_5/TopKV2"
  input: "clone_0/pixel_cls_loss/cond_5/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_5/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_5/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/Neg_1"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_5/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/LessEqual"
  op: "LessEqual"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_5/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/LogicalAnd"
  op: "LogicalAnd"
  input: "clone_0/pixel_cls_loss/cond_5/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_5/LessEqual"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/zeros_like/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_5/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/zeros_like"
  op: "Fill"
  input: "clone_0/pixel_cls_loss/cond_5/zeros_like/shape_as_tensor"
  input: "clone_0/pixel_cls_loss/cond_5/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_5/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_5/zeros_like"
  input: "clone_0/pixel_cls_loss/cond_5/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_9"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/cond_5/Merge"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_10/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_10/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_10/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_10"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/strided_slice"
  input: "clone_0/pixel_cls_loss/strided_slice_10/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_10/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_10/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_11/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_11/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_11/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_11"
  op: "StridedSlice"
  input: "clone_0/Equal_1"
  input: "clone_0/pixel_cls_loss/strided_slice_11/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_11/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_11/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_12/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_12/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_12/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_12"
  op: "StridedSlice"
  input: "clone_0/Equal"
  input: "clone_0/pixel_cls_loss/strided_slice_12/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_12/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_12/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_10"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_12"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_6"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_6"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_10"
  input: "clone_0/pixel_cls_loss/Const_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_6/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_6"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Sum_6"
  input: "clone_0/pixel_cls_loss/Greater_6/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_6/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_6"
  input: "clone_0/pixel_cls_loss/Greater_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_6/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_6/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_6/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_6/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_6/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_6/mul/y"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_6/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_6/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/cond_6/mul/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_6/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_6/mul/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Sum_6"
  input: "clone_0/pixel_cls_loss/cond_6/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Sum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_6/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_6/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_6/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_6/Const"
  input: "clone_0/pixel_cls_loss/cond_6/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_11"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_11"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_7"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_7"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_11"
  input: "clone_0/pixel_cls_loss/Const_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Minimum_3"
  op: "Minimum"
  input: "clone_0/pixel_cls_loss/cond_6/Merge"
  input: "clone_0/pixel_cls_loss/Sum_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_7/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_7"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Minimum_3"
  input: "clone_0/pixel_cls_loss/Greater_7/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_7"
  input: "clone_0/pixel_cls_loss/Greater_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_7/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_7/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Shape"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Prod/reduction_indices"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Prod"
  op: "Prod"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Prod/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_1/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Shape_1"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Shape_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_2/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Shape_2"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/concat/values_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Prod"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/concat/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/concat"
  op: "ConcatV2"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/concat/values_1"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_10"
  input: "clone_0/pixel_cls_loss/cond_7/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_11"
  input: "clone_0/pixel_cls_loss/cond_7/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Where"
  op: "Where"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Where"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/GatherV2/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Squeeze"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/GatherV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/TopKV2"
  op: "TopKV2"
  input: "clone_0/pixel_cls_loss/cond_7/Neg"
  input: "clone_0/pixel_cls_loss/cond_7/TopKV2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/TopKV2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Minimum_3"
  input: "clone_0/pixel_cls_loss/cond_7/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Minimum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_7/TopKV2"
  input: "clone_0/pixel_cls_loss/cond_7/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_7/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_7/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/Neg_1"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_7/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/LessEqual"
  op: "LessEqual"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_7/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/LogicalAnd"
  op: "LogicalAnd"
  input: "clone_0/pixel_cls_loss/cond_7/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_7/LessEqual"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/zeros_like/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_7/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/zeros_like"
  op: "Fill"
  input: "clone_0/pixel_cls_loss/cond_7/zeros_like/shape_as_tensor"
  input: "clone_0/pixel_cls_loss/cond_7/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_7/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_7/zeros_like"
  input: "clone_0/pixel_cls_loss/cond_7/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_12"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/cond_7/Merge"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_13/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_13/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_13/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_13"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/strided_slice"
  input: "clone_0/pixel_cls_loss/strided_slice_13/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_13/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_13/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_14/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_14/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_14/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_14"
  op: "StridedSlice"
  input: "clone_0/Equal_1"
  input: "clone_0/pixel_cls_loss/strided_slice_14/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_14/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_14/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_15/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_15/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_15/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_15"
  op: "StridedSlice"
  input: "clone_0/Equal"
  input: "clone_0/pixel_cls_loss/strided_slice_15/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_15/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_15/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_13"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_15"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_8"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_8"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_13"
  input: "clone_0/pixel_cls_loss/Const_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_8/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_8"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Sum_8"
  input: "clone_0/pixel_cls_loss/Greater_8/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_8/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_8"
  input: "clone_0/pixel_cls_loss/Greater_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_8/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_8/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_8/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_8/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_8/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_8/mul/y"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_8/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_8/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/cond_8/mul/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_8/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_8/mul/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Sum_8"
  input: "clone_0/pixel_cls_loss/cond_8/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Sum_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_8/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_8/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_8/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_8/Const"
  input: "clone_0/pixel_cls_loss/cond_8/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_14"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_14"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_9"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_9"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_14"
  input: "clone_0/pixel_cls_loss/Const_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Minimum_4"
  op: "Minimum"
  input: "clone_0/pixel_cls_loss/cond_8/Merge"
  input: "clone_0/pixel_cls_loss/Sum_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_9/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_9"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Minimum_4"
  input: "clone_0/pixel_cls_loss/Greater_9/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_9"
  input: "clone_0/pixel_cls_loss/Greater_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_9/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_9/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Shape"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Prod/reduction_indices"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Prod"
  op: "Prod"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Prod/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_1/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Shape_1"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Shape_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_2/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Shape_2"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/concat/values_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Prod"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/concat/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/concat"
  op: "ConcatV2"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/concat/values_1"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_13"
  input: "clone_0/pixel_cls_loss/cond_9/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_14"
  input: "clone_0/pixel_cls_loss/cond_9/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Where"
  op: "Where"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Where"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/GatherV2/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Squeeze"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/GatherV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/TopKV2"
  op: "TopKV2"
  input: "clone_0/pixel_cls_loss/cond_9/Neg"
  input: "clone_0/pixel_cls_loss/cond_9/TopKV2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/TopKV2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Minimum_4"
  input: "clone_0/pixel_cls_loss/cond_9/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Minimum_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_9/TopKV2"
  input: "clone_0/pixel_cls_loss/cond_9/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_9/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_9/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/Neg_1"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_9/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/LessEqual"
  op: "LessEqual"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_9/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/LogicalAnd"
  op: "LogicalAnd"
  input: "clone_0/pixel_cls_loss/cond_9/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_9/LessEqual"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/zeros_like/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_9/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/zeros_like"
  op: "Fill"
  input: "clone_0/pixel_cls_loss/cond_9/zeros_like/shape_as_tensor"
  input: "clone_0/pixel_cls_loss/cond_9/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_9/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_9/zeros_like"
  input: "clone_0/pixel_cls_loss/cond_9/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_15"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/cond_9/Merge"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_16/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_16/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_16/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_16"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/strided_slice"
  input: "clone_0/pixel_cls_loss/strided_slice_16/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_16/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_16/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_17/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_17/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_17/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_17"
  op: "StridedSlice"
  input: "clone_0/Equal_1"
  input: "clone_0/pixel_cls_loss/strided_slice_17/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_17/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_17/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_18/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_18/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_18/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_18"
  op: "StridedSlice"
  input: "clone_0/Equal"
  input: "clone_0/pixel_cls_loss/strided_slice_18/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_18/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_18/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_16"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_18"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_10"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_10"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_16"
  input: "clone_0/pixel_cls_loss/Const_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_10/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_10"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Sum_10"
  input: "clone_0/pixel_cls_loss/Greater_10/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_10/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_10"
  input: "clone_0/pixel_cls_loss/Greater_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_10/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_10/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_10/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_10/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_10/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_10/mul/y"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_10/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_10/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/cond_10/mul/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_10/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_10/mul/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Sum_10"
  input: "clone_0/pixel_cls_loss/cond_10/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Sum_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_10/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_10/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_10/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_10/Const"
  input: "clone_0/pixel_cls_loss/cond_10/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_17"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_17"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_11"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_11"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_17"
  input: "clone_0/pixel_cls_loss/Const_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Minimum_5"
  op: "Minimum"
  input: "clone_0/pixel_cls_loss/cond_10/Merge"
  input: "clone_0/pixel_cls_loss/Sum_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_11/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_11"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Minimum_5"
  input: "clone_0/pixel_cls_loss/Greater_11/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_11"
  input: "clone_0/pixel_cls_loss/Greater_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_11/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_11/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Shape"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Prod/reduction_indices"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Prod"
  op: "Prod"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Prod/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_1/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Shape_1"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Shape_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_2/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Shape_2"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/concat/values_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Prod"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/concat/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/concat"
  op: "ConcatV2"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/concat/values_1"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_16"
  input: "clone_0/pixel_cls_loss/cond_11/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_17"
  input: "clone_0/pixel_cls_loss/cond_11/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_17"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Where"
  op: "Where"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Where"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/GatherV2/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Squeeze"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/GatherV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/TopKV2"
  op: "TopKV2"
  input: "clone_0/pixel_cls_loss/cond_11/Neg"
  input: "clone_0/pixel_cls_loss/cond_11/TopKV2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/TopKV2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Minimum_5"
  input: "clone_0/pixel_cls_loss/cond_11/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Minimum_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_11/TopKV2"
  input: "clone_0/pixel_cls_loss/cond_11/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_11/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_11/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/Neg_1"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_11/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/LessEqual"
  op: "LessEqual"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_11/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/LogicalAnd"
  op: "LogicalAnd"
  input: "clone_0/pixel_cls_loss/cond_11/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_11/LessEqual"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/zeros_like/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_11/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/zeros_like"
  op: "Fill"
  input: "clone_0/pixel_cls_loss/cond_11/zeros_like/shape_as_tensor"
  input: "clone_0/pixel_cls_loss/cond_11/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_11/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_11/zeros_like"
  input: "clone_0/pixel_cls_loss/cond_11/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_18"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/cond_11/Merge"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_19/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_19/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_19/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_19"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/strided_slice"
  input: "clone_0/pixel_cls_loss/strided_slice_19/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_19/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_19/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_20/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_20/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_20/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_20"
  op: "StridedSlice"
  input: "clone_0/Equal_1"
  input: "clone_0/pixel_cls_loss/strided_slice_20/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_20/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_20/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_21/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_21/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_21/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_21"
  op: "StridedSlice"
  input: "clone_0/Equal"
  input: "clone_0/pixel_cls_loss/strided_slice_21/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_21/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_21/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_19"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_21"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_12"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_12"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_19"
  input: "clone_0/pixel_cls_loss/Const_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_12/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_12"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Sum_12"
  input: "clone_0/pixel_cls_loss/Greater_12/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_12/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_12"
  input: "clone_0/pixel_cls_loss/Greater_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_12/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_12/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_12/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_12/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_12/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_12/mul/y"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_12/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_12/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/cond_12/mul/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_12/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_12/mul/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Sum_12"
  input: "clone_0/pixel_cls_loss/cond_12/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Sum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_12/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_12/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_12/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_12/Const"
  input: "clone_0/pixel_cls_loss/cond_12/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_20"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_20"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_13"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_13"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_20"
  input: "clone_0/pixel_cls_loss/Const_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Minimum_6"
  op: "Minimum"
  input: "clone_0/pixel_cls_loss/cond_12/Merge"
  input: "clone_0/pixel_cls_loss/Sum_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_13/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_13"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Minimum_6"
  input: "clone_0/pixel_cls_loss/Greater_13/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_13"
  input: "clone_0/pixel_cls_loss/Greater_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_13/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_13/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Shape"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Prod/reduction_indices"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Prod"
  op: "Prod"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Prod/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_1/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Shape_1"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Shape_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_2/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Shape_2"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/concat/values_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Prod"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/concat/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/concat"
  op: "ConcatV2"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/concat/values_1"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_19"
  input: "clone_0/pixel_cls_loss/cond_13/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_19"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_20"
  input: "clone_0/pixel_cls_loss/cond_13/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_20"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Where"
  op: "Where"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Where"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/GatherV2/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Squeeze"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/GatherV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/TopKV2"
  op: "TopKV2"
  input: "clone_0/pixel_cls_loss/cond_13/Neg"
  input: "clone_0/pixel_cls_loss/cond_13/TopKV2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/TopKV2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Minimum_6"
  input: "clone_0/pixel_cls_loss/cond_13/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Minimum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_13/TopKV2"
  input: "clone_0/pixel_cls_loss/cond_13/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_13/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_13/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/Neg_1"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_13/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/LessEqual"
  op: "LessEqual"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_13/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/LogicalAnd"
  op: "LogicalAnd"
  input: "clone_0/pixel_cls_loss/cond_13/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_13/LessEqual"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/zeros_like/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_13/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/zeros_like"
  op: "Fill"
  input: "clone_0/pixel_cls_loss/cond_13/zeros_like/shape_as_tensor"
  input: "clone_0/pixel_cls_loss/cond_13/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_13/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_13/zeros_like"
  input: "clone_0/pixel_cls_loss/cond_13/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_21"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/cond_13/Merge"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_22/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_22/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_22/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_22"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/strided_slice"
  input: "clone_0/pixel_cls_loss/strided_slice_22/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_22/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_22/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_23/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_23/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_23/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_23"
  op: "StridedSlice"
  input: "clone_0/Equal_1"
  input: "clone_0/pixel_cls_loss/strided_slice_23/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_23/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_23/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_24/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_24/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_24/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_24"
  op: "StridedSlice"
  input: "clone_0/Equal"
  input: "clone_0/pixel_cls_loss/strided_slice_24/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_24/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_24/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_22"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_24"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_14"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_14"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_22"
  input: "clone_0/pixel_cls_loss/Const_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_14/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_14"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Sum_14"
  input: "clone_0/pixel_cls_loss/Greater_14/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_14/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_14"
  input: "clone_0/pixel_cls_loss/Greater_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_14/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_14/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_14/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_14/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_14/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_14/mul/y"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_14/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_14/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/cond_14/mul/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_14/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_14/mul/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Sum_14"
  input: "clone_0/pixel_cls_loss/cond_14/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Sum_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_14/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_14/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_14/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_14/Const"
  input: "clone_0/pixel_cls_loss/cond_14/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_23"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_23"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_15"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_15"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_23"
  input: "clone_0/pixel_cls_loss/Const_15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Minimum_7"
  op: "Minimum"
  input: "clone_0/pixel_cls_loss/cond_14/Merge"
  input: "clone_0/pixel_cls_loss/Sum_15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_15/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_15"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Minimum_7"
  input: "clone_0/pixel_cls_loss/Greater_15/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_15"
  input: "clone_0/pixel_cls_loss/Greater_15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_15/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_15/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Shape"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Prod/reduction_indices"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Prod"
  op: "Prod"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Prod/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_1/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Shape_1"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Shape_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_2/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Shape_2"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/concat/values_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Prod"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/concat/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/concat"
  op: "ConcatV2"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/concat/values_1"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_22"
  input: "clone_0/pixel_cls_loss/cond_15/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_22"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_23"
  input: "clone_0/pixel_cls_loss/cond_15/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_23"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Where"
  op: "Where"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Where"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/GatherV2/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Squeeze"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/GatherV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/TopKV2"
  op: "TopKV2"
  input: "clone_0/pixel_cls_loss/cond_15/Neg"
  input: "clone_0/pixel_cls_loss/cond_15/TopKV2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/TopKV2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Minimum_7"
  input: "clone_0/pixel_cls_loss/cond_15/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Minimum_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_15/TopKV2"
  input: "clone_0/pixel_cls_loss/cond_15/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_15/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_15/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/Neg_1"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_15/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/LessEqual"
  op: "LessEqual"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_15/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/LogicalAnd"
  op: "LogicalAnd"
  input: "clone_0/pixel_cls_loss/cond_15/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_15/LessEqual"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/zeros_like/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_15/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/zeros_like"
  op: "Fill"
  input: "clone_0/pixel_cls_loss/cond_15/zeros_like/shape_as_tensor"
  input: "clone_0/pixel_cls_loss/cond_15/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_15/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_15/zeros_like"
  input: "clone_0/pixel_cls_loss/cond_15/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_24"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/cond_15/Merge"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_25/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_25/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_25/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_25"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/strided_slice"
  input: "clone_0/pixel_cls_loss/strided_slice_25/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_25/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_25/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_26/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_26/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_26/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_26"
  op: "StridedSlice"
  input: "clone_0/Equal_1"
  input: "clone_0/pixel_cls_loss/strided_slice_26/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_26/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_26/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_27/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_27/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_27/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_27"
  op: "StridedSlice"
  input: "clone_0/Equal"
  input: "clone_0/pixel_cls_loss/strided_slice_27/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_27/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_27/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_25"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_27"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_16"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_16"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_25"
  input: "clone_0/pixel_cls_loss/Const_16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_16/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_16"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Sum_16"
  input: "clone_0/pixel_cls_loss/Greater_16/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_16/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_16"
  input: "clone_0/pixel_cls_loss/Greater_16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_16/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_16/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_16/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_16/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_16/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_16/mul/y"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_16/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_16/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/cond_16/mul/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_16/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_16/mul/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Sum_16"
  input: "clone_0/pixel_cls_loss/cond_16/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Sum_16"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_16/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_16/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_16/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_16/Const"
  input: "clone_0/pixel_cls_loss/cond_16/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_26"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_26"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_17"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_17"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_26"
  input: "clone_0/pixel_cls_loss/Const_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Minimum_8"
  op: "Minimum"
  input: "clone_0/pixel_cls_loss/cond_16/Merge"
  input: "clone_0/pixel_cls_loss/Sum_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_17/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_17"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Minimum_8"
  input: "clone_0/pixel_cls_loss/Greater_17/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_17"
  input: "clone_0/pixel_cls_loss/Greater_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_17/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_17/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Shape"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Prod/reduction_indices"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Prod"
  op: "Prod"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Prod/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_1/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Shape_1"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Shape_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_2/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Shape_2"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/concat/values_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Prod"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/concat/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/concat"
  op: "ConcatV2"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/concat/values_1"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_25"
  input: "clone_0/pixel_cls_loss/cond_17/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_25"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_26"
  input: "clone_0/pixel_cls_loss/cond_17/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_26"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Where"
  op: "Where"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Where"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/GatherV2/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Squeeze"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/GatherV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/TopKV2"
  op: "TopKV2"
  input: "clone_0/pixel_cls_loss/cond_17/Neg"
  input: "clone_0/pixel_cls_loss/cond_17/TopKV2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/TopKV2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Minimum_8"
  input: "clone_0/pixel_cls_loss/cond_17/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Minimum_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_17/TopKV2"
  input: "clone_0/pixel_cls_loss/cond_17/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_17/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_17/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/Neg_1"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_17/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/LessEqual"
  op: "LessEqual"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_17/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/LogicalAnd"
  op: "LogicalAnd"
  input: "clone_0/pixel_cls_loss/cond_17/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_17/LessEqual"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/zeros_like/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_17/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/zeros_like"
  op: "Fill"
  input: "clone_0/pixel_cls_loss/cond_17/zeros_like/shape_as_tensor"
  input: "clone_0/pixel_cls_loss/cond_17/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_17/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_17/zeros_like"
  input: "clone_0/pixel_cls_loss/cond_17/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_27"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/cond_17/Merge"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_28/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_28/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_28/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_28"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/strided_slice"
  input: "clone_0/pixel_cls_loss/strided_slice_28/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_28/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_28/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_29/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_29/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_29/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_29"
  op: "StridedSlice"
  input: "clone_0/Equal_1"
  input: "clone_0/pixel_cls_loss/strided_slice_29/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_29/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_29/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_30/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_30/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_30/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/strided_slice_30"
  op: "StridedSlice"
  input: "clone_0/Equal"
  input: "clone_0/pixel_cls_loss/strided_slice_30/stack"
  input: "clone_0/pixel_cls_loss/strided_slice_30/stack_1"
  input: "clone_0/pixel_cls_loss/strided_slice_30/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_28"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_30"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_18"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_18"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_28"
  input: "clone_0/pixel_cls_loss/Const_18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_18/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_18"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Sum_18"
  input: "clone_0/pixel_cls_loss/Greater_18/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_18/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_18"
  input: "clone_0/pixel_cls_loss/Greater_18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_18/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_18/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_18/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_18/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_18/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_18/mul/y"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_18/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_18/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/cond_18/mul/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_18/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_18/mul/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Sum_18"
  input: "clone_0/pixel_cls_loss/cond_18/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Sum_18"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_18/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_18/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_18/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_18/Const"
  input: "clone_0/pixel_cls_loss/cond_18/mul"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_29"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/strided_slice_29"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_19"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_19"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/Cast_29"
  input: "clone_0/pixel_cls_loss/Const_19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Minimum_9"
  op: "Minimum"
  input: "clone_0/pixel_cls_loss/cond_18/Merge"
  input: "clone_0/pixel_cls_loss/Sum_19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_19/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Greater_19"
  op: "Greater"
  input: "clone_0/pixel_cls_loss/Minimum_9"
  input: "clone_0/pixel_cls_loss/Greater_19/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Greater_19"
  input: "clone_0/pixel_cls_loss/Greater_19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/switch_t"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_19/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/switch_f"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/cond_19/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/pred_id"
  op: "Identity"
  input: "clone_0/pixel_cls_loss/Greater_19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Shape"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Prod/reduction_indices"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Prod"
  op: "Prod"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Prod/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_1/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Shape_1"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_1/stack"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_1/stack_1"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Shape_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_2/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Shape_2"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_2/stack"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_2/stack_1"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/concat/values_1"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Prod"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/concat/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/concat"
  op: "ConcatV2"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_1"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/concat/values_1"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/strided_slice_2"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_28"
  input: "clone_0/pixel_cls_loss/cond_19/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_28"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/strided_slice_29"
  input: "clone_0/pixel_cls_loss/cond_19/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/strided_slice_29"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Where"
  op: "Where"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Where"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/GatherV2/axis"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Squeeze"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/GatherV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/TopKV2"
  op: "TopKV2"
  input: "clone_0/pixel_cls_loss/cond_19/Neg"
  input: "clone_0/pixel_cls_loss/cond_19/TopKV2/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/TopKV2/Switch"
  op: "Switch"
  input: "clone_0/pixel_cls_loss/Minimum_9"
  input: "clone_0/pixel_cls_loss/cond_19/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/pixel_cls_loss/Minimum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/strided_slice/stack"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/strided_slice/stack_1"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_cls_loss/cond_19/TopKV2"
  input: "clone_0/pixel_cls_loss/cond_19/strided_slice/stack"
  input: "clone_0/pixel_cls_loss/cond_19/strided_slice/stack_1"
  input: "clone_0/pixel_cls_loss/cond_19/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/Neg_1"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/cond_19/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/LessEqual"
  op: "LessEqual"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_19/Neg_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/LogicalAnd"
  op: "LogicalAnd"
  input: "clone_0/pixel_cls_loss/cond_19/boolean_mask/Reshape_1/Switch:1"
  input: "clone_0/pixel_cls_loss/cond_19/LessEqual"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/zeros_like/Const"
  op: "Const"
  input: "^clone_0/pixel_cls_loss/cond_19/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/zeros_like"
  op: "Fill"
  input: "clone_0/pixel_cls_loss/cond_19/zeros_like/shape_as_tensor"
  input: "clone_0/pixel_cls_loss/cond_19/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/cond_19/Merge"
  op: "Merge"
  input: "clone_0/pixel_cls_loss/cond_19/zeros_like"
  input: "clone_0/pixel_cls_loss/cond_19/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_30"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/cond_19/Merge"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/stack"
  op: "Pack"
  input: "clone_0/pixel_cls_loss/Cast_3"
  input: "clone_0/pixel_cls_loss/Cast_6"
  input: "clone_0/pixel_cls_loss/Cast_9"
  input: "clone_0/pixel_cls_loss/Cast_12"
  input: "clone_0/pixel_cls_loss/Cast_15"
  input: "clone_0/pixel_cls_loss/Cast_18"
  input: "clone_0/pixel_cls_loss/Cast_21"
  input: "clone_0/pixel_cls_loss/Cast_24"
  input: "clone_0/pixel_cls_loss/Cast_27"
  input: "clone_0/pixel_cls_loss/Cast_30"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_31"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/stack"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/add"
  op: "Add"
  input: "clone_0/Reshape_4"
  input: "clone_0/pixel_cls_loss/Cast_31"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_20"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_20"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/stack"
  input: "clone_0/pixel_cls_loss/Const_20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Cast_32"
  op: "Cast"
  input: "clone_0/pixel_cls_loss/Sum_20"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/mul"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "clone_0/pixel_cls_loss/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Const_21"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/Sum_21"
  op: "Sum"
  input: "clone_0/pixel_cls_loss/mul"
  input: "clone_0/pixel_cls_loss/Const_21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/add_1"
  op: "Add"
  input: "clone_0/pixel_cls_loss/Cast_32"
  input: "clone_0/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/div"
  op: "RealDiv"
  input: "clone_0/pixel_cls_loss/Sum_21"
  input: "clone_0/pixel_cls_loss/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/mul_1/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss/mul_1"
  op: "Mul"
  input: "clone_0/pixel_cls_loss/div"
  input: "clone_0/pixel_cls_loss/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/Greater/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/Greater"
  op: "Greater"
  input: "clone_0/Sum"
  input: "clone_0/pixel_link_loss/Greater/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Switch"
  op: "Switch"
  input: "clone_0/pixel_link_loss/Greater"
  input: "clone_0/pixel_link_loss/Greater"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/switch_t"
  op: "Identity"
  input: "clone_0/pixel_link_loss/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/switch_f"
  op: "Identity"
  input: "clone_0/pixel_link_loss/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/pred_id"
  op: "Identity"
  input: "clone_0/pixel_link_loss/Greater"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000\200\000\000\000\010\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Rank"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/sub"
  op: "Sub"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Rank"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/add/y"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/add"
  op: "Add"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/sub"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  op: "Pack"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/sub"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  op: "Pack"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/add"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  op: "StridedSlice"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  op: "Pack"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  op: "Reshape"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape/Switch:1"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1310720
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape/Switch"
  op: "Switch"
  input: "clone_0/Reshape_2"
  input: "clone_0/pixel_link_loss/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/Reshape_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  op: "Reshape"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/Switch:1"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1310720
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/Switch"
  op: "Switch"
  input: "clone_0/fifo_queue_Dequeue:3"
  input: "clone_0/pixel_link_loss/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/fifo_queue_Dequeue"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1310720
          }
        }
        shape {
          dim {
            size: 1310720
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  op: "Reshape"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Equal/y"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Equal"
  op: "Equal"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/Switch:1"
  input: "clone_0/pixel_link_loss/cond/Equal/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Cast"
  op: "Cast"
  input: "clone_0/pixel_link_loss/cond/Equal"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/mul"
  op: "Mul"
  input: "clone_0/pixel_link_loss/cond/mul/Switch:1"
  input: "clone_0/pixel_link_loss/cond/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/mul/Switch"
  op: "Switch"
  input: "clone_0/fifo_queue_Dequeue:4"
  input: "clone_0/pixel_link_loss/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/fifo_queue_Dequeue"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Const"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Sum"
  op: "Sum"
  input: "clone_0/pixel_link_loss/cond/mul"
  input: "clone_0/pixel_link_loss/cond/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/mul_1"
  op: "Mul"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "clone_0/pixel_link_loss/cond/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Const_1"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Sum_1"
  op: "Sum"
  input: "clone_0/pixel_link_loss/cond/mul_1"
  input: "clone_0/pixel_link_loss/cond/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/div"
  op: "RealDiv"
  input: "clone_0/pixel_link_loss/cond/Sum_1"
  input: "clone_0/pixel_link_loss/cond/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Equal_1/y"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Equal_1"
  op: "Equal"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/Switch:1"
  input: "clone_0/pixel_link_loss/cond/Equal_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Cast_1"
  op: "Cast"
  input: "clone_0/pixel_link_loss/cond/Equal_1"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/mul_2"
  op: "Mul"
  input: "clone_0/pixel_link_loss/cond/mul/Switch:1"
  input: "clone_0/pixel_link_loss/cond/Cast_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Const_2"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Sum_2"
  op: "Sum"
  input: "clone_0/pixel_link_loss/cond/mul_2"
  input: "clone_0/pixel_link_loss/cond/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/mul_3"
  op: "Mul"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "clone_0/pixel_link_loss/cond/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Const_3"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Sum_3"
  op: "Sum"
  input: "clone_0/pixel_link_loss/cond/mul_3"
  input: "clone_0/pixel_link_loss/cond/Const_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/div_1"
  op: "RealDiv"
  input: "clone_0/pixel_link_loss/cond/Sum_3"
  input: "clone_0/pixel_link_loss/cond/Sum_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Const_4"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Const_5"
  op: "Const"
  input: "^clone_0/pixel_link_loss/cond/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Merge"
  op: "Merge"
  input: "clone_0/pixel_link_loss/cond/Const_4"
  input: "clone_0/pixel_link_loss/cond/div"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/cond/Merge_1"
  op: "Merge"
  input: "clone_0/pixel_link_loss/cond/Const_5"
  input: "clone_0/pixel_link_loss/cond/div_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/mul/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/mul"
  op: "Mul"
  input: "clone_0/pixel_link_loss/cond/Merge"
  input: "clone_0/pixel_link_loss/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/add"
  op: "Add"
  input: "clone_0/pixel_link_loss/cond/Merge_1"
  input: "clone_0/pixel_link_loss/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/mul_1/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clone_0/pixel_link_loss/mul_1"
  op: "Mul"
  input: "clone_0/pixel_link_loss/mul_1/x"
  input: "clone_0/pixel_link_loss/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss_1/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "clone_0/pixel_cls_loss_1"
      }
    }
  }
}
node {
  name: "clone_0/pixel_cls_loss_1"
  op: "ScalarSummary"
  input: "clone_0/pixel_cls_loss_1/tags"
  input: "clone_0/pixel_cls_loss/div"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_pos_link_loss/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "clone_0/pixel_pos_link_loss"
      }
    }
  }
}
node {
  name: "clone_0/pixel_pos_link_loss"
  op: "ScalarSummary"
  input: "clone_0/pixel_pos_link_loss/tags"
  input: "clone_0/pixel_link_loss/cond/Merge_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/pixel_neg_link_loss/tags"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "clone_0/pixel_neg_link_loss"
      }
    }
  }
}
node {
  name: "clone_0/pixel_neg_link_loss"
  op: "ScalarSummary"
  input: "clone_0/pixel_neg_link_loss/tags"
  input: "clone_0/pixel_link_loss/cond/Merge"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/AddN"
  op: "AddN"
  input: "clone_0/pixel_cls_loss/mul_1"
  input: "clone_0/pixel_link_loss/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/div/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clone_0/div"
  op: "RealDiv"
  input: "clone_0/AddN"
  input: "clone_0/div/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/add/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clone_0/add"
  op: "Add"
  input: "clone_0/add/x"
  input: "clone_0/div"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/AddN_1"
  op: "AddN"
  input: "clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer"
  input: "clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer"
  input: "clone_0/fc6/kernel/Regularizer/l2_regularizer"
  input: "clone_0/fc7/kernel/Regularizer/l2_regularizer"
  input: "clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer"
  input: "clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer"
  input: "clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer"
  input: "clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer"
  input: "clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer"
  input: "clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer"
  input: "clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer"
  input: "clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 23
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/add_1"
  op: "Add"
  input: "clone_0/div"
  input: "clone_0/AddN_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/grad_ys_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clone_0/gradients/Fill"
  op: "Fill"
  input: "clone_0/gradients/Shape"
  input: "clone_0/gradients/grad_ys_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/Fill"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/Fill"
  input: "^clone_0/gradients/clone_0/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/Fill"
  input: "^clone_0/gradients/clone_0/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "clone_0/gradients/clone_0/div_grad/Shape"
  input: "clone_0/gradients/clone_0/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/RealDiv"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency"
  input: "clone_0/div/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/Sum"
  op: "Sum"
  input: "clone_0/gradients/clone_0/div_grad/RealDiv"
  input: "clone_0/gradients/clone_0/div_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/div_grad/Sum"
  input: "clone_0/gradients/clone_0/div_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/Neg"
  op: "Neg"
  input: "clone_0/AddN"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/div_grad/Neg"
  input: "clone_0/div/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/div_grad/RealDiv_1"
  input: "clone_0/div/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/div_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/Sum_1"
  op: "Sum"
  input: "clone_0/gradients/clone_0/div_grad/mul"
  input: "clone_0/gradients/clone_0/div_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/Reshape_1"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/div_grad/Sum_1"
  input: "clone_0/gradients/clone_0/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/div_grad/Reshape"
  input: "^clone_0/gradients/clone_0/div_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/div_grad/Reshape"
  input: "^clone_0/gradients/clone_0/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/div_grad/Reshape_1"
  input: "^clone_0/gradients/clone_0/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_7"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_8"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_9"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_10"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_11"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_12"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_13"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_14"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_15"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_16"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_17"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_18"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_19"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_20"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_21"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_22"
  op: "Identity"
  input: "clone_0/gradients/clone_0/add_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/AddN_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/div_grad/tuple/control_dependency"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/AddN_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/div_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/AddN_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/AddN_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/div_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/AddN_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency"
  input: "clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency"
  input: "clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_1"
  input: "clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_1"
  input: "clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_2"
  input: "clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_2"
  input: "clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_3"
  input: "clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_3"
  input: "clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_4"
  input: "clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_4"
  input: "clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_5"
  input: "clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_5"
  input: "clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_6"
  input: "clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_6"
  input: "clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_7"
  input: "clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_7"
  input: "clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_8"
  input: "clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_8"
  input: "clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_9"
  input: "clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_9"
  input: "clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_10"
  input: "clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_10"
  input: "clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_11"
  input: "clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_11"
  input: "clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_12"
  input: "clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_12"
  input: "clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_13"
  input: "clone_0/fc6/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_13"
  input: "clone_0/fc6/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_14"
  input: "clone_0/fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_14"
  input: "clone_0/fc7/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_15"
  input: "clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_15"
  input: "clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_16"
  input: "clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_16"
  input: "clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_17"
  input: "clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_17"
  input: "clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_18"
  input: "clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_18"
  input: "clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_19"
  input: "clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_19"
  input: "clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_20"
  input: "clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_20"
  input: "clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_21"
  input: "clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_21"
  input: "clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_22"
  input: "clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_1_grad/tuple/control_dependency_22"
  input: "clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_grad/tuple/control_dependency"
  input: "clone_0/pixel_cls_loss/mul_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_grad/tuple/control_dependency"
  input: "clone_0/pixel_cls_loss/div"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_grad/tuple/control_dependency_1"
  input: "clone_0/pixel_link_loss/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/AddN_grad/tuple/control_dependency_1"
  input: "clone_0/pixel_link_loss/mul_1/x"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv1/conv1_1/weights/read"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv1/conv1_2/weights/read"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv2/conv2_1/weights/read"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv2/conv2_2/weights/read"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv3/conv3_1/weights/read"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv3/conv3_2/weights/read"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv3/conv3_3/weights/read"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv4/conv4_1/weights/read"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv4/conv4_2/weights/read"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv4/conv4_3/weights/read"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv5/conv5_1/weights/read"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv5/conv5_2/weights/read"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv5/conv5_3/weights/read"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "fc6/weights/read"
  input: "clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "fc7/weights/read"
  input: "clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "pixel_cls/score_from_fc7/weights/read"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "pixel_cls/score_from_conv5_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "pixel_cls/score_from_conv4_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "pixel_cls/score_from_conv3_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "pixel_link/score_from_fc7/weights/read"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "pixel_link/score_from_conv5_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "pixel_link/score_from_conv4_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "pixel_link/score_from_conv3_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Shape"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/tuple/control_dependency"
  input: "clone_0/pixel_cls_loss/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Sum"
  op: "Sum"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/RealDiv"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Sum"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Neg"
  op: "Neg"
  input: "clone_0/pixel_cls_loss/Sum_21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Neg"
  input: "clone_0/pixel_cls_loss/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/RealDiv_1"
  input: "clone_0/pixel_cls_loss/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/mul_1_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Sum_1"
  op: "Sum"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Sum_1"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Reshape"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Reshape"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Reshape_1"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls_loss/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/Sum_21_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/Sum_21_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/div_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/Sum_21_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/Sum_21_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/Sum_21_grad/Tile"
  op: "Tile"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/Sum_21_grad/Reshape"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/Sum_21_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "clone_0/gradients/clone_0/pixel_link_loss/add_grad/tuple/control_dependency"
  input: "clone_0/pixel_link_loss/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/cond_grad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/cond_grad"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/cond_grad:1"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/add_grad/tuple/control_dependency_1"
  input: "clone_0/pixel_link_loss/mul/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/add_grad/tuple/control_dependency_1"
  input: "clone_0/pixel_link_loss/cond/Merge"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/Sum_21_grad/Tile"
  input: "clone_0/pixel_cls_loss/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/Sum_21_grad/Tile"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Shape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/RealDiv"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "clone_0/pixel_link_loss/cond/Sum_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Sum"
  op: "Sum"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/RealDiv"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Sum"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Neg"
  op: "Neg"
  input: "clone_0/pixel_link_loss/cond/Sum_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Neg"
  input: "clone_0/pixel_link_loss/cond/Sum_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/RealDiv_1"
  input: "clone_0/pixel_link_loss/cond/Sum_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Sum_1"
  op: "Sum"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Reshape_1"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Sum_1"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Reshape"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Reshape"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Reshape_1"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "clone_0/gradients/clone_0/pixel_link_loss/mul_grad/tuple/control_dependency"
  input: "clone_0/pixel_link_loss/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/cond_grad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/cond_grad"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/cond_grad:1"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 163840
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/mul_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 163840
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_3_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_1_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_3_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_3_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_3_grad/Tile"
  op: "Tile"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_3_grad/Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_3_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Shape_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Shape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/RealDiv"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/tuple/control_dependency_1"
  input: "clone_0/pixel_link_loss/cond/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Sum"
  op: "Sum"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/RealDiv"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Sum"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Neg"
  op: "Neg"
  input: "clone_0/pixel_link_loss/cond/Sum_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Neg"
  input: "clone_0/pixel_link_loss/cond/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/RealDiv_1"
  input: "clone_0/pixel_link_loss/cond/Sum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Merge_grad/tuple/control_dependency_1"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Sum_1"
  op: "Sum"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Reshape_1"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Sum_1"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Reshape"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Reshape"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Reshape_1"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/zeros_like"
  op: "ZerosLike"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 163840
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 163840
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 163840
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 163840
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_3_grad/Tile"
  input: "clone_0/pixel_link_loss/cond/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_3_grad/Tile"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_1_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/div_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_1_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_1_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_1_grad/Tile"
  op: "Tile"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_1_grad/Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_1_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\000@\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 16384
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/Mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_1_grad/Tile"
  input: "clone_0/pixel_link_loss/cond/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/Mul_1"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/Sum_1_grad/Tile"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/Mul_1"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/Mul"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/Mul_1"
  input: "^clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/Reshape_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000\200\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_cls_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  input: "clone_0/gradients/clone_0/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/mul_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link_loss/cond/mul_3_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1310720
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/AddN"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1310720
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/Reshape_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/Reshape_grad/Reshape"
  input: "^clone_0/gradients/clone_0/pixel_cls/add_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/Reshape_grad/Reshape"
  input: "^clone_0/gradients/clone_0/pixel_cls/add_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1310720
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1310720
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1310720
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1310720
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/pixel_cls/add_2_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/add_2_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/add_2_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
  op: "ResizeBilinearGrad"
  input: "clone_0/gradients/clone_0/pixel_cls/add_2_grad/tuple/control_dependency_1"
  input: "clone_0/pixel_cls/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000\200\000\000\000\010\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv3/conv3_3/Relu"
  input: "pixel_cls/score_from_conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/ShapeN"
  input: "pixel_cls/score_from_conv3_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv3/conv3_3/Relu"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
  input: "^clone_0/gradients/clone_0/pixel_cls/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
  input: "^clone_0/gradients/clone_0/pixel_cls/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/Switch"
  op: "Switch"
  input: "clone_0/Reshape_2"
  input: "clone_0/pixel_link_loss/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/Identity"
  op: "Identity"
  input: "clone_0/gradients/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/Shape_1"
  op: "Shape"
  input: "clone_0/gradients/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/zeros/Const"
  op: "Const"
  input: "^clone_0/gradients/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clone_0/gradients/zeros"
  op: "Fill"
  input: "clone_0/gradients/Shape_1"
  input: "clone_0/gradients/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape/Switch_grad/cond_grad"
  op: "Merge"
  input: "clone_0/gradients/zeros"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 8
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_1"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/pixel_cls/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/add_1_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/add_1_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
  op: "ResizeBilinearGrad"
  input: "clone_0/gradients/clone_0/pixel_cls/add_1_grad/tuple/control_dependency_1"
  input: "clone_0/pixel_cls/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/Reshape_2_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000\200\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "clone_0/gradients/clone_0/pixel_link_loss/cond/SparseSoftmaxCrossEntropyWithLogits/Reshape/Switch_grad/cond_grad"
  input: "clone_0/gradients/clone_0/Reshape_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv4/conv4_3/Relu"
  input: "pixel_cls/score_from_conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/ShapeN"
  input: "pixel_cls/score_from_conv4_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv4/conv4_3/Relu"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
  input: "^clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
  input: "^clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/Reshape_2_grad/Reshape"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/Reshape_2_grad/Reshape"
  input: "^clone_0/gradients/clone_0/pixel_link/add_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/Reshape_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/Reshape_2_grad/Reshape"
  input: "^clone_0/gradients/clone_0/pixel_link/add_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/Reshape_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_2"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/add_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/pixel_link/add_2_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/add_2_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/add_2_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/Reshape_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
  op: "ResizeBilinearGrad"
  input: "clone_0/gradients/clone_0/pixel_link/add_2_grad/tuple/control_dependency_1"
  input: "clone_0/pixel_link/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv5/conv5_3/Relu"
  input: "pixel_cls/score_from_conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/ShapeN"
  input: "pixel_cls/score_from_conv5_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv5/conv5_3/Relu"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/fc7/Relu"
  input: "pixel_cls/score_from_fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/ShapeN"
  input: "pixel_cls/score_from_fc7/weights/read"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/fc7/Relu"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv3/conv3_3/Relu"
  input: "pixel_link/score_from_conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/ShapeN"
  input: "pixel_link/score_from_conv3_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv3/conv3_3/Relu"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
  input: "^clone_0/gradients/clone_0/pixel_link/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
  input: "^clone_0/gradients/clone_0/pixel_link/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_3"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_4"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_5"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/pixel_link/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/add_1_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/add_1_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/resize_2/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
  op: "ResizeBilinearGrad"
  input: "clone_0/gradients/clone_0/pixel_link/add_1_grad/tuple/control_dependency_1"
  input: "clone_0/pixel_link/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv4/conv4_3/Relu"
  input: "pixel_link/score_from_conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/ShapeN"
  input: "pixel_link/score_from_conv4_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv4/conv4_3/Relu"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
  input: "^clone_0/gradients/clone_0/pixel_link/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
  input: "^clone_0/gradients/clone_0/pixel_link/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_6"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/pixel_link/add_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/add_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/add_grad/tuple/control_dependency"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/pixel_link/add_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/add_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/add_grad/tuple/control_dependency_1"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/resize_1/ResizeBilinear_grad/ResizeBilinearGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv5/conv5_3/Relu"
  input: "pixel_link/score_from_conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/ShapeN"
  input: "pixel_link/score_from_conv5_3/weights/read"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv5/conv5_3/Relu"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/fc7/Relu"
  input: "pixel_link/score_from_fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/ShapeN"
  input: "pixel_link/score_from_fc7/weights/read"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/fc7/Relu"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_7"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_8"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_fc7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/AddN_8"
  input: "clone_0/fc7/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_9"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_link/score_from_fc7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/fc7/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/fc7/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/fc7/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/fc7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc7/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/fc7/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc7/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc7/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/fc7/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/fc6/Relu"
  input: "fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/fc7/Conv2D_grad/ShapeN"
  input: "fc7/weights/read"
  input: "clone_0/gradients/clone_0/fc7/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/fc6/Relu"
  input: "clone_0/gradients/clone_0/fc7/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/fc7/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/fc7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/fc7/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/fc7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc7/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/fc7/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/fc7/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/fc7/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/fc6/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_10"
  op: "AddN"
  input: "clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/fc7/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/fc6/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/fc6/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/fc6/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/fc6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc6/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/fc6/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc6/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc6/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/fc6/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "clone_0/gradients/clone_0/fc6/BiasAdd_grad/tuple/control_dependency"
  input: "clone_0/fc6/BatchToSpaceND/block_shape"
  input: "clone_0/fc6/BatchToSpaceND/crops"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 360
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/fc6/SpaceToBatchND"
  input: "fc6/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/fc6/Conv2D_grad/ShapeN"
  input: "fc6/weights/read"
  input: "clone_0/gradients/clone_0/fc6/BatchToSpaceND_grad/SpaceToBatchND"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 360
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/fc6/SpaceToBatchND"
  input: "clone_0/gradients/clone_0/fc6/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/fc6/BatchToSpaceND_grad/SpaceToBatchND"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/fc6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/fc6/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/fc6/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc6/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/fc6/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 360
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/fc6/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/fc6/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "clone_0/gradients/clone_0/fc6/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/fc6/SpaceToBatchND/block_shape"
  input: "clone_0/fc6/SpaceToBatchND/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_11"
  op: "AddN"
  input: "clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/fc6/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/fc6/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pool5/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "clone_0/conv5/conv5_3/Relu"
  input: "clone_0/pool5/MaxPool"
  input: "clone_0/gradients/clone_0/fc6/SpaceToBatchND_grad/BatchToSpaceND"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_12"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pool5/MaxPool_grad/MaxPoolGrad"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/AddN_12"
  input: "clone_0/conv5/conv5_3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv5/conv5_2/Relu"
  input: "conv5/conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/ShapeN"
  input: "conv5/conv5_3/weights/read"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv5/conv5_2/Relu"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/conv5/conv5_2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_13"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv5/conv5_1/Relu"
  input: "conv5/conv5_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/ShapeN"
  input: "conv5/conv5_2/weights/read"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv5/conv5_1/Relu"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/conv5/conv5_1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_14"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/pool4/MaxPool"
  input: "conv5/conv5_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/ShapeN"
  input: "conv5/conv5_1/weights/read"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/pool4/MaxPool"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pool4/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "clone_0/conv4/conv4_3/Relu"
  input: "clone_0/pool4/MaxPool"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_15"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv5/conv5_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_16"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pool4/MaxPool_grad/MaxPoolGrad"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/AddN_16"
  input: "clone_0/conv4/conv4_3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv4/conv4_2/Relu"
  input: "conv4/conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/ShapeN"
  input: "conv4/conv4_3/weights/read"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv4/conv4_2/Relu"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/conv4/conv4_2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_17"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv4/conv4_1/Relu"
  input: "conv4/conv4_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/ShapeN"
  input: "conv4/conv4_2/weights/read"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv4/conv4_1/Relu"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/conv4/conv4_1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_18"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/pool3/MaxPool"
  input: "conv4/conv4_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/ShapeN"
  input: "conv4/conv4_1/weights/read"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/pool3/MaxPool"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pool3/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "clone_0/conv3/conv3_3/Relu"
  input: "clone_0/pool3/MaxPool"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_19"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv4/conv4_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_20"
  op: "AddN"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/gradients/clone_0/pool3/MaxPool_grad/MaxPoolGrad"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/AddN_20"
  input: "clone_0/conv3/conv3_3/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv3/conv3_2/Relu"
  input: "conv3/conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/ShapeN"
  input: "conv3/conv3_3/weights/read"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv3/conv3_2/Relu"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/conv3/conv3_2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_21"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv3/conv3_1/Relu"
  input: "conv3/conv3_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/ShapeN"
  input: "conv3/conv3_2/weights/read"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv3/conv3_1/Relu"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/conv3/conv3_1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_22"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/pool2/MaxPool"
  input: "conv3/conv3_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/ShapeN"
  input: "conv3/conv3_1/weights/read"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/pool2/MaxPool"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pool2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "clone_0/conv2/conv2_2/Relu"
  input: "clone_0/pool2/MaxPool"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_23"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv3/conv3_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/pool2/MaxPool_grad/MaxPoolGrad"
  input: "clone_0/conv2/conv2_2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv2/conv2_1/Relu"
  input: "conv2/conv2_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/ShapeN"
  input: "conv2/conv2_2/weights/read"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv2/conv2_1/Relu"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/conv2/conv2_1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_24"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/pool1/MaxPool"
  input: "conv2/conv2_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/ShapeN"
  input: "conv2/conv2_1/weights/read"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/pool1/MaxPool"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/pool1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "clone_0/conv1/conv1_2/Relu"
  input: "clone_0/pool1/MaxPool"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_25"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv2/conv2_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/pool1/MaxPool_grad/MaxPoolGrad"
  input: "clone_0/conv1/conv1_2/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/conv1/conv1_1/Relu"
  input: "conv1/conv1_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/ShapeN"
  input: "conv1/conv1_2/weights/read"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/conv1/conv1_1/Relu"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/tuple/control_dependency"
  input: "clone_0/conv1/conv1_1/Relu"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_26"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/Relu_grad/ReluGrad"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/Relu_grad/ReluGrad"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/BiasAddGrad"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "clone_0/fifo_queue_Dequeue"
  input: "conv1/conv1_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/ShapeN"
  input: "conv1/conv1_1/weights/read"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "clone_0/fifo_queue_Dequeue"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/ShapeN:1"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/Conv2DBackpropInput"
  device: "/device:GPU:0"
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clone_0/gradients/AddN_27"
  op: "AddN"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/gradients/clone_0/conv1/conv1_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "pixel_link_loss"
      }
    }
  }
}
node {
  name: "pixel_link_loss"
  op: "ScalarSummary"
  input: "pixel_link_loss/tags"
  input: "clone_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "regularization_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "regularization_loss"
      }
    }
  }
}
node {
  name: "regularization_loss"
  op: "ScalarSummary"
  input: "regularization_loss/tags"
  input: "clone_0/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv1/conv1_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv2/conv2_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv3/conv3_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv4/conv4_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/conv5/conv5_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fc6/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc6/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/fc7/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_fc7/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv5_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv4_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_cls/score_from_conv3_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_fc7/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv5_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv4_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases_summed_gradients"
  op: "Identity"
  input: "clone_0/gradients/clone_0/pixel_link/score_from_conv3_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv1/conv1_1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv1/conv1_1/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Momentum/Assign"
  op: "Assign"
  input: "conv1/conv1_1/weights/Momentum"
  input: "conv1/conv1_1/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_1/weights/Momentum/read"
  op: "Identity"
  input: "conv1/conv1_1/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_1/biases/Momentum/Assign"
  op: "Assign"
  input: "conv1/conv1_1/biases/Momentum"
  input: "conv1/conv1_1/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_1/biases/Momentum/read"
  op: "Identity"
  input: "conv1/conv1_1/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv1/conv1_2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv1/conv1_2/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Momentum/Assign"
  op: "Assign"
  input: "conv1/conv1_2/weights/Momentum"
  input: "conv1/conv1_2/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_2/weights/Momentum/read"
  op: "Identity"
  input: "conv1/conv1_2/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_2/biases/Momentum/Assign"
  op: "Assign"
  input: "conv1/conv1_2/biases/Momentum"
  input: "conv1/conv1_2/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_2/biases/Momentum/read"
  op: "Identity"
  input: "conv1/conv1_2/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2/conv2_1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2/conv2_1/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Momentum/Assign"
  op: "Assign"
  input: "conv2/conv2_1/weights/Momentum"
  input: "conv2/conv2_1/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_1/weights/Momentum/read"
  op: "Identity"
  input: "conv2/conv2_1/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_1/biases/Momentum/Assign"
  op: "Assign"
  input: "conv2/conv2_1/biases/Momentum"
  input: "conv2/conv2_1/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_1/biases/Momentum/read"
  op: "Identity"
  input: "conv2/conv2_1/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2/conv2_2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2/conv2_2/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Momentum/Assign"
  op: "Assign"
  input: "conv2/conv2_2/weights/Momentum"
  input: "conv2/conv2_2/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_2/weights/Momentum/read"
  op: "Identity"
  input: "conv2/conv2_2/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_2/biases/Momentum/Assign"
  op: "Assign"
  input: "conv2/conv2_2/biases/Momentum"
  input: "conv2/conv2_2/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_2/biases/Momentum/read"
  op: "Identity"
  input: "conv2/conv2_2/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv3/conv3_1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv3/conv3_1/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Momentum/Assign"
  op: "Assign"
  input: "conv3/conv3_1/weights/Momentum"
  input: "conv3/conv3_1/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_1/weights/Momentum/read"
  op: "Identity"
  input: "conv3/conv3_1/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_1/biases/Momentum/Assign"
  op: "Assign"
  input: "conv3/conv3_1/biases/Momentum"
  input: "conv3/conv3_1/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_1/biases/Momentum/read"
  op: "Identity"
  input: "conv3/conv3_1/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv3/conv3_2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv3/conv3_2/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Momentum/Assign"
  op: "Assign"
  input: "conv3/conv3_2/weights/Momentum"
  input: "conv3/conv3_2/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_2/weights/Momentum/read"
  op: "Identity"
  input: "conv3/conv3_2/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_2/biases/Momentum/Assign"
  op: "Assign"
  input: "conv3/conv3_2/biases/Momentum"
  input: "conv3/conv3_2/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_2/biases/Momentum/read"
  op: "Identity"
  input: "conv3/conv3_2/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv3/conv3_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv3/conv3_3/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Momentum/Assign"
  op: "Assign"
  input: "conv3/conv3_3/weights/Momentum"
  input: "conv3/conv3_3/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_3/weights/Momentum/read"
  op: "Identity"
  input: "conv3/conv3_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_3/biases/Momentum/Assign"
  op: "Assign"
  input: "conv3/conv3_3/biases/Momentum"
  input: "conv3/conv3_3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_3/biases/Momentum/read"
  op: "Identity"
  input: "conv3/conv3_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv4/conv4_1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv4/conv4_1/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Momentum/Assign"
  op: "Assign"
  input: "conv4/conv4_1/weights/Momentum"
  input: "conv4/conv4_1/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_1/weights/Momentum/read"
  op: "Identity"
  input: "conv4/conv4_1/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_1/biases/Momentum/Assign"
  op: "Assign"
  input: "conv4/conv4_1/biases/Momentum"
  input: "conv4/conv4_1/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_1/biases/Momentum/read"
  op: "Identity"
  input: "conv4/conv4_1/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv4/conv4_2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv4/conv4_2/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Momentum/Assign"
  op: "Assign"
  input: "conv4/conv4_2/weights/Momentum"
  input: "conv4/conv4_2/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_2/weights/Momentum/read"
  op: "Identity"
  input: "conv4/conv4_2/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_2/biases/Momentum/Assign"
  op: "Assign"
  input: "conv4/conv4_2/biases/Momentum"
  input: "conv4/conv4_2/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_2/biases/Momentum/read"
  op: "Identity"
  input: "conv4/conv4_2/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv4/conv4_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv4/conv4_3/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Momentum/Assign"
  op: "Assign"
  input: "conv4/conv4_3/weights/Momentum"
  input: "conv4/conv4_3/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_3/weights/Momentum/read"
  op: "Identity"
  input: "conv4/conv4_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_3/biases/Momentum/Assign"
  op: "Assign"
  input: "conv4/conv4_3/biases/Momentum"
  input: "conv4/conv4_3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_3/biases/Momentum/read"
  op: "Identity"
  input: "conv4/conv4_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv5/conv5_1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv5/conv5_1/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Momentum/Assign"
  op: "Assign"
  input: "conv5/conv5_1/weights/Momentum"
  input: "conv5/conv5_1/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_1/weights/Momentum/read"
  op: "Identity"
  input: "conv5/conv5_1/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_1/biases/Momentum/Assign"
  op: "Assign"
  input: "conv5/conv5_1/biases/Momentum"
  input: "conv5/conv5_1/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_1/biases/Momentum/read"
  op: "Identity"
  input: "conv5/conv5_1/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv5/conv5_2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv5/conv5_2/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Momentum/Assign"
  op: "Assign"
  input: "conv5/conv5_2/weights/Momentum"
  input: "conv5/conv5_2/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_2/weights/Momentum/read"
  op: "Identity"
  input: "conv5/conv5_2/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_2/biases/Momentum/Assign"
  op: "Assign"
  input: "conv5/conv5_2/biases/Momentum"
  input: "conv5/conv5_2/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_2/biases/Momentum/read"
  op: "Identity"
  input: "conv5/conv5_2/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv5/conv5_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv5/conv5_3/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Momentum/Assign"
  op: "Assign"
  input: "conv5/conv5_3/weights/Momentum"
  input: "conv5/conv5_3/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_3/weights/Momentum/read"
  op: "Identity"
  input: "conv5/conv5_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_3/biases/Momentum/Assign"
  op: "Assign"
  input: "conv5/conv5_3/biases/Momentum"
  input: "conv5/conv5_3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_3/biases/Momentum/read"
  op: "Identity"
  input: "conv5/conv5_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fc6/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "fc6/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc6/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "fc6/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "fc6/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc6/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc6/weights/Momentum/Assign"
  op: "Assign"
  input: "fc6/weights/Momentum"
  input: "fc6/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc6/weights/Momentum/read"
  op: "Identity"
  input: "fc6/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/biases/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "fc6/biases/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc6/biases/Momentum/Initializer/zeros"
  op: "Fill"
  input: "fc6/biases/Momentum/Initializer/zeros/shape_as_tensor"
  input: "fc6/biases/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc6/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc6/biases/Momentum/Assign"
  op: "Assign"
  input: "fc6/biases/Momentum"
  input: "fc6/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc6/biases/Momentum/read"
  op: "Identity"
  input: "fc6/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "fc7/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc7/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "fc7/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "fc7/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc7/weights/Momentum/Assign"
  op: "Assign"
  input: "fc7/weights/Momentum"
  input: "fc7/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc7/weights/Momentum/read"
  op: "Identity"
  input: "fc7/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/biases/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "fc7/biases/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc7/biases/Momentum/Initializer/zeros"
  op: "Fill"
  input: "fc7/biases/Momentum/Initializer/zeros/shape_as_tensor"
  input: "fc7/biases/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc7/biases/Momentum/Assign"
  op: "Assign"
  input: "fc7/biases/Momentum"
  input: "fc7/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc7/biases/Momentum/read"
  op: "Identity"
  input: "fc7/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "pixel_cls/score_from_fc7/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "pixel_cls/score_from_fc7/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Momentum/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/weights/Momentum"
  input: "pixel_cls/score_from_fc7/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/Momentum/read"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/Momentum/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/biases/Momentum"
  input: "pixel_cls/score_from_fc7/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/Momentum/read"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "pixel_cls/score_from_conv5_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "pixel_cls/score_from_conv5_3/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Momentum/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/weights/Momentum"
  input: "pixel_cls/score_from_conv5_3/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/Momentum/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/Momentum/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/biases/Momentum"
  input: "pixel_cls/score_from_conv5_3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/Momentum/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "pixel_cls/score_from_conv4_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "pixel_cls/score_from_conv4_3/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Momentum/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/weights/Momentum"
  input: "pixel_cls/score_from_conv4_3/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/Momentum/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/Momentum/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/biases/Momentum"
  input: "pixel_cls/score_from_conv4_3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/Momentum/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Momentum/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/weights/Momentum"
  input: "pixel_cls/score_from_conv3_3/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/Momentum/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/Momentum/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/biases/Momentum"
  input: "pixel_cls/score_from_conv3_3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/Momentum/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "pixel_link/score_from_fc7/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "pixel_link/score_from_fc7/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Momentum/Assign"
  op: "Assign"
  input: "pixel_link/score_from_fc7/weights/Momentum"
  input: "pixel_link/score_from_fc7/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/Momentum/read"
  op: "Identity"
  input: "pixel_link/score_from_fc7/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/Momentum/Assign"
  op: "Assign"
  input: "pixel_link/score_from_fc7/biases/Momentum"
  input: "pixel_link/score_from_fc7/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/Momentum/read"
  op: "Identity"
  input: "pixel_link/score_from_fc7/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "pixel_link/score_from_conv5_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "pixel_link/score_from_conv5_3/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Momentum/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/weights/Momentum"
  input: "pixel_link/score_from_conv5_3/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/Momentum/read"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/Momentum/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/biases/Momentum"
  input: "pixel_link/score_from_conv5_3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/Momentum/read"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "pixel_link/score_from_conv4_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "pixel_link/score_from_conv4_3/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Momentum/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/weights/Momentum"
  input: "pixel_link/score_from_conv4_3/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/Momentum/read"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/Momentum/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/biases/Momentum"
  input: "pixel_link/score_from_conv4_3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/Momentum/read"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "pixel_link/score_from_conv3_3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "pixel_link/score_from_conv3_3/weights/Momentum/Initializer/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Momentum/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/weights/Momentum"
  input: "pixel_link/score_from_conv3_3/weights/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/Momentum/read"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/Momentum/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/Momentum"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/Momentum/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/biases/Momentum"
  input: "pixel_link/score_from_conv3_3/biases/Momentum/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/Momentum/read"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Momentum/momentum"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "Momentum/update_conv1/conv1_1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv1/conv1_1/weights"
  input: "conv1/conv1_1/weights/Momentum"
  input: "learning_rate"
  input: "conv1/conv1_1/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv1/conv1_1/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv1/conv1_1/biases"
  input: "conv1/conv1_1/biases/Momentum"
  input: "learning_rate"
  input: "conv1/conv1_1/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv1/conv1_2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv1/conv1_2/weights"
  input: "conv1/conv1_2/weights/Momentum"
  input: "learning_rate"
  input: "conv1/conv1_2/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv1/conv1_2/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv1/conv1_2/biases"
  input: "conv1/conv1_2/biases/Momentum"
  input: "learning_rate"
  input: "conv1/conv1_2/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2/conv2_1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2/conv2_1/weights"
  input: "conv2/conv2_1/weights/Momentum"
  input: "learning_rate"
  input: "conv2/conv2_1/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2/conv2_1/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2/conv2_1/biases"
  input: "conv2/conv2_1/biases/Momentum"
  input: "learning_rate"
  input: "conv2/conv2_1/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2/conv2_2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2/conv2_2/weights"
  input: "conv2/conv2_2/weights/Momentum"
  input: "learning_rate"
  input: "conv2/conv2_2/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2/conv2_2/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2/conv2_2/biases"
  input: "conv2/conv2_2/biases/Momentum"
  input: "learning_rate"
  input: "conv2/conv2_2/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv3/conv3_1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv3/conv3_1/weights"
  input: "conv3/conv3_1/weights/Momentum"
  input: "learning_rate"
  input: "conv3/conv3_1/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv3/conv3_1/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv3/conv3_1/biases"
  input: "conv3/conv3_1/biases/Momentum"
  input: "learning_rate"
  input: "conv3/conv3_1/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv3/conv3_2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv3/conv3_2/weights"
  input: "conv3/conv3_2/weights/Momentum"
  input: "learning_rate"
  input: "conv3/conv3_2/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv3/conv3_2/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv3/conv3_2/biases"
  input: "conv3/conv3_2/biases/Momentum"
  input: "learning_rate"
  input: "conv3/conv3_2/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv3/conv3_3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv3/conv3_3/weights"
  input: "conv3/conv3_3/weights/Momentum"
  input: "learning_rate"
  input: "conv3/conv3_3/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv3/conv3_3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv3/conv3_3/biases"
  input: "conv3/conv3_3/biases/Momentum"
  input: "learning_rate"
  input: "conv3/conv3_3/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv4/conv4_1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv4/conv4_1/weights"
  input: "conv4/conv4_1/weights/Momentum"
  input: "learning_rate"
  input: "conv4/conv4_1/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv4/conv4_1/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv4/conv4_1/biases"
  input: "conv4/conv4_1/biases/Momentum"
  input: "learning_rate"
  input: "conv4/conv4_1/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv4/conv4_2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv4/conv4_2/weights"
  input: "conv4/conv4_2/weights/Momentum"
  input: "learning_rate"
  input: "conv4/conv4_2/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv4/conv4_2/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv4/conv4_2/biases"
  input: "conv4/conv4_2/biases/Momentum"
  input: "learning_rate"
  input: "conv4/conv4_2/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv4/conv4_3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv4/conv4_3/weights"
  input: "conv4/conv4_3/weights/Momentum"
  input: "learning_rate"
  input: "conv4/conv4_3/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv4/conv4_3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv4/conv4_3/biases"
  input: "conv4/conv4_3/biases/Momentum"
  input: "learning_rate"
  input: "conv4/conv4_3/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv5/conv5_1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv5/conv5_1/weights"
  input: "conv5/conv5_1/weights/Momentum"
  input: "learning_rate"
  input: "conv5/conv5_1/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv5/conv5_1/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv5/conv5_1/biases"
  input: "conv5/conv5_1/biases/Momentum"
  input: "learning_rate"
  input: "conv5/conv5_1/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv5/conv5_2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv5/conv5_2/weights"
  input: "conv5/conv5_2/weights/Momentum"
  input: "learning_rate"
  input: "conv5/conv5_2/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv5/conv5_2/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv5/conv5_2/biases"
  input: "conv5/conv5_2/biases/Momentum"
  input: "learning_rate"
  input: "conv5/conv5_2/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv5/conv5_3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv5/conv5_3/weights"
  input: "conv5/conv5_3/weights/Momentum"
  input: "learning_rate"
  input: "conv5/conv5_3/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv5/conv5_3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv5/conv5_3/biases"
  input: "conv5/conv5_3/biases/Momentum"
  input: "learning_rate"
  input: "conv5/conv5_3/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fc6/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fc6/weights"
  input: "fc6/weights/Momentum"
  input: "learning_rate"
  input: "fc6/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fc6/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fc6/biases"
  input: "fc6/biases/Momentum"
  input: "learning_rate"
  input: "fc6/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fc7/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fc7/weights"
  input: "fc7/weights/Momentum"
  input: "learning_rate"
  input: "fc7/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_fc7/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "fc7/biases"
  input: "fc7/biases/Momentum"
  input: "learning_rate"
  input: "fc7/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_cls/score_from_fc7/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_cls/score_from_fc7/weights"
  input: "pixel_cls/score_from_fc7/weights/Momentum"
  input: "learning_rate"
  input: "pixel_cls/score_from_fc7/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_cls/score_from_fc7/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_cls/score_from_fc7/biases"
  input: "pixel_cls/score_from_fc7/biases/Momentum"
  input: "learning_rate"
  input: "pixel_cls/score_from_fc7/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_cls/score_from_conv5_3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_cls/score_from_conv5_3/weights"
  input: "pixel_cls/score_from_conv5_3/weights/Momentum"
  input: "learning_rate"
  input: "pixel_cls/score_from_conv5_3/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_cls/score_from_conv5_3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_cls/score_from_conv5_3/biases"
  input: "pixel_cls/score_from_conv5_3/biases/Momentum"
  input: "learning_rate"
  input: "pixel_cls/score_from_conv5_3/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_cls/score_from_conv4_3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_cls/score_from_conv4_3/weights"
  input: "pixel_cls/score_from_conv4_3/weights/Momentum"
  input: "learning_rate"
  input: "pixel_cls/score_from_conv4_3/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_cls/score_from_conv4_3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_cls/score_from_conv4_3/biases"
  input: "pixel_cls/score_from_conv4_3/biases/Momentum"
  input: "learning_rate"
  input: "pixel_cls/score_from_conv4_3/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_cls/score_from_conv3_3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_cls/score_from_conv3_3/weights"
  input: "pixel_cls/score_from_conv3_3/weights/Momentum"
  input: "learning_rate"
  input: "pixel_cls/score_from_conv3_3/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_cls/score_from_conv3_3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_cls/score_from_conv3_3/biases"
  input: "pixel_cls/score_from_conv3_3/biases/Momentum"
  input: "learning_rate"
  input: "pixel_cls/score_from_conv3_3/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_link/score_from_fc7/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_link/score_from_fc7/weights"
  input: "pixel_link/score_from_fc7/weights/Momentum"
  input: "learning_rate"
  input: "pixel_link/score_from_fc7/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_link/score_from_fc7/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_link/score_from_fc7/biases"
  input: "pixel_link/score_from_fc7/biases/Momentum"
  input: "learning_rate"
  input: "pixel_link/score_from_fc7/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_link/score_from_conv5_3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_link/score_from_conv5_3/weights"
  input: "pixel_link/score_from_conv5_3/weights/Momentum"
  input: "learning_rate"
  input: "pixel_link/score_from_conv5_3/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_link/score_from_conv5_3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_link/score_from_conv5_3/biases"
  input: "pixel_link/score_from_conv5_3/biases/Momentum"
  input: "learning_rate"
  input: "pixel_link/score_from_conv5_3/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_link/score_from_conv4_3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_link/score_from_conv4_3/weights"
  input: "pixel_link/score_from_conv4_3/weights/Momentum"
  input: "learning_rate"
  input: "pixel_link/score_from_conv4_3/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_link/score_from_conv4_3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_link/score_from_conv4_3/biases"
  input: "pixel_link/score_from_conv4_3/biases/Momentum"
  input: "learning_rate"
  input: "pixel_link/score_from_conv4_3/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_link/score_from_conv3_3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_link/score_from_conv3_3/weights"
  input: "pixel_link/score_from_conv3_3/weights/Momentum"
  input: "learning_rate"
  input: "pixel_link/score_from_conv3_3/weights_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pixel_link/score_from_conv3_3/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pixel_link/score_from_conv3_3/biases"
  input: "pixel_link/score_from_conv3_3/biases/Momentum"
  input: "learning_rate"
  input: "pixel_link/score_from_conv3_3/biases_summed_gradients"
  input: "Momentum/momentum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update"
  op: "NoOp"
  input: "^Momentum/update_conv1/conv1_1/biases/ApplyMomentum"
  input: "^Momentum/update_conv1/conv1_1/weights/ApplyMomentum"
  input: "^Momentum/update_conv1/conv1_2/biases/ApplyMomentum"
  input: "^Momentum/update_conv1/conv1_2/weights/ApplyMomentum"
  input: "^Momentum/update_conv2/conv2_1/biases/ApplyMomentum"
  input: "^Momentum/update_conv2/conv2_1/weights/ApplyMomentum"
  input: "^Momentum/update_conv2/conv2_2/biases/ApplyMomentum"
  input: "^Momentum/update_conv2/conv2_2/weights/ApplyMomentum"
  input: "^Momentum/update_conv3/conv3_1/biases/ApplyMomentum"
  input: "^Momentum/update_conv3/conv3_1/weights/ApplyMomentum"
  input: "^Momentum/update_conv3/conv3_2/biases/ApplyMomentum"
  input: "^Momentum/update_conv3/conv3_2/weights/ApplyMomentum"
  input: "^Momentum/update_conv3/conv3_3/biases/ApplyMomentum"
  input: "^Momentum/update_conv3/conv3_3/weights/ApplyMomentum"
  input: "^Momentum/update_conv4/conv4_1/biases/ApplyMomentum"
  input: "^Momentum/update_conv4/conv4_1/weights/ApplyMomentum"
  input: "^Momentum/update_conv4/conv4_2/biases/ApplyMomentum"
  input: "^Momentum/update_conv4/conv4_2/weights/ApplyMomentum"
  input: "^Momentum/update_conv4/conv4_3/biases/ApplyMomentum"
  input: "^Momentum/update_conv4/conv4_3/weights/ApplyMomentum"
  input: "^Momentum/update_conv5/conv5_1/biases/ApplyMomentum"
  input: "^Momentum/update_conv5/conv5_1/weights/ApplyMomentum"
  input: "^Momentum/update_conv5/conv5_2/biases/ApplyMomentum"
  input: "^Momentum/update_conv5/conv5_2/weights/ApplyMomentum"
  input: "^Momentum/update_conv5/conv5_3/biases/ApplyMomentum"
  input: "^Momentum/update_conv5/conv5_3/weights/ApplyMomentum"
  input: "^Momentum/update_fc6/biases/ApplyMomentum"
  input: "^Momentum/update_fc6/weights/ApplyMomentum"
  input: "^Momentum/update_fc7/biases/ApplyMomentum"
  input: "^Momentum/update_fc7/weights/ApplyMomentum"
  input: "^Momentum/update_pixel_cls/score_from_conv3_3/biases/ApplyMomentum"
  input: "^Momentum/update_pixel_cls/score_from_conv3_3/weights/ApplyMomentum"
  input: "^Momentum/update_pixel_cls/score_from_conv4_3/biases/ApplyMomentum"
  input: "^Momentum/update_pixel_cls/score_from_conv4_3/weights/ApplyMomentum"
  input: "^Momentum/update_pixel_cls/score_from_conv5_3/biases/ApplyMomentum"
  input: "^Momentum/update_pixel_cls/score_from_conv5_3/weights/ApplyMomentum"
  input: "^Momentum/update_pixel_cls/score_from_fc7/biases/ApplyMomentum"
  input: "^Momentum/update_pixel_cls/score_from_fc7/weights/ApplyMomentum"
  input: "^Momentum/update_pixel_link/score_from_conv3_3/biases/ApplyMomentum"
  input: "^Momentum/update_pixel_link/score_from_conv3_3/weights/ApplyMomentum"
  input: "^Momentum/update_pixel_link/score_from_conv4_3/biases/ApplyMomentum"
  input: "^Momentum/update_pixel_link/score_from_conv4_3/weights/ApplyMomentum"
  input: "^Momentum/update_pixel_link/score_from_conv5_3/biases/ApplyMomentum"
  input: "^Momentum/update_pixel_link/score_from_conv5_3/weights/ApplyMomentum"
  input: "^Momentum/update_pixel_link/score_from_fc7/biases/ApplyMomentum"
  input: "^Momentum/update_pixel_link/score_from_fc7/weights/ApplyMomentum"
  device: "/device:GPU:0"
}
node {
  name: "Momentum/value"
  op: "Const"
  input: "^Momentum/update"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Momentum"
  op: "AssignAdd"
  input: "global_step"
  input: "Momentum/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1/conv1_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond/Switch"
  op: "Switch"
  input: "IsVariableInitialized"
  input: "IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/switch_t"
  op: "Identity"
  input: "cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/switch_f"
  op: "Identity"
  input: "cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/pred_id"
  op: "Identity"
  input: "IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond/read"
  op: "Identity"
  input: "cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond/read/Switch"
  op: "RefSwitch"
  input: "conv1/conv1_1/weights"
  input: "cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond/Switch_1"
  op: "Switch"
  input: "conv1/conv1_1/weights/Initializer/random_uniform"
  input: "cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond/Merge"
  op: "Merge"
  input: "cond/Switch_1"
  input: "cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1/conv1_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv1/conv1_1/weights"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv1/conv1_1/weights/Initializer/random_uniform"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/read/Switch_conv1/conv1_1/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/read_conv1/conv1_1/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/read/Switch_conv1/conv1_1/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/Merge_conv1/conv1_1/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond/Switch_1"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/read_conv1/conv1_1/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/cond/Merge_conv1/conv1_1/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_1/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1/conv1_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_1/Switch"
  op: "Switch"
  input: "IsVariableInitialized_1"
  input: "IsVariableInitialized_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_1/switch_t"
  op: "Identity"
  input: "cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_1/switch_f"
  op: "Identity"
  input: "cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_1/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_1/read"
  op: "Identity"
  input: "cond_1/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond_1/read/Switch"
  op: "RefSwitch"
  input: "conv1/conv1_1/biases"
  input: "cond_1/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond_1/Switch_1"
  op: "Switch"
  input: "conv1/conv1_1/biases/Initializer/zeros"
  input: "cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond_1/Merge"
  op: "Merge"
  input: "cond_1/Switch_1"
  input: "cond_1/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1/conv1_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv1/conv1_1/biases"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv1/conv1_1/biases/Initializer/zeros"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond_1/read/Switch_conv1/conv1_1/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_1/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond_1/read_conv1/conv1_1/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond_1/read/Switch_conv1/conv1_1/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/cond_1/Merge_conv1/conv1_1/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_1/Switch_1"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond_1/read_conv1/conv1_1/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/cond_1/Merge_conv1/conv1_1/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_1/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1/conv1_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_2/Switch"
  op: "Switch"
  input: "IsVariableInitialized_2"
  input: "IsVariableInitialized_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_2/switch_t"
  op: "Identity"
  input: "cond_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_2/switch_f"
  op: "Identity"
  input: "cond_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_2/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_2/read"
  op: "Identity"
  input: "cond_2/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond_2/read/Switch"
  op: "RefSwitch"
  input: "conv1/conv1_2/weights"
  input: "cond_2/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond_2/Switch_1"
  op: "Switch"
  input: "conv1/conv1_2/weights/Initializer/random_uniform"
  input: "cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond_2/Merge"
  op: "Merge"
  input: "cond_2/Switch_1"
  input: "cond_2/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1/conv1_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv1/conv1_2/weights"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv1/conv1_2/weights/Initializer/random_uniform"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond_2/read/Switch_conv1/conv1_2/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_2/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond_2/read_conv1/conv1_2/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond_2/read/Switch_conv1/conv1_2/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/cond_2/Merge_conv1/conv1_2/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_2/Switch_1"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond_2/read_conv1/conv1_2/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/cond_2/Merge_conv1/conv1_2/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_2/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv1/conv1_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_3/Switch"
  op: "Switch"
  input: "IsVariableInitialized_3"
  input: "IsVariableInitialized_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_3/switch_t"
  op: "Identity"
  input: "cond_3/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_3/switch_f"
  op: "Identity"
  input: "cond_3/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_3/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_3/read"
  op: "Identity"
  input: "cond_3/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond_3/read/Switch"
  op: "RefSwitch"
  input: "conv1/conv1_2/biases"
  input: "cond_3/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond_3/Switch_1"
  op: "Switch"
  input: "conv1/conv1_2/biases/Initializer/zeros"
  input: "cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "cond_3/Merge"
  op: "Merge"
  input: "cond_3/Switch_1"
  input: "cond_3/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1/conv1_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv1/conv1_2/biases"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv1/conv1_2/biases/Initializer/zeros"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond_3/read/Switch_conv1/conv1_2/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_3/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond_3/read_conv1/conv1_2/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond_3/read/Switch_conv1/conv1_2/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/cond_3/Merge_conv1/conv1_2/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_3/Switch_1"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond_3/read_conv1/conv1_2/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/cond_3/Merge_conv1/conv1_2/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv1_2/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv2/conv2_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_4/Switch"
  op: "Switch"
  input: "IsVariableInitialized_4"
  input: "IsVariableInitialized_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_4/switch_t"
  op: "Identity"
  input: "cond_4/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_4/switch_f"
  op: "Identity"
  input: "cond_4/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_4/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_4/read"
  op: "Identity"
  input: "cond_4/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_4/read/Switch"
  op: "RefSwitch"
  input: "conv2/conv2_1/weights"
  input: "cond_4/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_4/Switch_1"
  op: "Switch"
  input: "conv2/conv2_1/weights/Initializer/random_uniform"
  input: "cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_4/Merge"
  op: "Merge"
  input: "cond_4/Switch_1"
  input: "cond_4/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv2/conv2_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv2/conv2_1/weights"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv2/conv2_1/weights/Initializer/random_uniform"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond_4/read/Switch_conv2/conv2_1/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_4/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond_4/read_conv2/conv2_1/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond_4/read/Switch_conv2/conv2_1/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/cond_4/Merge_conv2/conv2_1/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_4/Switch_1"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond_4/read_conv2/conv2_1/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/cond_4/Merge_conv2/conv2_1/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_1/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv2/conv2_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_5/Switch"
  op: "Switch"
  input: "IsVariableInitialized_5"
  input: "IsVariableInitialized_5"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_5/switch_t"
  op: "Identity"
  input: "cond_5/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_5/switch_f"
  op: "Identity"
  input: "cond_5/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_5/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_5"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_5/read"
  op: "Identity"
  input: "cond_5/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_5/read/Switch"
  op: "RefSwitch"
  input: "conv2/conv2_1/biases"
  input: "cond_5/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_5/Switch_1"
  op: "Switch"
  input: "conv2/conv2_1/biases/Initializer/zeros"
  input: "cond_5/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_5/Merge"
  op: "Merge"
  input: "cond_5/Switch_1"
  input: "cond_5/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv2/conv2_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv2/conv2_1/biases"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv2/conv2_1/biases/Initializer/zeros"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond_5/read/Switch_conv2/conv2_1/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_5/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond_5/read_conv2/conv2_1/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond_5/read/Switch_conv2/conv2_1/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/cond_5/Merge_conv2/conv2_1/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_5/Switch_1"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond_5/read_conv2/conv2_1/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/cond_5/Merge_conv2/conv2_1/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_1/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv2/conv2_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_6/Switch"
  op: "Switch"
  input: "IsVariableInitialized_6"
  input: "IsVariableInitialized_6"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_6/switch_t"
  op: "Identity"
  input: "cond_6/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_6/switch_f"
  op: "Identity"
  input: "cond_6/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_6/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_6"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_6/read"
  op: "Identity"
  input: "cond_6/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_6/read/Switch"
  op: "RefSwitch"
  input: "conv2/conv2_2/weights"
  input: "cond_6/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_6/Switch_1"
  op: "Switch"
  input: "conv2/conv2_2/weights/Initializer/random_uniform"
  input: "cond_6/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_6/Merge"
  op: "Merge"
  input: "cond_6/Switch_1"
  input: "cond_6/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv2/conv2_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv2/conv2_2/weights"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv2/conv2_2/weights/Initializer/random_uniform"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond_6/read/Switch_conv2/conv2_2/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_6/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond_6/read_conv2/conv2_2/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond_6/read/Switch_conv2/conv2_2/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/cond_6/Merge_conv2/conv2_2/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_6/Switch_1"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond_6/read_conv2/conv2_2/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/cond_6/Merge_conv2/conv2_2/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_2/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "conv2/conv2_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_7/Switch"
  op: "Switch"
  input: "IsVariableInitialized_7"
  input: "IsVariableInitialized_7"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_7/switch_t"
  op: "Identity"
  input: "cond_7/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_7/switch_f"
  op: "Identity"
  input: "cond_7/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_7/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_7"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_7/read"
  op: "Identity"
  input: "cond_7/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_7/read/Switch"
  op: "RefSwitch"
  input: "conv2/conv2_2/biases"
  input: "cond_7/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_7/Switch_1"
  op: "Switch"
  input: "conv2/conv2_2/biases/Initializer/zeros"
  input: "cond_7/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "cond_7/Merge"
  op: "Merge"
  input: "cond_7/Switch_1"
  input: "cond_7/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv2/conv2_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv2/conv2_2/biases"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv2/conv2_2/biases/Initializer/zeros"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond_7/read/Switch_conv2/conv2_2/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_7/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond_7/read_conv2/conv2_2/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond_7/read/Switch_conv2/conv2_2/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/cond_7/Merge_conv2/conv2_2/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_7/Switch_1"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond_7/read_conv2/conv2_2/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/cond_7/Merge_conv2/conv2_2/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv2_2/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "conv3/conv3_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_8/Switch"
  op: "Switch"
  input: "IsVariableInitialized_8"
  input: "IsVariableInitialized_8"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_8/switch_t"
  op: "Identity"
  input: "cond_8/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_8/switch_f"
  op: "Identity"
  input: "cond_8/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_8/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_8"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_8/read"
  op: "Identity"
  input: "cond_8/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_8/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_1/weights"
  input: "cond_8/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_8/Switch_1"
  op: "Switch"
  input: "conv3/conv3_1/weights/Initializer/random_uniform"
  input: "cond_8/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_8/Merge"
  op: "Merge"
  input: "cond_8/Switch_1"
  input: "cond_8/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv3/conv3_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_1/weights"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv3/conv3_1/weights/Initializer/random_uniform"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond_8/read/Switch_conv3/conv3_1/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_8/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond_8/read_conv3/conv3_1/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond_8/read/Switch_conv3/conv3_1/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/cond_8/Merge_conv3/conv3_1/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_8/Switch_1"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond_8/read_conv3/conv3_1/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/cond_8/Merge_conv3/conv3_1/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_1/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "conv3/conv3_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_9/Switch"
  op: "Switch"
  input: "IsVariableInitialized_9"
  input: "IsVariableInitialized_9"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_9/switch_t"
  op: "Identity"
  input: "cond_9/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_9/switch_f"
  op: "Identity"
  input: "cond_9/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_9/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_9"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_9/read"
  op: "Identity"
  input: "cond_9/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_9/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_1/biases"
  input: "cond_9/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_9/Switch_1"
  op: "Switch"
  input: "conv3/conv3_1/biases/Initializer/zeros"
  input: "cond_9/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_9/Merge"
  op: "Merge"
  input: "cond_9/Switch_1"
  input: "cond_9/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv3/conv3_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_1/biases"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv3/conv3_1/biases/Initializer/zeros"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond_9/read/Switch_conv3/conv3_1/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_9/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond_9/read_conv3/conv3_1/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond_9/read/Switch_conv3/conv3_1/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/cond_9/Merge_conv3/conv3_1/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_9/Switch_1"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond_9/read_conv3/conv3_1/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/cond_9/Merge_conv3/conv3_1/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_1/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "conv3/conv3_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_10/Switch"
  op: "Switch"
  input: "IsVariableInitialized_10"
  input: "IsVariableInitialized_10"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_10/switch_t"
  op: "Identity"
  input: "cond_10/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_10/switch_f"
  op: "Identity"
  input: "cond_10/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_10/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_10"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_10/read"
  op: "Identity"
  input: "cond_10/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_10/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_2/weights"
  input: "cond_10/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_10/Switch_1"
  op: "Switch"
  input: "conv3/conv3_2/weights/Initializer/random_uniform"
  input: "cond_10/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_10/Merge"
  op: "Merge"
  input: "cond_10/Switch_1"
  input: "cond_10/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv3/conv3_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_2/weights"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv3/conv3_2/weights/Initializer/random_uniform"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond_10/read/Switch_conv3/conv3_2/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_10/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond_10/read_conv3/conv3_2/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond_10/read/Switch_conv3/conv3_2/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/cond_10/Merge_conv3/conv3_2/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_10/Switch_1"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond_10/read_conv3/conv3_2/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/cond_10/Merge_conv3/conv3_2/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_2/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "conv3/conv3_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_11/Switch"
  op: "Switch"
  input: "IsVariableInitialized_11"
  input: "IsVariableInitialized_11"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_11/switch_t"
  op: "Identity"
  input: "cond_11/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_11/switch_f"
  op: "Identity"
  input: "cond_11/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_11/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_11"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_11/read"
  op: "Identity"
  input: "cond_11/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_11/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_2/biases"
  input: "cond_11/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_11/Switch_1"
  op: "Switch"
  input: "conv3/conv3_2/biases/Initializer/zeros"
  input: "cond_11/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_11/Merge"
  op: "Merge"
  input: "cond_11/Switch_1"
  input: "cond_11/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv3/conv3_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_2/biases"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv3/conv3_2/biases/Initializer/zeros"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond_11/read/Switch_conv3/conv3_2/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_11/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond_11/read_conv3/conv3_2/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond_11/read/Switch_conv3/conv3_2/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/cond_11/Merge_conv3/conv3_2/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_11/Switch_1"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond_11/read_conv3/conv3_2/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/cond_11/Merge_conv3/conv3_2/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_2/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "conv3/conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_12/Switch"
  op: "Switch"
  input: "IsVariableInitialized_12"
  input: "IsVariableInitialized_12"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_12/switch_t"
  op: "Identity"
  input: "cond_12/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_12/switch_f"
  op: "Identity"
  input: "cond_12/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_12/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_12"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_12/read"
  op: "Identity"
  input: "cond_12/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_12/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_3/weights"
  input: "cond_12/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_12/Switch_1"
  op: "Switch"
  input: "conv3/conv3_3/weights/Initializer/random_uniform"
  input: "cond_12/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_12/Merge"
  op: "Merge"
  input: "cond_12/Switch_1"
  input: "cond_12/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv3/conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_3/weights"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv3/conv3_3/weights/Initializer/random_uniform"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond_12/read/Switch_conv3/conv3_3/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_12/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond_12/read_conv3/conv3_3/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond_12/read/Switch_conv3/conv3_3/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/cond_12/Merge_conv3/conv3_3/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_12/Switch_1"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond_12/read_conv3/conv3_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/cond_12/Merge_conv3/conv3_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_3/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "conv3/conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_13/Switch"
  op: "Switch"
  input: "IsVariableInitialized_13"
  input: "IsVariableInitialized_13"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_13/switch_t"
  op: "Identity"
  input: "cond_13/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_13/switch_f"
  op: "Identity"
  input: "cond_13/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_13/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_13"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_13/read"
  op: "Identity"
  input: "cond_13/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_13/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_3/biases"
  input: "cond_13/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_13/Switch_1"
  op: "Switch"
  input: "conv3/conv3_3/biases/Initializer/zeros"
  input: "cond_13/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "cond_13/Merge"
  op: "Merge"
  input: "cond_13/Switch_1"
  input: "cond_13/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv3/conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv3/conv3_3/biases"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv3/conv3_3/biases/Initializer/zeros"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond_13/read/Switch_conv3/conv3_3/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_13/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond_13/read_conv3/conv3_3/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond_13/read/Switch_conv3/conv3_3/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/cond_13/Merge_conv3/conv3_3/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_13/Switch_1"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond_13/read_conv3/conv3_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/cond_13/Merge_conv3/conv3_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv3_3/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "conv4/conv4_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_14/Switch"
  op: "Switch"
  input: "IsVariableInitialized_14"
  input: "IsVariableInitialized_14"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_14/switch_t"
  op: "Identity"
  input: "cond_14/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_14/switch_f"
  op: "Identity"
  input: "cond_14/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_14/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_14"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_14/read"
  op: "Identity"
  input: "cond_14/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_14/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_1/weights"
  input: "cond_14/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_14/Switch_1"
  op: "Switch"
  input: "conv4/conv4_1/weights/Initializer/random_uniform"
  input: "cond_14/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_14/Merge"
  op: "Merge"
  input: "cond_14/Switch_1"
  input: "cond_14/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv4/conv4_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_1/weights"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv4/conv4_1/weights/Initializer/random_uniform"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond_14/read/Switch_conv4/conv4_1/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_14/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond_14/read_conv4/conv4_1/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond_14/read/Switch_conv4/conv4_1/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/cond_14/Merge_conv4/conv4_1/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_14/Switch_1"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond_14/read_conv4/conv4_1/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/cond_14/Merge_conv4/conv4_1/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_1/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv4/conv4_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_15/Switch"
  op: "Switch"
  input: "IsVariableInitialized_15"
  input: "IsVariableInitialized_15"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_15/switch_t"
  op: "Identity"
  input: "cond_15/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_15/switch_f"
  op: "Identity"
  input: "cond_15/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_15/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_15"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_15/read"
  op: "Identity"
  input: "cond_15/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_15/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_1/biases"
  input: "cond_15/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_15/Switch_1"
  op: "Switch"
  input: "conv4/conv4_1/biases/Initializer/zeros"
  input: "cond_15/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_15/Merge"
  op: "Merge"
  input: "cond_15/Switch_1"
  input: "cond_15/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv4/conv4_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_1/biases"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv4/conv4_1/biases/Initializer/zeros"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond_15/read/Switch_conv4/conv4_1/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_15/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond_15/read_conv4/conv4_1/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond_15/read/Switch_conv4/conv4_1/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/cond_15/Merge_conv4/conv4_1/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_15/Switch_1"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond_15/read_conv4/conv4_1/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/cond_15/Merge_conv4/conv4_1/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_1/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv4/conv4_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_16/Switch"
  op: "Switch"
  input: "IsVariableInitialized_16"
  input: "IsVariableInitialized_16"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_16/switch_t"
  op: "Identity"
  input: "cond_16/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_16/switch_f"
  op: "Identity"
  input: "cond_16/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_16/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_16"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_16/read"
  op: "Identity"
  input: "cond_16/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_16/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_2/weights"
  input: "cond_16/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_16/Switch_1"
  op: "Switch"
  input: "conv4/conv4_2/weights/Initializer/random_uniform"
  input: "cond_16/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_16/Merge"
  op: "Merge"
  input: "cond_16/Switch_1"
  input: "cond_16/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv4/conv4_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_2/weights"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv4/conv4_2/weights/Initializer/random_uniform"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond_16/read/Switch_conv4/conv4_2/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_16/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond_16/read_conv4/conv4_2/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond_16/read/Switch_conv4/conv4_2/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/cond_16/Merge_conv4/conv4_2/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_16/Switch_1"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond_16/read_conv4/conv4_2/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/cond_16/Merge_conv4/conv4_2/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_2/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv4/conv4_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_17/Switch"
  op: "Switch"
  input: "IsVariableInitialized_17"
  input: "IsVariableInitialized_17"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_17/switch_t"
  op: "Identity"
  input: "cond_17/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_17/switch_f"
  op: "Identity"
  input: "cond_17/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_17/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_17"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_17/read"
  op: "Identity"
  input: "cond_17/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_17/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_2/biases"
  input: "cond_17/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_17/Switch_1"
  op: "Switch"
  input: "conv4/conv4_2/biases/Initializer/zeros"
  input: "cond_17/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_17/Merge"
  op: "Merge"
  input: "cond_17/Switch_1"
  input: "cond_17/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv4/conv4_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_2/biases"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv4/conv4_2/biases/Initializer/zeros"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond_17/read/Switch_conv4/conv4_2/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_17/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond_17/read_conv4/conv4_2/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond_17/read/Switch_conv4/conv4_2/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/cond_17/Merge_conv4/conv4_2/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_17/Switch_1"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond_17/read_conv4/conv4_2/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/cond_17/Merge_conv4/conv4_2/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_2/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "conv4/conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_18/Switch"
  op: "Switch"
  input: "IsVariableInitialized_18"
  input: "IsVariableInitialized_18"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_18/switch_t"
  op: "Identity"
  input: "cond_18/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_18/switch_f"
  op: "Identity"
  input: "cond_18/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_18/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_18"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_18/read"
  op: "Identity"
  input: "cond_18/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_18/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_3/weights"
  input: "cond_18/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_18/Switch_1"
  op: "Switch"
  input: "conv4/conv4_3/weights/Initializer/random_uniform"
  input: "cond_18/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_18/Merge"
  op: "Merge"
  input: "cond_18/Switch_1"
  input: "cond_18/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv4/conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_3/weights"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv4/conv4_3/weights/Initializer/random_uniform"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond_18/read/Switch_conv4/conv4_3/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_18/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond_18/read_conv4/conv4_3/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond_18/read/Switch_conv4/conv4_3/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/cond_18/Merge_conv4/conv4_3/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_18/Switch_1"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond_18/read_conv4/conv4_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/cond_18/Merge_conv4/conv4_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_3/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "conv4/conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_19/Switch"
  op: "Switch"
  input: "IsVariableInitialized_19"
  input: "IsVariableInitialized_19"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_19/switch_t"
  op: "Identity"
  input: "cond_19/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_19/switch_f"
  op: "Identity"
  input: "cond_19/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_19/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_19"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_19/read"
  op: "Identity"
  input: "cond_19/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_19/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_3/biases"
  input: "cond_19/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_19/Switch_1"
  op: "Switch"
  input: "conv4/conv4_3/biases/Initializer/zeros"
  input: "cond_19/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_19/Merge"
  op: "Merge"
  input: "cond_19/Switch_1"
  input: "cond_19/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv4/conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv4/conv4_3/biases"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv4/conv4_3/biases/Initializer/zeros"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond_19/read/Switch_conv4/conv4_3/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_19/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond_19/read_conv4/conv4_3/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond_19/read/Switch_conv4/conv4_3/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/cond_19/Merge_conv4/conv4_3/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_19/Switch_1"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond_19/read_conv4/conv4_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/cond_19/Merge_conv4/conv4_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/conv4_3/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "conv5/conv5_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_20/Switch"
  op: "Switch"
  input: "IsVariableInitialized_20"
  input: "IsVariableInitialized_20"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_20/switch_t"
  op: "Identity"
  input: "cond_20/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_20/switch_f"
  op: "Identity"
  input: "cond_20/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_20/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_20"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_20/read"
  op: "Identity"
  input: "cond_20/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_20/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_1/weights"
  input: "cond_20/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_20/Switch_1"
  op: "Switch"
  input: "conv5/conv5_1/weights/Initializer/random_uniform"
  input: "cond_20/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_20/Merge"
  op: "Merge"
  input: "cond_20/Switch_1"
  input: "cond_20/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv5/conv5_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_1/weights"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv5/conv5_1/weights/Initializer/random_uniform"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond_20/read/Switch_conv5/conv5_1/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_20/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond_20/read_conv5/conv5_1/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond_20/read/Switch_conv5/conv5_1/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/cond_20/Merge_conv5/conv5_1/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_20/Switch_1"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond_20/read_conv5/conv5_1/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/cond_20/Merge_conv5/conv5_1/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_1/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv5/conv5_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_21/Switch"
  op: "Switch"
  input: "IsVariableInitialized_21"
  input: "IsVariableInitialized_21"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_21/switch_t"
  op: "Identity"
  input: "cond_21/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_21/switch_f"
  op: "Identity"
  input: "cond_21/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_21/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_21"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_21/read"
  op: "Identity"
  input: "cond_21/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_21/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_1/biases"
  input: "cond_21/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_21/Switch_1"
  op: "Switch"
  input: "conv5/conv5_1/biases/Initializer/zeros"
  input: "cond_21/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_21/Merge"
  op: "Merge"
  input: "cond_21/Switch_1"
  input: "cond_21/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv5/conv5_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_1/biases"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv5/conv5_1/biases/Initializer/zeros"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond_21/read/Switch_conv5/conv5_1/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_21/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond_21/read_conv5/conv5_1/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond_21/read/Switch_conv5/conv5_1/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/cond_21/Merge_conv5/conv5_1/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_21/Switch_1"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond_21/read_conv5/conv5_1/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/cond_21/Merge_conv5/conv5_1/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_1/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv5/conv5_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_22/Switch"
  op: "Switch"
  input: "IsVariableInitialized_22"
  input: "IsVariableInitialized_22"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_22/switch_t"
  op: "Identity"
  input: "cond_22/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_22/switch_f"
  op: "Identity"
  input: "cond_22/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_22/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_22"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_22/read"
  op: "Identity"
  input: "cond_22/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_22/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_2/weights"
  input: "cond_22/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_22/Switch_1"
  op: "Switch"
  input: "conv5/conv5_2/weights/Initializer/random_uniform"
  input: "cond_22/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_22/Merge"
  op: "Merge"
  input: "cond_22/Switch_1"
  input: "cond_22/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv5/conv5_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_2/weights"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv5/conv5_2/weights/Initializer/random_uniform"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond_22/read/Switch_conv5/conv5_2/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_22/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond_22/read_conv5/conv5_2/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond_22/read/Switch_conv5/conv5_2/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/cond_22/Merge_conv5/conv5_2/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_22/Switch_1"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond_22/read_conv5/conv5_2/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/cond_22/Merge_conv5/conv5_2/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_2/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "conv5/conv5_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_23/Switch"
  op: "Switch"
  input: "IsVariableInitialized_23"
  input: "IsVariableInitialized_23"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_23/switch_t"
  op: "Identity"
  input: "cond_23/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_23/switch_f"
  op: "Identity"
  input: "cond_23/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_23/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_23"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_23/read"
  op: "Identity"
  input: "cond_23/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_23/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_2/biases"
  input: "cond_23/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_23/Switch_1"
  op: "Switch"
  input: "conv5/conv5_2/biases/Initializer/zeros"
  input: "cond_23/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_23/Merge"
  op: "Merge"
  input: "cond_23/Switch_1"
  input: "cond_23/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv5/conv5_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_2/biases"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv5/conv5_2/biases/Initializer/zeros"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond_23/read/Switch_conv5/conv5_2/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_23/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond_23/read_conv5/conv5_2/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond_23/read/Switch_conv5/conv5_2/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/cond_23/Merge_conv5/conv5_2/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_23/Switch_1"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond_23/read_conv5/conv5_2/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/cond_23/Merge_conv5/conv5_2/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_2/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "conv5/conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_24/Switch"
  op: "Switch"
  input: "IsVariableInitialized_24"
  input: "IsVariableInitialized_24"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_24/switch_t"
  op: "Identity"
  input: "cond_24/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_24/switch_f"
  op: "Identity"
  input: "cond_24/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_24/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_24"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_24/read"
  op: "Identity"
  input: "cond_24/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_24/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_3/weights"
  input: "cond_24/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_24/Switch_1"
  op: "Switch"
  input: "conv5/conv5_3/weights/Initializer/random_uniform"
  input: "cond_24/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_24/Merge"
  op: "Merge"
  input: "cond_24/Switch_1"
  input: "cond_24/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv5/conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_3/weights"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv5/conv5_3/weights/Initializer/random_uniform"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond_24/read/Switch_conv5/conv5_3/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_24/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond_24/read_conv5/conv5_3/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond_24/read/Switch_conv5/conv5_3/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/cond_24/Merge_conv5/conv5_3/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_24/Switch_1"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond_24/read_conv5/conv5_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/cond_24/Merge_conv5/conv5_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_3/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "conv5/conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_25/Switch"
  op: "Switch"
  input: "IsVariableInitialized_25"
  input: "IsVariableInitialized_25"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_25/switch_t"
  op: "Identity"
  input: "cond_25/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_25/switch_f"
  op: "Identity"
  input: "cond_25/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_25/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_25"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_25/read"
  op: "Identity"
  input: "cond_25/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_25/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_3/biases"
  input: "cond_25/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_25/Switch_1"
  op: "Switch"
  input: "conv5/conv5_3/biases/Initializer/zeros"
  input: "cond_25/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "cond_25/Merge"
  op: "Merge"
  input: "cond_25/Switch_1"
  input: "cond_25/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv5/conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "conv5/conv5_3/biases"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "conv5/conv5_3/biases/Initializer/zeros"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond_25/read/Switch_conv5/conv5_3/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_25/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond_25/read_conv5/conv5_3/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond_25/read/Switch_conv5/conv5_3/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/cond_25/Merge_conv5/conv5_3/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_25/Switch_1"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond_25/read_conv5/conv5_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/cond_25/Merge_conv5/conv5_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/conv5_3/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "fc6/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_26/Switch"
  op: "Switch"
  input: "IsVariableInitialized_26"
  input: "IsVariableInitialized_26"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_26/switch_t"
  op: "Identity"
  input: "cond_26/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_26/switch_f"
  op: "Identity"
  input: "cond_26/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_26/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_26"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_26/read"
  op: "Identity"
  input: "cond_26/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_26/read/Switch"
  op: "RefSwitch"
  input: "fc6/weights"
  input: "cond_26/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_26/Switch_1"
  op: "Switch"
  input: "fc6/weights/Initializer/random_uniform"
  input: "cond_26/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_26/Merge"
  op: "Merge"
  input: "cond_26/Switch_1"
  input: "cond_26/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "fc6/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "fc6/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "fc6/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "fc6/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "fc6/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "fc6/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "fc6/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "fc6/weights"
  input: "fc6/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "fc6/weights/Initializer/random_uniform"
  input: "fc6/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "fc6/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "fc6/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond_26/read/Switch_fc6/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "fc6/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_26/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond_26/read_fc6/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "fc6/weights/ExponentialMovingAverage/cond_26/read/Switch_fc6/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/cond_26/Merge_fc6/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_26/Switch_1"
  input: "fc6/weights/ExponentialMovingAverage/cond_26/read_fc6/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "fc6/weights/ExponentialMovingAverage"
  input: "fc6/weights/ExponentialMovingAverage/cond_26/Merge_fc6/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc6/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "fc6/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "fc6/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_27/Switch"
  op: "Switch"
  input: "IsVariableInitialized_27"
  input: "IsVariableInitialized_27"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_27/switch_t"
  op: "Identity"
  input: "cond_27/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_27/switch_f"
  op: "Identity"
  input: "cond_27/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_27/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_27"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_27/read"
  op: "Identity"
  input: "cond_27/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_27/read/Switch"
  op: "RefSwitch"
  input: "fc6/biases"
  input: "cond_27/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_27/Switch_1"
  op: "Switch"
  input: "fc6/biases/Initializer/zeros"
  input: "cond_27/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_27/Merge"
  op: "Merge"
  input: "cond_27/Switch_1"
  input: "cond_27/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "fc6/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "fc6/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "fc6/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "fc6/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "fc6/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "fc6/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "fc6/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "fc6/biases"
  input: "fc6/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "fc6/biases/Initializer/zeros"
  input: "fc6/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "fc6/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "fc6/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond_27/read/Switch_fc6/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "fc6/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_27/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond_27/read_fc6/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "fc6/biases/ExponentialMovingAverage/cond_27/read/Switch_fc6/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/cond_27/Merge_fc6/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_27/Switch_1"
  input: "fc6/biases/ExponentialMovingAverage/cond_27/read_fc6/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "fc6/biases/ExponentialMovingAverage"
  input: "fc6/biases/ExponentialMovingAverage/cond_27/Merge_fc6/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc6/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "fc6/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_28/Switch"
  op: "Switch"
  input: "IsVariableInitialized_28"
  input: "IsVariableInitialized_28"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_28/switch_t"
  op: "Identity"
  input: "cond_28/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_28/switch_f"
  op: "Identity"
  input: "cond_28/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_28/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_28"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_28/read"
  op: "Identity"
  input: "cond_28/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_28/read/Switch"
  op: "RefSwitch"
  input: "fc7/weights"
  input: "cond_28/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_28/Switch_1"
  op: "Switch"
  input: "fc7/weights/Initializer/random_uniform"
  input: "cond_28/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_28/Merge"
  op: "Merge"
  input: "cond_28/Switch_1"
  input: "cond_28/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "fc7/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "fc7/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "fc7/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "fc7/weights"
  input: "fc7/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "fc7/weights/Initializer/random_uniform"
  input: "fc7/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "fc7/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "fc7/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond_28/read/Switch_fc7/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "fc7/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_28/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond_28/read_fc7/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "fc7/weights/ExponentialMovingAverage/cond_28/read/Switch_fc7/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/cond_28/Merge_fc7/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_28/Switch_1"
  input: "fc7/weights/ExponentialMovingAverage/cond_28/read_fc7/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "fc7/weights/ExponentialMovingAverage"
  input: "fc7/weights/ExponentialMovingAverage/cond_28/Merge_fc7/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc7/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "fc7/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_29/Switch"
  op: "Switch"
  input: "IsVariableInitialized_29"
  input: "IsVariableInitialized_29"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_29/switch_t"
  op: "Identity"
  input: "cond_29/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_29/switch_f"
  op: "Identity"
  input: "cond_29/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_29/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_29"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_29/read"
  op: "Identity"
  input: "cond_29/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_29/read/Switch"
  op: "RefSwitch"
  input: "fc7/biases"
  input: "cond_29/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_29/Switch_1"
  op: "Switch"
  input: "fc7/biases/Initializer/zeros"
  input: "cond_29/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "cond_29/Merge"
  op: "Merge"
  input: "cond_29/Switch_1"
  input: "cond_29/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "fc7/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "fc7/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "fc7/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "fc7/biases"
  input: "fc7/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "fc7/biases/Initializer/zeros"
  input: "fc7/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "fc7/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "fc7/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond_29/read/Switch_fc7/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "fc7/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_29/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond_29/read_fc7/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "fc7/biases/ExponentialMovingAverage/cond_29/read/Switch_fc7/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/cond_29/Merge_fc7/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_29/Switch_1"
  input: "fc7/biases/ExponentialMovingAverage/cond_29/read_fc7/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "fc7/biases/ExponentialMovingAverage"
  input: "fc7/biases/ExponentialMovingAverage/cond_29/Merge_fc7/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc7/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "fc7/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_30/Switch"
  op: "Switch"
  input: "IsVariableInitialized_30"
  input: "IsVariableInitialized_30"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_30/switch_t"
  op: "Identity"
  input: "cond_30/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_30/switch_f"
  op: "Identity"
  input: "cond_30/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_30/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_30"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_30/read"
  op: "Identity"
  input: "cond_30/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_30/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_fc7/weights"
  input: "cond_30/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_30/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform"
  input: "cond_30/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_30/Merge"
  op: "Merge"
  input: "cond_30/Switch_1"
  input: "cond_30/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_fc7/weights"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_fc7/weights/Initializer/random_uniform"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond_30/read/Switch_pixel_cls/score_from_fc7/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_30/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond_30/read_pixel_cls/score_from_fc7/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond_30/read/Switch_pixel_cls/score_from_fc7/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond_30/Merge_pixel_cls/score_from_fc7/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_30/Switch_1"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond_30/read_pixel_cls/score_from_fc7/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/cond_30/Merge_pixel_cls/score_from_fc7/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_31/Switch"
  op: "Switch"
  input: "IsVariableInitialized_31"
  input: "IsVariableInitialized_31"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_31/switch_t"
  op: "Identity"
  input: "cond_31/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_31/switch_f"
  op: "Identity"
  input: "cond_31/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_31/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_31"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_31/read"
  op: "Identity"
  input: "cond_31/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_31/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_fc7/biases"
  input: "cond_31/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_31/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_fc7/biases/Initializer/zeros"
  input: "cond_31/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_31/Merge"
  op: "Merge"
  input: "cond_31/Switch_1"
  input: "cond_31/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_fc7/biases"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_fc7/biases/Initializer/zeros"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond_31/read/Switch_pixel_cls/score_from_fc7/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_31/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond_31/read_pixel_cls/score_from_fc7/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond_31/read/Switch_pixel_cls/score_from_fc7/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond_31/Merge_pixel_cls/score_from_fc7/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_31/Switch_1"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond_31/read_pixel_cls/score_from_fc7/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/cond_31/Merge_pixel_cls/score_from_fc7/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_32/Switch"
  op: "Switch"
  input: "IsVariableInitialized_32"
  input: "IsVariableInitialized_32"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_32/switch_t"
  op: "Identity"
  input: "cond_32/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_32/switch_f"
  op: "Identity"
  input: "cond_32/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_32/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_32"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_32/read"
  op: "Identity"
  input: "cond_32/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_32/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv5_3/weights"
  input: "cond_32/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_32/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform"
  input: "cond_32/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_32/Merge"
  op: "Merge"
  input: "cond_32/Switch_1"
  input: "cond_32/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv5_3/weights"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv5_3/weights/Initializer/random_uniform"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond_32/read/Switch_pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_32/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond_32/read_pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond_32/read/Switch_pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond_32/Merge_pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_32/Switch_1"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond_32/read_pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/cond_32/Merge_pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_33/Switch"
  op: "Switch"
  input: "IsVariableInitialized_33"
  input: "IsVariableInitialized_33"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_33/switch_t"
  op: "Identity"
  input: "cond_33/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_33/switch_f"
  op: "Identity"
  input: "cond_33/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_33/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_33"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_33/read"
  op: "Identity"
  input: "cond_33/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_33/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv5_3/biases"
  input: "cond_33/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_33/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv5_3/biases/Initializer/zeros"
  input: "cond_33/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_33/Merge"
  op: "Merge"
  input: "cond_33/Switch_1"
  input: "cond_33/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv5_3/biases"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv5_3/biases/Initializer/zeros"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond_33/read/Switch_pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_33/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond_33/read_pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond_33/read/Switch_pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond_33/Merge_pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_33/Switch_1"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond_33/read_pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/cond_33/Merge_pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_34/Switch"
  op: "Switch"
  input: "IsVariableInitialized_34"
  input: "IsVariableInitialized_34"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_34/switch_t"
  op: "Identity"
  input: "cond_34/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_34/switch_f"
  op: "Identity"
  input: "cond_34/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_34/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_34"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_34/read"
  op: "Identity"
  input: "cond_34/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_34/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv4_3/weights"
  input: "cond_34/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_34/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform"
  input: "cond_34/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_34/Merge"
  op: "Merge"
  input: "cond_34/Switch_1"
  input: "cond_34/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv4_3/weights"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv4_3/weights/Initializer/random_uniform"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond_34/read/Switch_pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_34/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond_34/read_pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond_34/read/Switch_pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond_34/Merge_pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_34/Switch_1"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond_34/read_pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/cond_34/Merge_pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_35/Switch"
  op: "Switch"
  input: "IsVariableInitialized_35"
  input: "IsVariableInitialized_35"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_35/switch_t"
  op: "Identity"
  input: "cond_35/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_35/switch_f"
  op: "Identity"
  input: "cond_35/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_35/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_35"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_35/read"
  op: "Identity"
  input: "cond_35/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_35/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv4_3/biases"
  input: "cond_35/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_35/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv4_3/biases/Initializer/zeros"
  input: "cond_35/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_35/Merge"
  op: "Merge"
  input: "cond_35/Switch_1"
  input: "cond_35/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv4_3/biases"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv4_3/biases/Initializer/zeros"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond_35/read/Switch_pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_35/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond_35/read_pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond_35/read/Switch_pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond_35/Merge_pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_35/Switch_1"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond_35/read_pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/cond_35/Merge_pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_36/Switch"
  op: "Switch"
  input: "IsVariableInitialized_36"
  input: "IsVariableInitialized_36"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_36/switch_t"
  op: "Identity"
  input: "cond_36/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_36/switch_f"
  op: "Identity"
  input: "cond_36/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_36/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_36"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_36/read"
  op: "Identity"
  input: "cond_36/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_36/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv3_3/weights"
  input: "cond_36/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_36/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform"
  input: "cond_36/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_36/Merge"
  op: "Merge"
  input: "cond_36/Switch_1"
  input: "cond_36/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv3_3/weights"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv3_3/weights/Initializer/random_uniform"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond_36/read/Switch_pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_36/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond_36/read_pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond_36/read/Switch_pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond_36/Merge_pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_36/Switch_1"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond_36/read_pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/cond_36/Merge_pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_37/Switch"
  op: "Switch"
  input: "IsVariableInitialized_37"
  input: "IsVariableInitialized_37"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_37/switch_t"
  op: "Identity"
  input: "cond_37/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_37/switch_f"
  op: "Identity"
  input: "cond_37/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_37/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_37"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_37/read"
  op: "Identity"
  input: "cond_37/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_37/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv3_3/biases"
  input: "cond_37/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_37/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv3_3/biases/Initializer/zeros"
  input: "cond_37/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_37/Merge"
  op: "Merge"
  input: "cond_37/Switch_1"
  input: "cond_37/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_cls/score_from_conv3_3/biases"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_cls/score_from_conv3_3/biases/Initializer/zeros"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond_37/read/Switch_pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_37/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond_37/read_pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond_37/read/Switch_pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond_37/Merge_pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_37/Switch_1"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond_37/read_pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/cond_37/Merge_pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_38/Switch"
  op: "Switch"
  input: "IsVariableInitialized_38"
  input: "IsVariableInitialized_38"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_38/switch_t"
  op: "Identity"
  input: "cond_38/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_38/switch_f"
  op: "Identity"
  input: "cond_38/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_38/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_38"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_38/read"
  op: "Identity"
  input: "cond_38/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_38/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_fc7/weights"
  input: "cond_38/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_38/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_fc7/weights/Initializer/random_uniform"
  input: "cond_38/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_38/Merge"
  op: "Merge"
  input: "cond_38/Switch_1"
  input: "cond_38/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_fc7/weights"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_fc7/weights/Initializer/random_uniform"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond_38/read/Switch_pixel_link/score_from_fc7/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_38/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond_38/read_pixel_link/score_from_fc7/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond_38/read/Switch_pixel_link/score_from_fc7/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond_38/Merge_pixel_link/score_from_fc7/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_38/Switch_1"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond_38/read_pixel_link/score_from_fc7/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/cond_38/Merge_pixel_link/score_from_fc7/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_39/Switch"
  op: "Switch"
  input: "IsVariableInitialized_39"
  input: "IsVariableInitialized_39"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_39/switch_t"
  op: "Identity"
  input: "cond_39/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_39/switch_f"
  op: "Identity"
  input: "cond_39/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_39/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_39"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_39/read"
  op: "Identity"
  input: "cond_39/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_39/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_fc7/biases"
  input: "cond_39/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_39/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_fc7/biases/Initializer/zeros"
  input: "cond_39/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_39/Merge"
  op: "Merge"
  input: "cond_39/Switch_1"
  input: "cond_39/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_fc7/biases"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_fc7/biases/Initializer/zeros"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond_39/read/Switch_pixel_link/score_from_fc7/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_39/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond_39/read_pixel_link/score_from_fc7/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond_39/read/Switch_pixel_link/score_from_fc7/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond_39/Merge_pixel_link/score_from_fc7/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_39/Switch_1"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond_39/read_pixel_link/score_from_fc7/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/cond_39/Merge_pixel_link/score_from_fc7/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_40/Switch"
  op: "Switch"
  input: "IsVariableInitialized_40"
  input: "IsVariableInitialized_40"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_40/switch_t"
  op: "Identity"
  input: "cond_40/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_40/switch_f"
  op: "Identity"
  input: "cond_40/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_40/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_40"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_40/read"
  op: "Identity"
  input: "cond_40/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_40/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv5_3/weights"
  input: "cond_40/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_40/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform"
  input: "cond_40/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_40/Merge"
  op: "Merge"
  input: "cond_40/Switch_1"
  input: "cond_40/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv5_3/weights"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv5_3/weights/Initializer/random_uniform"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond_40/read/Switch_pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_40/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond_40/read_pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond_40/read/Switch_pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond_40/Merge_pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_40/Switch_1"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond_40/read_pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/cond_40/Merge_pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_41/Switch"
  op: "Switch"
  input: "IsVariableInitialized_41"
  input: "IsVariableInitialized_41"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_41/switch_t"
  op: "Identity"
  input: "cond_41/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_41/switch_f"
  op: "Identity"
  input: "cond_41/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_41/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_41"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_41/read"
  op: "Identity"
  input: "cond_41/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_41/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv5_3/biases"
  input: "cond_41/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_41/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv5_3/biases/Initializer/zeros"
  input: "cond_41/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_41/Merge"
  op: "Merge"
  input: "cond_41/Switch_1"
  input: "cond_41/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv5_3/biases"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv5_3/biases/Initializer/zeros"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond_41/read/Switch_pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_41/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond_41/read_pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond_41/read/Switch_pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond_41/Merge_pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_41/Switch_1"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond_41/read_pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/cond_41/Merge_pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_42/Switch"
  op: "Switch"
  input: "IsVariableInitialized_42"
  input: "IsVariableInitialized_42"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_42/switch_t"
  op: "Identity"
  input: "cond_42/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_42/switch_f"
  op: "Identity"
  input: "cond_42/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_42/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_42"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_42/read"
  op: "Identity"
  input: "cond_42/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_42/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv4_3/weights"
  input: "cond_42/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_42/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform"
  input: "cond_42/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_42/Merge"
  op: "Merge"
  input: "cond_42/Switch_1"
  input: "cond_42/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv4_3/weights"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv4_3/weights/Initializer/random_uniform"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond_42/read/Switch_pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_42/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond_42/read_pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond_42/read/Switch_pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond_42/Merge_pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_42/Switch_1"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond_42/read_pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/cond_42/Merge_pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_43/Switch"
  op: "Switch"
  input: "IsVariableInitialized_43"
  input: "IsVariableInitialized_43"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_43/switch_t"
  op: "Identity"
  input: "cond_43/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_43/switch_f"
  op: "Identity"
  input: "cond_43/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_43/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_43"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_43/read"
  op: "Identity"
  input: "cond_43/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_43/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv4_3/biases"
  input: "cond_43/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_43/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv4_3/biases/Initializer/zeros"
  input: "cond_43/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_43/Merge"
  op: "Merge"
  input: "cond_43/Switch_1"
  input: "cond_43/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv4_3/biases"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv4_3/biases/Initializer/zeros"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond_43/read/Switch_pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_43/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond_43/read_pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond_43/read/Switch_pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond_43/Merge_pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_43/Switch_1"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond_43/read_pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/cond_43/Merge_pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_44/Switch"
  op: "Switch"
  input: "IsVariableInitialized_44"
  input: "IsVariableInitialized_44"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_44/switch_t"
  op: "Identity"
  input: "cond_44/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_44/switch_f"
  op: "Identity"
  input: "cond_44/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_44/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_44"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_44/read"
  op: "Identity"
  input: "cond_44/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_44/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv3_3/weights"
  input: "cond_44/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_44/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform"
  input: "cond_44/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_44/Merge"
  op: "Merge"
  input: "cond_44/Switch_1"
  input: "cond_44/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv3_3/weights"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv3_3/weights/Initializer/random_uniform"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond_44/read/Switch_pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond/Merge"
  input: "cond_44/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond_44/read_pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond_44/read/Switch_pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond_44/Merge_pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_44/Switch_1"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond_44/read_pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/cond_44/Merge_pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cond_45/Switch"
  op: "Switch"
  input: "IsVariableInitialized_45"
  input: "IsVariableInitialized_45"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_45/switch_t"
  op: "Identity"
  input: "cond_45/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_45/switch_f"
  op: "Identity"
  input: "cond_45/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_45/pred_id"
  op: "Identity"
  input: "IsVariableInitialized_45"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cond_45/read"
  op: "Identity"
  input: "cond_45/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_45/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv3_3/biases"
  input: "cond_45/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_45/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv3_3/biases/Initializer/zeros"
  input: "cond_45/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "cond_45/Merge"
  op: "Merge"
  input: "cond_45/Switch_1"
  input: "cond_45/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Switch"
  op: "Switch"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/switch_t"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/switch_f"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/pred_id"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/IsVariableInitialized"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/read"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/read/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/read/Switch"
  op: "RefSwitch"
  input: "pixel_link/score_from_conv3_3/biases"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Switch_1"
  op: "Switch"
  input: "pixel_link/score_from_conv3_3/biases/Initializer/zeros"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Merge"
  op: "Merge"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Switch_1"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/read"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond_45/read/Switch_pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage_0"
  op: "Switch"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond/Merge"
  input: "cond_45/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond_45/read_pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage_0"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond_45/read/Switch_pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage_0:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond_45/Merge_pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage_0"
  op: "Merge"
  input: "cond_45/Switch_1"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond_45/read_pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/cond_45/Merge_pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/read"
  op: "Identity"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999899983406
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage/read"
  input: "conv1/conv1_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg"
  op: "AssignSub"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage/read"
  input: "conv1/conv1_1/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/sub_1"
  op: "Sub"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage/read"
  input: "conv1/conv1_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2"
  op: "AssignSub"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_3/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_3/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_3/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_3/sub_1"
  op: "Sub"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage/read"
  input: "conv1/conv1_2/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_3/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_3/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_3/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_3"
  op: "AssignSub"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_3/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_4/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_4/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_4/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_4/sub_1"
  op: "Sub"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage/read"
  input: "conv2/conv2_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_4/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_4/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_4/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_4"
  op: "AssignSub"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_4/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_5/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_5/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_5/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_5/sub_1"
  op: "Sub"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage/read"
  input: "conv2/conv2_1/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_5/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_5/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_5/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_5"
  op: "AssignSub"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_5/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_6/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_6/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_6/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_6/sub_1"
  op: "Sub"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage/read"
  input: "conv2/conv2_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_6/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_6/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_6/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_6"
  op: "AssignSub"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_6/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_7/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_7/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_7/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_7/sub_1"
  op: "Sub"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage/read"
  input: "conv2/conv2_2/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_7/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_7/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_7/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_7"
  op: "AssignSub"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_7/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_8/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_8/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_8/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_8/sub_1"
  op: "Sub"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage/read"
  input: "conv3/conv3_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_8/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_8/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_8/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_8"
  op: "AssignSub"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_8/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_9/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_9/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_9/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_9/sub_1"
  op: "Sub"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage/read"
  input: "conv3/conv3_1/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_9/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_9/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_9/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_9"
  op: "AssignSub"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_9/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_10/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_10/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_10/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_10/sub_1"
  op: "Sub"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage/read"
  input: "conv3/conv3_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_10/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_10/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_10/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_10"
  op: "AssignSub"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_10/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_11/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_11/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_11/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_11/sub_1"
  op: "Sub"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage/read"
  input: "conv3/conv3_2/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_11/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_11/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_11/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_11"
  op: "AssignSub"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_11/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_12/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_12/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_12/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_12/sub_1"
  op: "Sub"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage/read"
  input: "conv3/conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_12/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_12/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_12/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_12"
  op: "AssignSub"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_12/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_13/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_13/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_13/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_13/sub_1"
  op: "Sub"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage/read"
  input: "conv3/conv3_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_13/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_13/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_13/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_13"
  op: "AssignSub"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_13/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_14/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_14/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_14/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_14/sub_1"
  op: "Sub"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage/read"
  input: "conv4/conv4_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_14/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_14/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_14/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_14"
  op: "AssignSub"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_14/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_15/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_15/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_15/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_15/sub_1"
  op: "Sub"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage/read"
  input: "conv4/conv4_1/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_15/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_15/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_15/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_15"
  op: "AssignSub"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_15/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_16/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_16/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_16/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_16/sub_1"
  op: "Sub"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage/read"
  input: "conv4/conv4_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_16/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_16/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_16/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_16"
  op: "AssignSub"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_16/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_17/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_17/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_17/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_17/sub_1"
  op: "Sub"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage/read"
  input: "conv4/conv4_2/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_17/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_17/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_17/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_17"
  op: "AssignSub"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_17/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_18/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_18/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_18/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_18/sub_1"
  op: "Sub"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage/read"
  input: "conv4/conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_18/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_18/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_18/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_18"
  op: "AssignSub"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_18/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_19/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_19/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_19/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_19/sub_1"
  op: "Sub"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage/read"
  input: "conv4/conv4_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_19/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_19/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_19/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_19"
  op: "AssignSub"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_19/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_20/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_20/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_20/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_20/sub_1"
  op: "Sub"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage/read"
  input: "conv5/conv5_1/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_20/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_20/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_20/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_20"
  op: "AssignSub"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_20/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_21/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_21/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_21/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_21/sub_1"
  op: "Sub"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage/read"
  input: "conv5/conv5_1/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_21/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_21/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_21/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_21"
  op: "AssignSub"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_21/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_22/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_22/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_22/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_22/sub_1"
  op: "Sub"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage/read"
  input: "conv5/conv5_2/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_22/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_22/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_22/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_22"
  op: "AssignSub"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_22/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_23/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_23/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_23/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_23/sub_1"
  op: "Sub"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage/read"
  input: "conv5/conv5_2/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_23/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_23/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_23/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_23"
  op: "AssignSub"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_23/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_24/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_24/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_24/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_24/sub_1"
  op: "Sub"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage/read"
  input: "conv5/conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_24/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_24/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_24/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_24"
  op: "AssignSub"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_24/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_25/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_25/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_25/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_25/sub_1"
  op: "Sub"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage/read"
  input: "conv5/conv5_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_25/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_25/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_25/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_25"
  op: "AssignSub"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_25/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_26/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_26/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_26/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_26/sub_1"
  op: "Sub"
  input: "fc6/weights/ExponentialMovingAverage/read"
  input: "fc6/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_26/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_26/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_26/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_26"
  op: "AssignSub"
  input: "fc6/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_26/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_27/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_27/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_27/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_27/sub_1"
  op: "Sub"
  input: "fc6/biases/ExponentialMovingAverage/read"
  input: "fc6/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_27/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_27/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_27/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_27"
  op: "AssignSub"
  input: "fc6/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_27/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_28/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_28/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_28/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_28/sub_1"
  op: "Sub"
  input: "fc7/weights/ExponentialMovingAverage/read"
  input: "fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_28/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_28/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_28/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_28"
  op: "AssignSub"
  input: "fc7/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_28/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_29/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_29/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_29/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_29/sub_1"
  op: "Sub"
  input: "fc7/biases/ExponentialMovingAverage/read"
  input: "fc7/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_29/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_29/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_29/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_29"
  op: "AssignSub"
  input: "fc7/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_29/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_30/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_30/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_30/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_30/sub_1"
  op: "Sub"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/read"
  input: "pixel_cls/score_from_fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_30/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_30/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_30/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_30"
  op: "AssignSub"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_30/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_31/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_31/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_31/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_31/sub_1"
  op: "Sub"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/read"
  input: "pixel_cls/score_from_fc7/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_31/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_31/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_31/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_31"
  op: "AssignSub"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_31/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_32/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_32/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_32/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_32/sub_1"
  op: "Sub"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/read"
  input: "pixel_cls/score_from_conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_32/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_32/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_32/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_32"
  op: "AssignSub"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_32/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_33/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_33/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_33/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_33/sub_1"
  op: "Sub"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/read"
  input: "pixel_cls/score_from_conv5_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_33/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_33/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_33/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_33"
  op: "AssignSub"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_33/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_34/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_34/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_34/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_34/sub_1"
  op: "Sub"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/read"
  input: "pixel_cls/score_from_conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_34/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_34/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_34/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_34"
  op: "AssignSub"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_34/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_35/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_35/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_35/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_35/sub_1"
  op: "Sub"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/read"
  input: "pixel_cls/score_from_conv4_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_35/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_35/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_35/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_35"
  op: "AssignSub"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_35/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_36/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_36/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_36/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_36/sub_1"
  op: "Sub"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/read"
  input: "pixel_cls/score_from_conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_36/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_36/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_36/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_36"
  op: "AssignSub"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_36/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_37/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_37/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_37/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_37/sub_1"
  op: "Sub"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/read"
  input: "pixel_cls/score_from_conv3_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_37/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_37/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_37/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_37"
  op: "AssignSub"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_37/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_38/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_38/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_38/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_38/sub_1"
  op: "Sub"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage/read"
  input: "pixel_link/score_from_fc7/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_38/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_38/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_38/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_38"
  op: "AssignSub"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_38/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_39/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_39/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_39/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_39/sub_1"
  op: "Sub"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage/read"
  input: "pixel_link/score_from_fc7/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_39/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_39/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_39/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_39"
  op: "AssignSub"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_39/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_40/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_40/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_40/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_40/sub_1"
  op: "Sub"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/read"
  input: "pixel_link/score_from_conv5_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_40/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_40/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_40/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_40"
  op: "AssignSub"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_40/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_41/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_41/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_41/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_41/sub_1"
  op: "Sub"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/read"
  input: "pixel_link/score_from_conv5_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_41/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_41/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_41/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_41"
  op: "AssignSub"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_41/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_42/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_42/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_42/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_42/sub_1"
  op: "Sub"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/read"
  input: "pixel_link/score_from_conv4_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_42/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_42/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_42/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_42"
  op: "AssignSub"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_42/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_43/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_43/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_43/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_43/sub_1"
  op: "Sub"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/read"
  input: "pixel_link/score_from_conv4_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_43/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_43/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_43/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_43"
  op: "AssignSub"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_43/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_44/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_44/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_44/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_44/sub_1"
  op: "Sub"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/read"
  input: "pixel_link/score_from_conv3_3/weights/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_44/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_44/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_44/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_44"
  op: "AssignSub"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_44/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_45/sub/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_45/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_45/sub/x"
  input: "ExponentialMovingAverage/decay"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_45/sub_1"
  op: "Sub"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/read"
  input: "pixel_link/score_from_conv3_3/biases/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_45/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_45/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_45/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_45"
  op: "AssignSub"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_45/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage"
  op: "NoOp"
  input: "^ExponentialMovingAverage/AssignMovingAvg"
  input: "^ExponentialMovingAverage/AssignMovingAvg_1"
  input: "^ExponentialMovingAverage/AssignMovingAvg_10"
  input: "^ExponentialMovingAverage/AssignMovingAvg_11"
  input: "^ExponentialMovingAverage/AssignMovingAvg_12"
  input: "^ExponentialMovingAverage/AssignMovingAvg_13"
  input: "^ExponentialMovingAverage/AssignMovingAvg_14"
  input: "^ExponentialMovingAverage/AssignMovingAvg_15"
  input: "^ExponentialMovingAverage/AssignMovingAvg_16"
  input: "^ExponentialMovingAverage/AssignMovingAvg_17"
  input: "^ExponentialMovingAverage/AssignMovingAvg_18"
  input: "^ExponentialMovingAverage/AssignMovingAvg_19"
  input: "^ExponentialMovingAverage/AssignMovingAvg_2"
  input: "^ExponentialMovingAverage/AssignMovingAvg_20"
  input: "^ExponentialMovingAverage/AssignMovingAvg_21"
  input: "^ExponentialMovingAverage/AssignMovingAvg_22"
  input: "^ExponentialMovingAverage/AssignMovingAvg_23"
  input: "^ExponentialMovingAverage/AssignMovingAvg_24"
  input: "^ExponentialMovingAverage/AssignMovingAvg_25"
  input: "^ExponentialMovingAverage/AssignMovingAvg_26"
  input: "^ExponentialMovingAverage/AssignMovingAvg_27"
  input: "^ExponentialMovingAverage/AssignMovingAvg_28"
  input: "^ExponentialMovingAverage/AssignMovingAvg_29"
  input: "^ExponentialMovingAverage/AssignMovingAvg_3"
  input: "^ExponentialMovingAverage/AssignMovingAvg_30"
  input: "^ExponentialMovingAverage/AssignMovingAvg_31"
  input: "^ExponentialMovingAverage/AssignMovingAvg_32"
  input: "^ExponentialMovingAverage/AssignMovingAvg_33"
  input: "^ExponentialMovingAverage/AssignMovingAvg_34"
  input: "^ExponentialMovingAverage/AssignMovingAvg_35"
  input: "^ExponentialMovingAverage/AssignMovingAvg_36"
  input: "^ExponentialMovingAverage/AssignMovingAvg_37"
  input: "^ExponentialMovingAverage/AssignMovingAvg_38"
  input: "^ExponentialMovingAverage/AssignMovingAvg_39"
  input: "^ExponentialMovingAverage/AssignMovingAvg_4"
  input: "^ExponentialMovingAverage/AssignMovingAvg_40"
  input: "^ExponentialMovingAverage/AssignMovingAvg_41"
  input: "^ExponentialMovingAverage/AssignMovingAvg_42"
  input: "^ExponentialMovingAverage/AssignMovingAvg_43"
  input: "^ExponentialMovingAverage/AssignMovingAvg_44"
  input: "^ExponentialMovingAverage/AssignMovingAvg_45"
  input: "^ExponentialMovingAverage/AssignMovingAvg_5"
  input: "^ExponentialMovingAverage/AssignMovingAvg_6"
  input: "^ExponentialMovingAverage/AssignMovingAvg_7"
  input: "^ExponentialMovingAverage/AssignMovingAvg_8"
  input: "^ExponentialMovingAverage/AssignMovingAvg_9"
  device: "/device:GPU:0"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^ExponentialMovingAverage"
  input: "^Momentum"
  device: "/device:GPU:0"
}
node {
  name: "train_op"
  op: "Identity"
  input: "clone_0/add"
  input: "^Momentum"
  input: "^group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@clone_0/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "batch_size"
  input: "batch_size_per_gpu"
  input: "icdar2017_data_provider/parallel_read/filenames/fraction_of_32_full"
  input: "icdar2017_data_provider/parallel_read/fraction_of_10000_full"
  input: "ssd_preprocessing_train/image_shape_distorted"
  input: "ssd_preprocessing_train/image_color_distorted"
  input: "icdar2017_batch/batch/fraction_of_500_full"
  input: "icdar2017_prefetch_queue/prefetch_queue/fraction_of_50_full"
  input: "learning_rate_1"
  input: "clone_0/pixel_cls_loss_1"
  input: "clone_0/pixel_pos_link_loss"
  input: "clone_0/pixel_neg_link_loss"
  input: "pixel_link_loss"
  input: "regularization_loss"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 139
          }
        }
        string_val: "conv1/conv1_1/biases"
        string_val: "conv1/conv1_1/biases/ExponentialMovingAverage"
        string_val: "conv1/conv1_1/biases/Momentum"
        string_val: "conv1/conv1_1/weights"
        string_val: "conv1/conv1_1/weights/ExponentialMovingAverage"
        string_val: "conv1/conv1_1/weights/Momentum"
        string_val: "conv1/conv1_2/biases"
        string_val: "conv1/conv1_2/biases/ExponentialMovingAverage"
        string_val: "conv1/conv1_2/biases/Momentum"
        string_val: "conv1/conv1_2/weights"
        string_val: "conv1/conv1_2/weights/ExponentialMovingAverage"
        string_val: "conv1/conv1_2/weights/Momentum"
        string_val: "conv2/conv2_1/biases"
        string_val: "conv2/conv2_1/biases/ExponentialMovingAverage"
        string_val: "conv2/conv2_1/biases/Momentum"
        string_val: "conv2/conv2_1/weights"
        string_val: "conv2/conv2_1/weights/ExponentialMovingAverage"
        string_val: "conv2/conv2_1/weights/Momentum"
        string_val: "conv2/conv2_2/biases"
        string_val: "conv2/conv2_2/biases/ExponentialMovingAverage"
        string_val: "conv2/conv2_2/biases/Momentum"
        string_val: "conv2/conv2_2/weights"
        string_val: "conv2/conv2_2/weights/ExponentialMovingAverage"
        string_val: "conv2/conv2_2/weights/Momentum"
        string_val: "conv3/conv3_1/biases"
        string_val: "conv3/conv3_1/biases/ExponentialMovingAverage"
        string_val: "conv3/conv3_1/biases/Momentum"
        string_val: "conv3/conv3_1/weights"
        string_val: "conv3/conv3_1/weights/ExponentialMovingAverage"
        string_val: "conv3/conv3_1/weights/Momentum"
        string_val: "conv3/conv3_2/biases"
        string_val: "conv3/conv3_2/biases/ExponentialMovingAverage"
        string_val: "conv3/conv3_2/biases/Momentum"
        string_val: "conv3/conv3_2/weights"
        string_val: "conv3/conv3_2/weights/ExponentialMovingAverage"
        string_val: "conv3/conv3_2/weights/Momentum"
        string_val: "conv3/conv3_3/biases"
        string_val: "conv3/conv3_3/biases/ExponentialMovingAverage"
        string_val: "conv3/conv3_3/biases/Momentum"
        string_val: "conv3/conv3_3/weights"
        string_val: "conv3/conv3_3/weights/ExponentialMovingAverage"
        string_val: "conv3/conv3_3/weights/Momentum"
        string_val: "conv4/conv4_1/biases"
        string_val: "conv4/conv4_1/biases/ExponentialMovingAverage"
        string_val: "conv4/conv4_1/biases/Momentum"
        string_val: "conv4/conv4_1/weights"
        string_val: "conv4/conv4_1/weights/ExponentialMovingAverage"
        string_val: "conv4/conv4_1/weights/Momentum"
        string_val: "conv4/conv4_2/biases"
        string_val: "conv4/conv4_2/biases/ExponentialMovingAverage"
        string_val: "conv4/conv4_2/biases/Momentum"
        string_val: "conv4/conv4_2/weights"
        string_val: "conv4/conv4_2/weights/ExponentialMovingAverage"
        string_val: "conv4/conv4_2/weights/Momentum"
        string_val: "conv4/conv4_3/biases"
        string_val: "conv4/conv4_3/biases/ExponentialMovingAverage"
        string_val: "conv4/conv4_3/biases/Momentum"
        string_val: "conv4/conv4_3/weights"
        string_val: "conv4/conv4_3/weights/ExponentialMovingAverage"
        string_val: "conv4/conv4_3/weights/Momentum"
        string_val: "conv5/conv5_1/biases"
        string_val: "conv5/conv5_1/biases/ExponentialMovingAverage"
        string_val: "conv5/conv5_1/biases/Momentum"
        string_val: "conv5/conv5_1/weights"
        string_val: "conv5/conv5_1/weights/ExponentialMovingAverage"
        string_val: "conv5/conv5_1/weights/Momentum"
        string_val: "conv5/conv5_2/biases"
        string_val: "conv5/conv5_2/biases/ExponentialMovingAverage"
        string_val: "conv5/conv5_2/biases/Momentum"
        string_val: "conv5/conv5_2/weights"
        string_val: "conv5/conv5_2/weights/ExponentialMovingAverage"
        string_val: "conv5/conv5_2/weights/Momentum"
        string_val: "conv5/conv5_3/biases"
        string_val: "conv5/conv5_3/biases/ExponentialMovingAverage"
        string_val: "conv5/conv5_3/biases/Momentum"
        string_val: "conv5/conv5_3/weights"
        string_val: "conv5/conv5_3/weights/ExponentialMovingAverage"
        string_val: "conv5/conv5_3/weights/Momentum"
        string_val: "fc6/biases"
        string_val: "fc6/biases/ExponentialMovingAverage"
        string_val: "fc6/biases/Momentum"
        string_val: "fc6/weights"
        string_val: "fc6/weights/ExponentialMovingAverage"
        string_val: "fc6/weights/Momentum"
        string_val: "fc7/biases"
        string_val: "fc7/biases/ExponentialMovingAverage"
        string_val: "fc7/biases/Momentum"
        string_val: "fc7/weights"
        string_val: "fc7/weights/ExponentialMovingAverage"
        string_val: "fc7/weights/Momentum"
        string_val: "global_step"
        string_val: "pixel_cls/score_from_conv3_3/biases"
        string_val: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv3_3/biases/Momentum"
        string_val: "pixel_cls/score_from_conv3_3/weights"
        string_val: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv3_3/weights/Momentum"
        string_val: "pixel_cls/score_from_conv4_3/biases"
        string_val: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv4_3/biases/Momentum"
        string_val: "pixel_cls/score_from_conv4_3/weights"
        string_val: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv4_3/weights/Momentum"
        string_val: "pixel_cls/score_from_conv5_3/biases"
        string_val: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv5_3/biases/Momentum"
        string_val: "pixel_cls/score_from_conv5_3/weights"
        string_val: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv5_3/weights/Momentum"
        string_val: "pixel_cls/score_from_fc7/biases"
        string_val: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_fc7/biases/Momentum"
        string_val: "pixel_cls/score_from_fc7/weights"
        string_val: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_fc7/weights/Momentum"
        string_val: "pixel_link/score_from_conv3_3/biases"
        string_val: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv3_3/biases/Momentum"
        string_val: "pixel_link/score_from_conv3_3/weights"
        string_val: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv3_3/weights/Momentum"
        string_val: "pixel_link/score_from_conv4_3/biases"
        string_val: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv4_3/biases/Momentum"
        string_val: "pixel_link/score_from_conv4_3/weights"
        string_val: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv4_3/weights/Momentum"
        string_val: "pixel_link/score_from_conv5_3/biases"
        string_val: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv5_3/biases/Momentum"
        string_val: "pixel_link/score_from_conv5_3/weights"
        string_val: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv5_3/weights/Momentum"
        string_val: "pixel_link/score_from_fc7/biases"
        string_val: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_fc7/biases/Momentum"
        string_val: "pixel_link/score_from_fc7/weights"
        string_val: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_fc7/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 139
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "conv1/conv1_1/biases"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage"
  input: "conv1/conv1_1/biases/Momentum"
  input: "conv1/conv1_1/weights"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage"
  input: "conv1/conv1_1/weights/Momentum"
  input: "conv1/conv1_2/biases"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage"
  input: "conv1/conv1_2/biases/Momentum"
  input: "conv1/conv1_2/weights"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage"
  input: "conv1/conv1_2/weights/Momentum"
  input: "conv2/conv2_1/biases"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage"
  input: "conv2/conv2_1/biases/Momentum"
  input: "conv2/conv2_1/weights"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage"
  input: "conv2/conv2_1/weights/Momentum"
  input: "conv2/conv2_2/biases"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage"
  input: "conv2/conv2_2/biases/Momentum"
  input: "conv2/conv2_2/weights"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage"
  input: "conv2/conv2_2/weights/Momentum"
  input: "conv3/conv3_1/biases"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage"
  input: "conv3/conv3_1/biases/Momentum"
  input: "conv3/conv3_1/weights"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage"
  input: "conv3/conv3_1/weights/Momentum"
  input: "conv3/conv3_2/biases"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage"
  input: "conv3/conv3_2/biases/Momentum"
  input: "conv3/conv3_2/weights"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage"
  input: "conv3/conv3_2/weights/Momentum"
  input: "conv3/conv3_3/biases"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage"
  input: "conv3/conv3_3/biases/Momentum"
  input: "conv3/conv3_3/weights"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage"
  input: "conv3/conv3_3/weights/Momentum"
  input: "conv4/conv4_1/biases"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage"
  input: "conv4/conv4_1/biases/Momentum"
  input: "conv4/conv4_1/weights"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage"
  input: "conv4/conv4_1/weights/Momentum"
  input: "conv4/conv4_2/biases"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage"
  input: "conv4/conv4_2/biases/Momentum"
  input: "conv4/conv4_2/weights"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage"
  input: "conv4/conv4_2/weights/Momentum"
  input: "conv4/conv4_3/biases"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage"
  input: "conv4/conv4_3/biases/Momentum"
  input: "conv4/conv4_3/weights"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage"
  input: "conv4/conv4_3/weights/Momentum"
  input: "conv5/conv5_1/biases"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage"
  input: "conv5/conv5_1/biases/Momentum"
  input: "conv5/conv5_1/weights"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage"
  input: "conv5/conv5_1/weights/Momentum"
  input: "conv5/conv5_2/biases"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage"
  input: "conv5/conv5_2/biases/Momentum"
  input: "conv5/conv5_2/weights"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage"
  input: "conv5/conv5_2/weights/Momentum"
  input: "conv5/conv5_3/biases"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage"
  input: "conv5/conv5_3/biases/Momentum"
  input: "conv5/conv5_3/weights"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage"
  input: "conv5/conv5_3/weights/Momentum"
  input: "fc6/biases"
  input: "fc6/biases/ExponentialMovingAverage"
  input: "fc6/biases/Momentum"
  input: "fc6/weights"
  input: "fc6/weights/ExponentialMovingAverage"
  input: "fc6/weights/Momentum"
  input: "fc7/biases"
  input: "fc7/biases/ExponentialMovingAverage"
  input: "fc7/biases/Momentum"
  input: "fc7/weights"
  input: "fc7/weights/ExponentialMovingAverage"
  input: "fc7/weights/Momentum"
  input: "global_step"
  input: "pixel_cls/score_from_conv3_3/biases"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv3_3/biases/Momentum"
  input: "pixel_cls/score_from_conv3_3/weights"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv3_3/weights/Momentum"
  input: "pixel_cls/score_from_conv4_3/biases"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv4_3/biases/Momentum"
  input: "pixel_cls/score_from_conv4_3/weights"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv4_3/weights/Momentum"
  input: "pixel_cls/score_from_conv5_3/biases"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv5_3/biases/Momentum"
  input: "pixel_cls/score_from_conv5_3/weights"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage"
  input: "pixel_cls/score_from_conv5_3/weights/Momentum"
  input: "pixel_cls/score_from_fc7/biases"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage"
  input: "pixel_cls/score_from_fc7/biases/Momentum"
  input: "pixel_cls/score_from_fc7/weights"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage"
  input: "pixel_cls/score_from_fc7/weights/Momentum"
  input: "pixel_link/score_from_conv3_3/biases"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv3_3/biases/Momentum"
  input: "pixel_link/score_from_conv3_3/weights"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv3_3/weights/Momentum"
  input: "pixel_link/score_from_conv4_3/biases"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv4_3/biases/Momentum"
  input: "pixel_link/score_from_conv4_3/weights"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv4_3/weights/Momentum"
  input: "pixel_link/score_from_conv5_3/biases"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv5_3/biases/Momentum"
  input: "pixel_link/score_from_conv5_3/weights"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage"
  input: "pixel_link/score_from_conv5_3/weights/Momentum"
  input: "pixel_link/score_from_fc7/biases"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage"
  input: "pixel_link/score_from_fc7/biases/Momentum"
  input: "pixel_link/score_from_fc7/weights"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage"
  input: "pixel_link/score_from_fc7/weights/Momentum"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 139
          }
        }
        string_val: "conv1/conv1_1/biases"
        string_val: "conv1/conv1_1/biases/ExponentialMovingAverage"
        string_val: "conv1/conv1_1/biases/Momentum"
        string_val: "conv1/conv1_1/weights"
        string_val: "conv1/conv1_1/weights/ExponentialMovingAverage"
        string_val: "conv1/conv1_1/weights/Momentum"
        string_val: "conv1/conv1_2/biases"
        string_val: "conv1/conv1_2/biases/ExponentialMovingAverage"
        string_val: "conv1/conv1_2/biases/Momentum"
        string_val: "conv1/conv1_2/weights"
        string_val: "conv1/conv1_2/weights/ExponentialMovingAverage"
        string_val: "conv1/conv1_2/weights/Momentum"
        string_val: "conv2/conv2_1/biases"
        string_val: "conv2/conv2_1/biases/ExponentialMovingAverage"
        string_val: "conv2/conv2_1/biases/Momentum"
        string_val: "conv2/conv2_1/weights"
        string_val: "conv2/conv2_1/weights/ExponentialMovingAverage"
        string_val: "conv2/conv2_1/weights/Momentum"
        string_val: "conv2/conv2_2/biases"
        string_val: "conv2/conv2_2/biases/ExponentialMovingAverage"
        string_val: "conv2/conv2_2/biases/Momentum"
        string_val: "conv2/conv2_2/weights"
        string_val: "conv2/conv2_2/weights/ExponentialMovingAverage"
        string_val: "conv2/conv2_2/weights/Momentum"
        string_val: "conv3/conv3_1/biases"
        string_val: "conv3/conv3_1/biases/ExponentialMovingAverage"
        string_val: "conv3/conv3_1/biases/Momentum"
        string_val: "conv3/conv3_1/weights"
        string_val: "conv3/conv3_1/weights/ExponentialMovingAverage"
        string_val: "conv3/conv3_1/weights/Momentum"
        string_val: "conv3/conv3_2/biases"
        string_val: "conv3/conv3_2/biases/ExponentialMovingAverage"
        string_val: "conv3/conv3_2/biases/Momentum"
        string_val: "conv3/conv3_2/weights"
        string_val: "conv3/conv3_2/weights/ExponentialMovingAverage"
        string_val: "conv3/conv3_2/weights/Momentum"
        string_val: "conv3/conv3_3/biases"
        string_val: "conv3/conv3_3/biases/ExponentialMovingAverage"
        string_val: "conv3/conv3_3/biases/Momentum"
        string_val: "conv3/conv3_3/weights"
        string_val: "conv3/conv3_3/weights/ExponentialMovingAverage"
        string_val: "conv3/conv3_3/weights/Momentum"
        string_val: "conv4/conv4_1/biases"
        string_val: "conv4/conv4_1/biases/ExponentialMovingAverage"
        string_val: "conv4/conv4_1/biases/Momentum"
        string_val: "conv4/conv4_1/weights"
        string_val: "conv4/conv4_1/weights/ExponentialMovingAverage"
        string_val: "conv4/conv4_1/weights/Momentum"
        string_val: "conv4/conv4_2/biases"
        string_val: "conv4/conv4_2/biases/ExponentialMovingAverage"
        string_val: "conv4/conv4_2/biases/Momentum"
        string_val: "conv4/conv4_2/weights"
        string_val: "conv4/conv4_2/weights/ExponentialMovingAverage"
        string_val: "conv4/conv4_2/weights/Momentum"
        string_val: "conv4/conv4_3/biases"
        string_val: "conv4/conv4_3/biases/ExponentialMovingAverage"
        string_val: "conv4/conv4_3/biases/Momentum"
        string_val: "conv4/conv4_3/weights"
        string_val: "conv4/conv4_3/weights/ExponentialMovingAverage"
        string_val: "conv4/conv4_3/weights/Momentum"
        string_val: "conv5/conv5_1/biases"
        string_val: "conv5/conv5_1/biases/ExponentialMovingAverage"
        string_val: "conv5/conv5_1/biases/Momentum"
        string_val: "conv5/conv5_1/weights"
        string_val: "conv5/conv5_1/weights/ExponentialMovingAverage"
        string_val: "conv5/conv5_1/weights/Momentum"
        string_val: "conv5/conv5_2/biases"
        string_val: "conv5/conv5_2/biases/ExponentialMovingAverage"
        string_val: "conv5/conv5_2/biases/Momentum"
        string_val: "conv5/conv5_2/weights"
        string_val: "conv5/conv5_2/weights/ExponentialMovingAverage"
        string_val: "conv5/conv5_2/weights/Momentum"
        string_val: "conv5/conv5_3/biases"
        string_val: "conv5/conv5_3/biases/ExponentialMovingAverage"
        string_val: "conv5/conv5_3/biases/Momentum"
        string_val: "conv5/conv5_3/weights"
        string_val: "conv5/conv5_3/weights/ExponentialMovingAverage"
        string_val: "conv5/conv5_3/weights/Momentum"
        string_val: "fc6/biases"
        string_val: "fc6/biases/ExponentialMovingAverage"
        string_val: "fc6/biases/Momentum"
        string_val: "fc6/weights"
        string_val: "fc6/weights/ExponentialMovingAverage"
        string_val: "fc6/weights/Momentum"
        string_val: "fc7/biases"
        string_val: "fc7/biases/ExponentialMovingAverage"
        string_val: "fc7/biases/Momentum"
        string_val: "fc7/weights"
        string_val: "fc7/weights/ExponentialMovingAverage"
        string_val: "fc7/weights/Momentum"
        string_val: "global_step"
        string_val: "pixel_cls/score_from_conv3_3/biases"
        string_val: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv3_3/biases/Momentum"
        string_val: "pixel_cls/score_from_conv3_3/weights"
        string_val: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv3_3/weights/Momentum"
        string_val: "pixel_cls/score_from_conv4_3/biases"
        string_val: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv4_3/biases/Momentum"
        string_val: "pixel_cls/score_from_conv4_3/weights"
        string_val: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv4_3/weights/Momentum"
        string_val: "pixel_cls/score_from_conv5_3/biases"
        string_val: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv5_3/biases/Momentum"
        string_val: "pixel_cls/score_from_conv5_3/weights"
        string_val: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv5_3/weights/Momentum"
        string_val: "pixel_cls/score_from_fc7/biases"
        string_val: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_fc7/biases/Momentum"
        string_val: "pixel_cls/score_from_fc7/weights"
        string_val: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_fc7/weights/Momentum"
        string_val: "pixel_link/score_from_conv3_3/biases"
        string_val: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv3_3/biases/Momentum"
        string_val: "pixel_link/score_from_conv3_3/weights"
        string_val: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv3_3/weights/Momentum"
        string_val: "pixel_link/score_from_conv4_3/biases"
        string_val: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv4_3/biases/Momentum"
        string_val: "pixel_link/score_from_conv4_3/weights"
        string_val: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv4_3/weights/Momentum"
        string_val: "pixel_link/score_from_conv5_3/biases"
        string_val: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv5_3/biases/Momentum"
        string_val: "pixel_link/score_from_conv5_3/weights"
        string_val: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv5_3/weights/Momentum"
        string_val: "pixel_link/score_from_fc7/biases"
        string_val: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_fc7/biases/Momentum"
        string_val: "pixel_link/score_from_fc7/weights"
        string_val: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_fc7/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 139
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "conv1/conv1_1/biases"
  input: "save/RestoreV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv1/conv1_1/biases/Momentum"
  input: "save/RestoreV2:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv1/conv1_1/weights"
  input: "save/RestoreV2:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv1/conv1_1/weights/Momentum"
  input: "save/RestoreV2:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv1/conv1_2/biases"
  input: "save/RestoreV2:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "conv1/conv1_2/biases/Momentum"
  input: "save/RestoreV2:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "conv1/conv1_2/weights"
  input: "save/RestoreV2:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "conv1/conv1_2/weights/Momentum"
  input: "save/RestoreV2:11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "conv2/conv2_1/biases"
  input: "save/RestoreV2:12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "conv2/conv2_1/biases/Momentum"
  input: "save/RestoreV2:14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "conv2/conv2_1/weights"
  input: "save/RestoreV2:15"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "conv2/conv2_1/weights/Momentum"
  input: "save/RestoreV2:17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "conv2/conv2_2/biases"
  input: "save/RestoreV2:18"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:19"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "conv2/conv2_2/biases/Momentum"
  input: "save/RestoreV2:20"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "conv2/conv2_2/weights"
  input: "save/RestoreV2:21"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:22"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "conv2/conv2_2/weights/Momentum"
  input: "save/RestoreV2:23"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "conv3/conv3_1/biases"
  input: "save/RestoreV2:24"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:25"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "conv3/conv3_1/biases/Momentum"
  input: "save/RestoreV2:26"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "conv3/conv3_1/weights"
  input: "save/RestoreV2:27"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:28"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "conv3/conv3_1/weights/Momentum"
  input: "save/RestoreV2:29"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "conv3/conv3_2/biases"
  input: "save/RestoreV2:30"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:31"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "conv3/conv3_2/biases/Momentum"
  input: "save/RestoreV2:32"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "conv3/conv3_2/weights"
  input: "save/RestoreV2:33"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:34"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "conv3/conv3_2/weights/Momentum"
  input: "save/RestoreV2:35"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "conv3/conv3_3/biases"
  input: "save/RestoreV2:36"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:37"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "conv3/conv3_3/biases/Momentum"
  input: "save/RestoreV2:38"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "conv3/conv3_3/weights"
  input: "save/RestoreV2:39"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:40"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "conv3/conv3_3/weights/Momentum"
  input: "save/RestoreV2:41"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "conv4/conv4_1/biases"
  input: "save/RestoreV2:42"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:43"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "conv4/conv4_1/biases/Momentum"
  input: "save/RestoreV2:44"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "conv4/conv4_1/weights"
  input: "save/RestoreV2:45"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:46"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "conv4/conv4_1/weights/Momentum"
  input: "save/RestoreV2:47"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "conv4/conv4_2/biases"
  input: "save/RestoreV2:48"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:49"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "conv4/conv4_2/biases/Momentum"
  input: "save/RestoreV2:50"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "conv4/conv4_2/weights"
  input: "save/RestoreV2:51"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:52"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "conv4/conv4_2/weights/Momentum"
  input: "save/RestoreV2:53"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "conv4/conv4_3/biases"
  input: "save/RestoreV2:54"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:55"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "conv4/conv4_3/biases/Momentum"
  input: "save/RestoreV2:56"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "conv4/conv4_3/weights"
  input: "save/RestoreV2:57"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:58"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "conv4/conv4_3/weights/Momentum"
  input: "save/RestoreV2:59"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "conv5/conv5_1/biases"
  input: "save/RestoreV2:60"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:61"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "conv5/conv5_1/biases/Momentum"
  input: "save/RestoreV2:62"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "conv5/conv5_1/weights"
  input: "save/RestoreV2:63"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:64"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "conv5/conv5_1/weights/Momentum"
  input: "save/RestoreV2:65"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "conv5/conv5_2/biases"
  input: "save/RestoreV2:66"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:67"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "conv5/conv5_2/biases/Momentum"
  input: "save/RestoreV2:68"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "conv5/conv5_2/weights"
  input: "save/RestoreV2:69"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:70"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "conv5/conv5_2/weights/Momentum"
  input: "save/RestoreV2:71"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "conv5/conv5_3/biases"
  input: "save/RestoreV2:72"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:73"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "conv5/conv5_3/biases/Momentum"
  input: "save/RestoreV2:74"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "conv5/conv5_3/weights"
  input: "save/RestoreV2:75"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:76"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "conv5/conv5_3/weights/Momentum"
  input: "save/RestoreV2:77"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "fc6/biases"
  input: "save/RestoreV2:78"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "fc6/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:79"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "fc6/biases/Momentum"
  input: "save/RestoreV2:80"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "fc6/weights"
  input: "save/RestoreV2:81"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "fc6/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:82"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "fc6/weights/Momentum"
  input: "save/RestoreV2:83"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "fc7/biases"
  input: "save/RestoreV2:84"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "fc7/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:85"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "fc7/biases/Momentum"
  input: "save/RestoreV2:86"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "fc7/weights"
  input: "save/RestoreV2:87"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "fc7/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:88"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "fc7/weights/Momentum"
  input: "save/RestoreV2:89"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:90"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/biases"
  input: "save/RestoreV2:91"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:92"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/biases/Momentum"
  input: "save/RestoreV2:93"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/weights"
  input: "save/RestoreV2:94"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:95"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "pixel_cls/score_from_conv3_3/weights/Momentum"
  input: "save/RestoreV2:96"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/biases"
  input: "save/RestoreV2:97"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:98"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/biases/Momentum"
  input: "save/RestoreV2:99"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/weights"
  input: "save/RestoreV2:100"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:101"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "pixel_cls/score_from_conv4_3/weights/Momentum"
  input: "save/RestoreV2:102"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/biases"
  input: "save/RestoreV2:103"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:104"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/biases/Momentum"
  input: "save/RestoreV2:105"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/weights"
  input: "save/RestoreV2:106"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:107"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "pixel_cls/score_from_conv5_3/weights/Momentum"
  input: "save/RestoreV2:108"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/biases"
  input: "save/RestoreV2:109"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:110"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/biases/Momentum"
  input: "save/RestoreV2:111"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/weights"
  input: "save/RestoreV2:112"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:113"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "pixel_cls/score_from_fc7/weights/Momentum"
  input: "save/RestoreV2:114"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/biases"
  input: "save/RestoreV2:115"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:116"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/biases/Momentum"
  input: "save/RestoreV2:117"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/weights"
  input: "save/RestoreV2:118"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:119"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "pixel_link/score_from_conv3_3/weights/Momentum"
  input: "save/RestoreV2:120"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/biases"
  input: "save/RestoreV2:121"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:122"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/biases/Momentum"
  input: "save/RestoreV2:123"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/weights"
  input: "save/RestoreV2:124"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:125"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "pixel_link/score_from_conv4_3/weights/Momentum"
  input: "save/RestoreV2:126"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/biases"
  input: "save/RestoreV2:127"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:128"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/biases/Momentum"
  input: "save/RestoreV2:129"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/weights"
  input: "save/RestoreV2:130"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:131"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "pixel_link/score_from_conv5_3/weights/Momentum"
  input: "save/RestoreV2:132"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "pixel_link/score_from_fc7/biases"
  input: "save/RestoreV2:133"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage"
  input: "save/RestoreV2:134"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "pixel_link/score_from_fc7/biases/Momentum"
  input: "save/RestoreV2:135"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "pixel_link/score_from_fc7/weights"
  input: "save/RestoreV2:136"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage"
  input: "save/RestoreV2:137"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "pixel_link/score_from_fc7/weights/Momentum"
  input: "save/RestoreV2:138"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/Assign_90"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  device: "/device:GPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
node {
  name: "init_ops/init/NoOp"
  op: "NoOp"
  input: "^global_step/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init_ops/init/NoOp_1"
  op: "NoOp"
  input: "^conv1/conv1_1/biases/Assign"
  input: "^conv1/conv1_1/biases/ExponentialMovingAverage/Assign"
  input: "^conv1/conv1_1/biases/Momentum/Assign"
  input: "^conv1/conv1_1/weights/Assign"
  input: "^conv1/conv1_1/weights/ExponentialMovingAverage/Assign"
  input: "^conv1/conv1_1/weights/Momentum/Assign"
  input: "^conv1/conv1_2/biases/Assign"
  input: "^conv1/conv1_2/biases/ExponentialMovingAverage/Assign"
  input: "^conv1/conv1_2/biases/Momentum/Assign"
  input: "^conv1/conv1_2/weights/Assign"
  input: "^conv1/conv1_2/weights/ExponentialMovingAverage/Assign"
  input: "^conv1/conv1_2/weights/Momentum/Assign"
  input: "^conv2/conv2_1/biases/Assign"
  input: "^conv2/conv2_1/biases/ExponentialMovingAverage/Assign"
  input: "^conv2/conv2_1/biases/Momentum/Assign"
  input: "^conv2/conv2_1/weights/Assign"
  input: "^conv2/conv2_1/weights/ExponentialMovingAverage/Assign"
  input: "^conv2/conv2_1/weights/Momentum/Assign"
  input: "^conv2/conv2_2/biases/Assign"
  input: "^conv2/conv2_2/biases/ExponentialMovingAverage/Assign"
  input: "^conv2/conv2_2/biases/Momentum/Assign"
  input: "^conv2/conv2_2/weights/Assign"
  input: "^conv2/conv2_2/weights/ExponentialMovingAverage/Assign"
  input: "^conv2/conv2_2/weights/Momentum/Assign"
  input: "^conv3/conv3_1/biases/Assign"
  input: "^conv3/conv3_1/biases/ExponentialMovingAverage/Assign"
  input: "^conv3/conv3_1/biases/Momentum/Assign"
  input: "^conv3/conv3_1/weights/Assign"
  input: "^conv3/conv3_1/weights/ExponentialMovingAverage/Assign"
  input: "^conv3/conv3_1/weights/Momentum/Assign"
  input: "^conv3/conv3_2/biases/Assign"
  input: "^conv3/conv3_2/biases/ExponentialMovingAverage/Assign"
  input: "^conv3/conv3_2/biases/Momentum/Assign"
  input: "^conv3/conv3_2/weights/Assign"
  input: "^conv3/conv3_2/weights/ExponentialMovingAverage/Assign"
  input: "^conv3/conv3_2/weights/Momentum/Assign"
  input: "^conv3/conv3_3/biases/Assign"
  input: "^conv3/conv3_3/biases/ExponentialMovingAverage/Assign"
  input: "^conv3/conv3_3/biases/Momentum/Assign"
  input: "^conv3/conv3_3/weights/Assign"
  input: "^conv3/conv3_3/weights/ExponentialMovingAverage/Assign"
  input: "^conv3/conv3_3/weights/Momentum/Assign"
  input: "^conv4/conv4_1/biases/Assign"
  input: "^conv4/conv4_1/biases/ExponentialMovingAverage/Assign"
  input: "^conv4/conv4_1/biases/Momentum/Assign"
  input: "^conv4/conv4_1/weights/Assign"
  input: "^conv4/conv4_1/weights/ExponentialMovingAverage/Assign"
  input: "^conv4/conv4_1/weights/Momentum/Assign"
  input: "^conv4/conv4_2/biases/Assign"
  input: "^conv4/conv4_2/biases/ExponentialMovingAverage/Assign"
  input: "^conv4/conv4_2/biases/Momentum/Assign"
  input: "^conv4/conv4_2/weights/Assign"
  input: "^conv4/conv4_2/weights/ExponentialMovingAverage/Assign"
  input: "^conv4/conv4_2/weights/Momentum/Assign"
  input: "^conv4/conv4_3/biases/Assign"
  input: "^conv4/conv4_3/biases/ExponentialMovingAverage/Assign"
  input: "^conv4/conv4_3/biases/Momentum/Assign"
  input: "^conv4/conv4_3/weights/Assign"
  input: "^conv4/conv4_3/weights/ExponentialMovingAverage/Assign"
  input: "^conv4/conv4_3/weights/Momentum/Assign"
  input: "^conv5/conv5_1/biases/Assign"
  input: "^conv5/conv5_1/biases/ExponentialMovingAverage/Assign"
  input: "^conv5/conv5_1/biases/Momentum/Assign"
  input: "^conv5/conv5_1/weights/Assign"
  input: "^conv5/conv5_1/weights/ExponentialMovingAverage/Assign"
  input: "^conv5/conv5_1/weights/Momentum/Assign"
  input: "^conv5/conv5_2/biases/Assign"
  input: "^conv5/conv5_2/biases/ExponentialMovingAverage/Assign"
  input: "^conv5/conv5_2/biases/Momentum/Assign"
  input: "^conv5/conv5_2/weights/Assign"
  input: "^conv5/conv5_2/weights/ExponentialMovingAverage/Assign"
  input: "^conv5/conv5_2/weights/Momentum/Assign"
  input: "^conv5/conv5_3/biases/Assign"
  input: "^conv5/conv5_3/biases/ExponentialMovingAverage/Assign"
  input: "^conv5/conv5_3/biases/Momentum/Assign"
  input: "^conv5/conv5_3/weights/Assign"
  input: "^conv5/conv5_3/weights/ExponentialMovingAverage/Assign"
  input: "^conv5/conv5_3/weights/Momentum/Assign"
  input: "^fc6/biases/Assign"
  input: "^fc6/biases/ExponentialMovingAverage/Assign"
  input: "^fc6/biases/Momentum/Assign"
  input: "^fc6/weights/Assign"
  input: "^fc6/weights/ExponentialMovingAverage/Assign"
  input: "^fc6/weights/Momentum/Assign"
  input: "^fc7/biases/Assign"
  input: "^fc7/biases/ExponentialMovingAverage/Assign"
  input: "^fc7/biases/Momentum/Assign"
  input: "^fc7/weights/Assign"
  input: "^fc7/weights/ExponentialMovingAverage/Assign"
  input: "^fc7/weights/Momentum/Assign"
  input: "^pixel_cls/score_from_conv3_3/biases/Assign"
  input: "^pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage/Assign"
  input: "^pixel_cls/score_from_conv3_3/biases/Momentum/Assign"
  input: "^pixel_cls/score_from_conv3_3/weights/Assign"
  input: "^pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage/Assign"
  input: "^pixel_cls/score_from_conv3_3/weights/Momentum/Assign"
  input: "^pixel_cls/score_from_conv4_3/biases/Assign"
  input: "^pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage/Assign"
  input: "^pixel_cls/score_from_conv4_3/biases/Momentum/Assign"
  input: "^pixel_cls/score_from_conv4_3/weights/Assign"
  input: "^pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage/Assign"
  input: "^pixel_cls/score_from_conv4_3/weights/Momentum/Assign"
  input: "^pixel_cls/score_from_conv5_3/biases/Assign"
  input: "^pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage/Assign"
  input: "^pixel_cls/score_from_conv5_3/biases/Momentum/Assign"
  input: "^pixel_cls/score_from_conv5_3/weights/Assign"
  input: "^pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage/Assign"
  input: "^pixel_cls/score_from_conv5_3/weights/Momentum/Assign"
  input: "^pixel_cls/score_from_fc7/biases/Assign"
  input: "^pixel_cls/score_from_fc7/biases/ExponentialMovingAverage/Assign"
  input: "^pixel_cls/score_from_fc7/biases/Momentum/Assign"
  input: "^pixel_cls/score_from_fc7/weights/Assign"
  input: "^pixel_cls/score_from_fc7/weights/ExponentialMovingAverage/Assign"
  input: "^pixel_cls/score_from_fc7/weights/Momentum/Assign"
  input: "^pixel_link/score_from_conv3_3/biases/Assign"
  input: "^pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage/Assign"
  input: "^pixel_link/score_from_conv3_3/biases/Momentum/Assign"
  input: "^pixel_link/score_from_conv3_3/weights/Assign"
  input: "^pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage/Assign"
  input: "^pixel_link/score_from_conv3_3/weights/Momentum/Assign"
  input: "^pixel_link/score_from_conv4_3/biases/Assign"
  input: "^pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage/Assign"
  input: "^pixel_link/score_from_conv4_3/biases/Momentum/Assign"
  input: "^pixel_link/score_from_conv4_3/weights/Assign"
  input: "^pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage/Assign"
  input: "^pixel_link/score_from_conv4_3/weights/Momentum/Assign"
  input: "^pixel_link/score_from_conv5_3/biases/Assign"
  input: "^pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage/Assign"
  input: "^pixel_link/score_from_conv5_3/biases/Momentum/Assign"
  input: "^pixel_link/score_from_conv5_3/weights/Assign"
  input: "^pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage/Assign"
  input: "^pixel_link/score_from_conv5_3/weights/Momentum/Assign"
  input: "^pixel_link/score_from_fc7/biases/Assign"
  input: "^pixel_link/score_from_fc7/biases/ExponentialMovingAverage/Assign"
  input: "^pixel_link/score_from_fc7/biases/Momentum/Assign"
  input: "^pixel_link/score_from_fc7/weights/Assign"
  input: "^pixel_link/score_from_fc7/weights/ExponentialMovingAverage/Assign"
  input: "^pixel_link/score_from_fc7/weights/Momentum/Assign"
  device: "/device:GPU:0"
}
node {
  name: "init_ops/init"
  op: "NoOp"
  input: "^init_ops/init/NoOp"
  input: "^init_ops/init/NoOp_1"
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1/conv1_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1/conv1_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv1/conv1_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv1/conv1_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv2/conv2_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv2/conv2_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "conv2/conv2_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "conv2/conv2_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "conv3/conv3_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "conv3/conv3_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "conv3/conv3_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "conv3/conv3_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "conv3/conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "conv3/conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv4/conv4_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv4/conv4_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv4/conv4_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "conv4/conv4_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "conv4/conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "conv4/conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv5/conv5_1/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv5/conv5_1/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "conv5/conv5_2/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "conv5/conv5_2/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "conv5/conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "conv5/conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "fc6/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "fc6/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_fc7/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_fc7/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/weights"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/biases"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv1/conv1_1/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "conv1/conv1_1/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "conv1/conv1_2/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "conv1/conv1_2/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "conv2/conv2_1/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv2/conv2_1/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "conv2/conv2_2/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "conv2/conv2_2/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "conv3/conv3_1/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "conv3/conv3_1/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv3/conv3_2/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv3/conv3_2/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "conv3/conv3_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "conv3/conv3_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "conv4/conv4_1/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "conv4/conv4_1/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "conv4/conv4_2/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "conv4/conv4_2/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "conv4/conv4_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "conv4/conv4_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "conv5/conv5_1/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "conv5/conv5_1/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "conv5/conv5_2/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "conv5/conv5_2/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "conv5/conv5_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "conv5/conv5_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "fc6/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "fc6/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "fc7/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "fc7/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_fc7/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_fc7/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/weights/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/biases/Momentum"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "conv1/conv1_1/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "conv1/conv1_1/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "conv1/conv1_2/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "conv1/conv1_2/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/conv1_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "conv2/conv2_1/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "conv2/conv2_1/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "conv2/conv2_2/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "conv2/conv2_2/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/conv2_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "conv3/conv3_1/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "conv3/conv3_1/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "conv3/conv3_2/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "conv3/conv3_2/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "conv3/conv3_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "conv3/conv3_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "conv4/conv4_1/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "conv4/conv4_1/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "conv4/conv4_2/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "conv4/conv4_2/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "conv4/conv4_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "conv4/conv4_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "conv5/conv5_1/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "conv5/conv5_1/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "conv5/conv5_2/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "conv5/conv5_2/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "conv5/conv5_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "conv5/conv5_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "fc6/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "fc6/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "fc7/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "fc7/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_cls/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_fc7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv5_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv4_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pixel_link/score_from_conv3_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "count_warning"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_warning"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/stack"
  op: "Pack"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_1"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_2"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_3"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_4"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_5"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_6"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_7"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_8"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_9"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_10"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_11"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_12"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_13"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_14"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_15"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_16"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_17"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_18"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_19"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_20"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_21"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_22"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_23"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_24"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_25"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_26"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_27"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_28"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_29"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_30"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_31"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_32"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_33"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_34"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_35"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_36"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_37"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_38"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_39"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_40"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_41"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_42"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_43"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_44"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_45"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_46"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_47"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_48"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_49"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_50"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_51"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_52"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_53"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_54"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_55"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_56"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_57"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_58"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_59"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_60"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_61"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_62"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_63"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_64"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_65"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_66"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_67"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_68"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_69"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_70"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_71"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_72"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_73"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_74"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_75"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_76"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_77"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_78"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_79"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_80"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_81"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_82"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_83"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_84"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_85"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_86"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_87"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_88"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_89"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_90"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_91"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_92"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_93"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_94"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_95"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_96"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_97"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_98"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_99"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_100"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_101"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_102"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_103"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_104"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_105"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_106"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_107"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_108"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_109"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_110"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_111"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_112"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_113"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_114"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_115"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_116"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_117"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_118"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_119"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_120"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_121"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_122"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_123"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_124"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_125"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_126"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_127"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_128"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_129"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_130"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_131"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_132"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_133"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_134"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_135"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_136"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_137"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_138"
  input: "init_ops/report_uninitialized_variables/IsVariableInitialized_139"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 140
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 140
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "init_ops/report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 140
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 140
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 140
          }
        }
        string_val: "global_step"
        string_val: "conv1/conv1_1/weights"
        string_val: "conv1/conv1_1/biases"
        string_val: "conv1/conv1_2/weights"
        string_val: "conv1/conv1_2/biases"
        string_val: "conv2/conv2_1/weights"
        string_val: "conv2/conv2_1/biases"
        string_val: "conv2/conv2_2/weights"
        string_val: "conv2/conv2_2/biases"
        string_val: "conv3/conv3_1/weights"
        string_val: "conv3/conv3_1/biases"
        string_val: "conv3/conv3_2/weights"
        string_val: "conv3/conv3_2/biases"
        string_val: "conv3/conv3_3/weights"
        string_val: "conv3/conv3_3/biases"
        string_val: "conv4/conv4_1/weights"
        string_val: "conv4/conv4_1/biases"
        string_val: "conv4/conv4_2/weights"
        string_val: "conv4/conv4_2/biases"
        string_val: "conv4/conv4_3/weights"
        string_val: "conv4/conv4_3/biases"
        string_val: "conv5/conv5_1/weights"
        string_val: "conv5/conv5_1/biases"
        string_val: "conv5/conv5_2/weights"
        string_val: "conv5/conv5_2/biases"
        string_val: "conv5/conv5_3/weights"
        string_val: "conv5/conv5_3/biases"
        string_val: "fc6/weights"
        string_val: "fc6/biases"
        string_val: "fc7/weights"
        string_val: "fc7/biases"
        string_val: "pixel_cls/score_from_fc7/weights"
        string_val: "pixel_cls/score_from_fc7/biases"
        string_val: "pixel_cls/score_from_conv5_3/weights"
        string_val: "pixel_cls/score_from_conv5_3/biases"
        string_val: "pixel_cls/score_from_conv4_3/weights"
        string_val: "pixel_cls/score_from_conv4_3/biases"
        string_val: "pixel_cls/score_from_conv3_3/weights"
        string_val: "pixel_cls/score_from_conv3_3/biases"
        string_val: "pixel_link/score_from_fc7/weights"
        string_val: "pixel_link/score_from_fc7/biases"
        string_val: "pixel_link/score_from_conv5_3/weights"
        string_val: "pixel_link/score_from_conv5_3/biases"
        string_val: "pixel_link/score_from_conv4_3/weights"
        string_val: "pixel_link/score_from_conv4_3/biases"
        string_val: "pixel_link/score_from_conv3_3/weights"
        string_val: "pixel_link/score_from_conv3_3/biases"
        string_val: "conv1/conv1_1/weights/Momentum"
        string_val: "conv1/conv1_1/biases/Momentum"
        string_val: "conv1/conv1_2/weights/Momentum"
        string_val: "conv1/conv1_2/biases/Momentum"
        string_val: "conv2/conv2_1/weights/Momentum"
        string_val: "conv2/conv2_1/biases/Momentum"
        string_val: "conv2/conv2_2/weights/Momentum"
        string_val: "conv2/conv2_2/biases/Momentum"
        string_val: "conv3/conv3_1/weights/Momentum"
        string_val: "conv3/conv3_1/biases/Momentum"
        string_val: "conv3/conv3_2/weights/Momentum"
        string_val: "conv3/conv3_2/biases/Momentum"
        string_val: "conv3/conv3_3/weights/Momentum"
        string_val: "conv3/conv3_3/biases/Momentum"
        string_val: "conv4/conv4_1/weights/Momentum"
        string_val: "conv4/conv4_1/biases/Momentum"
        string_val: "conv4/conv4_2/weights/Momentum"
        string_val: "conv4/conv4_2/biases/Momentum"
        string_val: "conv4/conv4_3/weights/Momentum"
        string_val: "conv4/conv4_3/biases/Momentum"
        string_val: "conv5/conv5_1/weights/Momentum"
        string_val: "conv5/conv5_1/biases/Momentum"
        string_val: "conv5/conv5_2/weights/Momentum"
        string_val: "conv5/conv5_2/biases/Momentum"
        string_val: "conv5/conv5_3/weights/Momentum"
        string_val: "conv5/conv5_3/biases/Momentum"
        string_val: "fc6/weights/Momentum"
        string_val: "fc6/biases/Momentum"
        string_val: "fc7/weights/Momentum"
        string_val: "fc7/biases/Momentum"
        string_val: "pixel_cls/score_from_fc7/weights/Momentum"
        string_val: "pixel_cls/score_from_fc7/biases/Momentum"
        string_val: "pixel_cls/score_from_conv5_3/weights/Momentum"
        string_val: "pixel_cls/score_from_conv5_3/biases/Momentum"
        string_val: "pixel_cls/score_from_conv4_3/weights/Momentum"
        string_val: "pixel_cls/score_from_conv4_3/biases/Momentum"
        string_val: "pixel_cls/score_from_conv3_3/weights/Momentum"
        string_val: "pixel_cls/score_from_conv3_3/biases/Momentum"
        string_val: "pixel_link/score_from_fc7/weights/Momentum"
        string_val: "pixel_link/score_from_fc7/biases/Momentum"
        string_val: "pixel_link/score_from_conv5_3/weights/Momentum"
        string_val: "pixel_link/score_from_conv5_3/biases/Momentum"
        string_val: "pixel_link/score_from_conv4_3/weights/Momentum"
        string_val: "pixel_link/score_from_conv4_3/biases/Momentum"
        string_val: "pixel_link/score_from_conv3_3/weights/Momentum"
        string_val: "pixel_link/score_from_conv3_3/biases/Momentum"
        string_val: "conv1/conv1_1/weights/ExponentialMovingAverage"
        string_val: "conv1/conv1_1/biases/ExponentialMovingAverage"
        string_val: "conv1/conv1_2/weights/ExponentialMovingAverage"
        string_val: "conv1/conv1_2/biases/ExponentialMovingAverage"
        string_val: "conv2/conv2_1/weights/ExponentialMovingAverage"
        string_val: "conv2/conv2_1/biases/ExponentialMovingAverage"
        string_val: "conv2/conv2_2/weights/ExponentialMovingAverage"
        string_val: "conv2/conv2_2/biases/ExponentialMovingAverage"
        string_val: "conv3/conv3_1/weights/ExponentialMovingAverage"
        string_val: "conv3/conv3_1/biases/ExponentialMovingAverage"
        string_val: "conv3/conv3_2/weights/ExponentialMovingAverage"
        string_val: "conv3/conv3_2/biases/ExponentialMovingAverage"
        string_val: "conv3/conv3_3/weights/ExponentialMovingAverage"
        string_val: "conv3/conv3_3/biases/ExponentialMovingAverage"
        string_val: "conv4/conv4_1/weights/ExponentialMovingAverage"
        string_val: "conv4/conv4_1/biases/ExponentialMovingAverage"
        string_val: "conv4/conv4_2/weights/ExponentialMovingAverage"
        string_val: "conv4/conv4_2/biases/ExponentialMovingAverage"
        string_val: "conv4/conv4_3/weights/ExponentialMovingAverage"
        string_val: "conv4/conv4_3/biases/ExponentialMovingAverage"
        string_val: "conv5/conv5_1/weights/ExponentialMovingAverage"
        string_val: "conv5/conv5_1/biases/ExponentialMovingAverage"
        string_val: "conv5/conv5_2/weights/ExponentialMovingAverage"
        string_val: "conv5/conv5_2/biases/ExponentialMovingAverage"
        string_val: "conv5/conv5_3/weights/ExponentialMovingAverage"
        string_val: "conv5/conv5_3/biases/ExponentialMovingAverage"
        string_val: "fc6/weights/ExponentialMovingAverage"
        string_val: "fc6/biases/ExponentialMovingAverage"
        string_val: "fc7/weights/ExponentialMovingAverage"
        string_val: "fc7/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_fc7/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_fc7/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv5_3/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv5_3/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv4_3/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv4_3/biases/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv3_3/weights/ExponentialMovingAverage"
        string_val: "pixel_cls/score_from_conv3_3/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_fc7/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_fc7/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv5_3/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv5_3/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv4_3/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv4_3/biases/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv3_3/weights/ExponentialMovingAverage"
        string_val: "pixel_link/score_from_conv3_3/biases/ExponentialMovingAverage"
        string_val: "count_warning"
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 140
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Shape"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 140
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Shape_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 140
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Shape_2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "init_ops/report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "init_ops/report_uninitialized_variables/Const"
  input: "init_ops/report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 140
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "init_ops/report_uninitialized_variables/LogicalNot"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 140
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "init_ops/report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Reshape"
  input: "init_ops/report_uninitialized_variables/boolean_mask/Squeeze"
  input: "init_ops/report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_ops/init_1"
  op: "NoOp"
  input: "^count_warning/Assign"
  device: "/device:GPU:0"
}
node {
  name: "init_ops/init_all_tables"
  op: "NoOp"
}
node {
  name: "init_ops/group_deps/NoOp"
  op: "NoOp"
  input: "^init_ops/init_all_tables"
}
node {
  name: "init_ops/group_deps/NoOp_1"
  op: "NoOp"
  input: "^init_ops/init_1"
  device: "/device:GPU:0"
}
node {
  name: "init_ops/group_deps"
  op: "NoOp"
  input: "^init_ops/group_deps/NoOp"
  input: "^init_ops/group_deps/NoOp_1"
}
node {
  name: "train_step/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1000000
      }
    }
  }
}
node {
  name: "train_step/GreaterEqual"
  op: "GreaterEqual"
  input: "global_step/read"
  input: "train_step/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_step/FloorMod/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train_step/FloorMod"
  op: "FloorMod"
  input: "global_step/read"
  input: "train_step/FloorMod/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_step/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "train_step/Equal"
  op: "Equal"
  input: "train_step/FloorMod"
  input: "train_step/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 27
}
